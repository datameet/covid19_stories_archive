//Share Buttons On Click//
$(document).ready(function () {
    var count = 6;
    var countmin = 6;
    $('.iconAplus').click(function () {
        if (count < 12) {
            count += 1;
            $('.padiingDetails p').css("font-size", function () {
                return parseInt($(this).css('font-size')) + 2 + 'px';
            });
            $('.padiingDetails p').css("line-height", function () {
                return parseInt($(this).css('line-height')) + 3 + 'px';
            });
        }

    });
    $('.iconminus').click(function () {

        if (count > 6) {
            count -= 1;
            $('.padiingDetails p').css("font-size", function () {
                return parseInt($(this).css('font-size')) - 2 + 'px';
            });
            $('.padiingDetails p').css("line-height", function () {
                return parseInt($(this).css('line-height')) - 3 + 'px';
            });

        }

    });


});

function printDiv(divName) {

    var printContents = document.getElementById(divName).innerHTML;
    var originalContents = document.body.innerHTML;

    document.body.innerHTML = printContents;

    window.print();

    document.body.innerHTML = originalContents;
}

$(".share").on('click', function (e) {
    //   $(".at-share-btn").removeClass("no");
    if (e.target !== this) return;
    $('.share, .shareContainer .at-share-btn').toggleClass("active");
});

$(".share_three").on('click', function (e) {
    if (e.target !== this) return;
    $('.share_three, .shareContainer_two .at-share-btn').toggleClass("active");
});

$(".share_image").on('click', function (e) {
    //debugger;
    var data = $(this).data('image');
    var eData = e.delegateTarget.dataset.image;
    if (eData !== data) return;
    $('.share_image, .shareContainer_two .at-share-btn').toggleClass("active");
});

/**/// sticky div custom code //
window.onscroll = function (e) {
    var shareIcons = document.getElementById("shareIcons");
    var blogCountvar = document.getElementById("blogCountfix");
    var DivHeigh = $(".padiingDetails").height();
    var rightDivHeight = $(".addRight").height();
    var fullrightHeight = $(".addRight").height();
    if ($("div").hasClass('padiingDetails')) {
        var articaloffset = $(".padiingDetails").offset().top;
        if ($("#storyNext").hasClass("storyNextNew")) {
            var rightoffset = $(".storyNextNew").offset().top;
            var storyNextOffset = $(".storyNextNew").offset().top;
        }
        var articaloffsetbottm = $(".storyLastSec").offset().top - 300;
    }

    if (shareIcons != undefined) {
        var stop = (shareIcons.offsetTop + 300);
        var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
    }
    // left.offsetTop;

    if (shareIcons !== undefined && scrollTop > articaloffset) {
        shareIcons.classList.add("stick");
        // storyNext.classList.remove("stickBottom");
        if (blogCountvar != undefined) {
            blogCountvar.classList.add("stickliveblog");
        }
    }
    if (scrollTop > articaloffsetbottm - 100 || scrollTop < articaloffset) {
        shareIcons.classList.remove("stick");
        if (blogCountvar != undefined) {
            blogCountvar.classList.remove("stickliveblog");
        }
    }
    if($(".mainStoryPages")[0]){
        var scrollTopNew = 850;
        $(window).scroll(function (e) {

            var scrollEnd = $(".mainStoryPages").height() - 420;
            var adHeight = $('.story-xl-hd').height();

            var windowScroll = window.scrollY;

            if (windowScroll < scrollTopNew) {
                $('#storyNext').css({'position': 'absolute', 'top': 'initial'});
            } else {
                if (adHeight <= 250) {
                    if (windowScroll > scrollTopNew && windowScroll < scrollEnd) {
                        $('#storyNext').css({'position': 'fixed', 'top': '200px'});
                    }
                    else {
                        $('#storyNext').css({'position': 'absolute', 'top': (scrollEnd + 170)});
                    }
                }
                else {
                    var scroll6End = $(".mainStoryPages").height() - 550;
                    if (windowScroll > scrollTopNew && windowScroll < scroll6End) {
                        console.log('scrollEnd', scrollEnd, windowScroll);
                        $('#storyNext').css({'position': 'fixed', 'top': '380px'});
                    }
                    else {
                        console.log('scrollEnd', scrollEnd, windowScroll);
                        $('#storyNext').css({'position': 'absolute', 'top': (scroll6End + 294)});
                    }
                }
            }
        });
    }


    // if (scrollTop > articaloffset) {
    //
    //
    //
    //
    // }
    // if (scrollTop > articaloffsetbottm - 100 || scrollTop < articaloffset) {
    //
    // }


};
//
// /**/// sticky div custom code //
// window.onscroll = function (e) {
//     var shareIcons = document.getElementById("shareIcons");
//     var blogCountvar = document.getElementById("blogCountfix");
//     var DivHeigh = $(".padiingDetails").height();
//     var rightDivHeight = $(".addRight").height();
//     var fullrightHeight = $(".addRight").height();
//     if ($("div").hasClass('padiingDetails')) {
//         var articaloffset = $(".padiingDetails").offset().top;
//         var articaloffsetbottm = $(".storyLastSec").offset().top - 300;
//
//     }
//
//
//     if (shareIcons != undefined) {
//         var stop = (shareIcons.offsetTop + 300);
//         var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
//     }
//
//
//     // console.log(scrollTop, shareIcons.offsetTop);
//     // left.offsetTop;
//
//     if (shareIcons !== undefined && scrollTop > articaloffset) {
//         shareIcons.classList.add("stick");
//         if (blogCountvar != undefined) {
//             blogCountvar.classList.add("stickliveblog");
//         }
//     }
//     if (scrollTop > articaloffsetbottm - 100 || scrollTop < articaloffset) {
//         shareIcons.classList.remove("stick");
//         if (blogCountvar != undefined) {
//             blogCountvar.classList.remove("stickliveblog");
//         }
//     }
//
//     if (scrollTop > articaloffset) {
//
//         $('.storyNext').css('opacity', '1');
//         $('.storyNext').css('z-index', '9');
//         $('.storyNextMobile').css('opacity', "1");
//
//
//     }
//     if (scrollTop > articaloffsetbottm - 100 || scrollTop < articaloffset) {
//         $('.storyNext').css('opacity', "0");
//         $('.storyNext').css('z-index', "0");
//         $('.storyNextMobile').css('opacity', "0");
//
//     }
//
//
// };


if ($(window).width() < 1025) {
    var charLimit = 100;
    var charTwoLimit = 130;
}
else {
    var charLimit = 450;
    var charTwoLimit = 500;
}

function truncate(el) {
    var clone = el.children().first(),
        originalContent = el.html(),
        text = clone.text();

    if (clone[0].innerHTML.trim().length > charLimit) {
        el.attr("data-originalContent", originalContent);
        el.addClass('hasHidden');
        clone.text(text.substring(0, charLimit) + "...")
        el.empty().append(clone);
        el.append($("<span class='read-more'><a href='#' class='more'> Show More</a>"));
    }
}

function truncateTrue(el) {
    var clone = el.children().first(),
        originalContent = el.html(),
        text = clone.text();

    if (clone[0].innerHTML.trim().length > charTwoLimit) {
        el.attr("data-originalContent", originalContent);
        el.addClass('hasHidden');
        clone.text(text.substring(0, charTwoLimit) + "...")
        el.empty().append(clone);
        el.append($("<span class='read-more'><a href='#' class='more'> Show More</a>"));
    }
}

$("body").on("click", 'a.more', function (e) {
    e.preventDefault();
    var truncateElement = $(this).parent().parent();
    if (truncateElement.hasClass('hasHidden')) {
        $(truncateElement).html(truncateElement.attr("data-originalContent"));
        $(truncateElement).append($("<span class='read-more'><a href='#' class='more'> Show Less</a>"));
        truncateElement.removeClass('hasHidden');
    }
    else {
        $('.read-more', truncateElement).remove();
        truncate(truncateElement);
        truncateTrue(truncateElement);
    }
});

$(".truncate").each(function () {
    truncate($(this));
});

$(".truncateTrue").each(function () {
    truncateTrue($(this));
});





/**
 * Swiper 4.1.0
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://www.idangero.us/swiper/
 *
 * Copyright 2014-2018 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: January 13, 2018
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var e=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function t(t,i){var s=[],a=0;if(t&&!i&&t instanceof e)return t;if(t)if("string"==typeof t){var r,n,o=t.trim();if(o.indexOf("<")>=0&&o.indexOf(">")>=0){var l="div";for(0===o.indexOf("<li")&&(l="ul"),0===o.indexOf("<tr")&&(l="tbody"),0!==o.indexOf("<td")&&0!==o.indexOf("<th")||(l="tr"),0===o.indexOf("<tbody")&&(l="table"),0===o.indexOf("<option")&&(l="select"),(n=document.createElement(l)).innerHTML=o,a=0;a<n.childNodes.length;a+=1)s.push(n.childNodes[a])}else for(r=i||"#"!==t[0]||t.match(/[ .<>:~]/)?(i||document).querySelectorAll(t.trim()):[document.getElementById(t.trim().split("#")[1])],a=0;a<r.length;a+=1)r[a]&&s.push(r[a])}else if(t.nodeType||t===window||t===document)s.push(t);else if(t.length>0&&t[0].nodeType)for(a=0;a<t.length;a+=1)s.push(t[a]);return new e(s)}function i(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}t.fn=e.prototype,t.Class=e,t.Dom7=e;"resize scroll".split(" ");var s={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var a in e)this[s][a]=e[a],this[s].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var a=i.getAttribute("data-"+e);return a||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],i=arguments.length;i--;)e[i]=arguments[i];var s,a=e[0],r=e[1],n=e[2],o=e[3];function l(e){var i=e.target;if(i){var s=e.target.dom7EventData||[];if(s.unshift(e),t(i).is(r))n.apply(i,s);else for(var a=t(i).parents(),o=0;o<a.length;o+=1)t(a[o]).is(r)&&n.apply(a[o],s)}}function d(e){var t=e&&e.target?e.target.dom7EventData||[]:[];t.unshift(e),n.apply(this,t)}"function"==typeof e[1]&&(a=(s=e)[0],n=s[1],o=s[2],r=void 0),o||(o=!1);for(var h,p=a.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(r)for(h=0;h<p.length;h+=1)u.dom7LiveListeners||(u.dom7LiveListeners=[]),u.dom7LiveListeners.push({type:a,listener:n,proxyListener:l}),u.addEventListener(p[h],l,o);else for(h=0;h<p.length;h+=1)u.dom7Listeners||(u.dom7Listeners=[]),u.dom7Listeners.push({type:a,listener:n,proxyListener:d}),u.addEventListener(p[h],d,o)}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s=e[0],a=e[1],r=e[2],n=e[3];"function"==typeof e[1]&&(s=(i=e)[0],r=i[1],n=i[2],a=void 0),n||(n=!1);for(var o=s.split(" "),l=0;l<o.length;l+=1)for(var d=0;d<this.length;d+=1){var h=this[d];if(a){if(h.dom7LiveListeners)for(var p=0;p<h.dom7LiveListeners.length;p+=1)r?h.dom7LiveListeners[p].listener===r&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n):h.dom7LiveListeners[p].type===o[l]&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n)}else if(h.dom7Listeners)for(var c=0;c<h.dom7Listeners.length;c+=1)r?h.dom7Listeners[c].listener===r&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n):h.dom7Listeners[c].type===o[l]&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n)}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),s=e[1],a=0;a<i.length;a+=1)for(var r=0;r<this.length;r+=1){var n=void 0;try{n=new window.CustomEvent(i[a],{detail:s,bubbles:!0,cancelable:!0})}catch(e){(n=document.createEvent("Event")).initEvent(i[a],!0,!0),n.detail=s}this[r].dom7EventData=e.filter(function(e,t){return t>0}),this[r].dispatchEvent(n),this[r].dom7EventData=[],delete this[r].dom7EventData}return this},transitionEnd:function(e){var t,i=["webkitTransitionEnd","transitionend"],s=this;function a(r){if(r.target===this)for(e.call(this,r),t=0;t<i.length;t+=1)s.off(i[t],a)}if(e)for(t=0;t<i.length;t+=1)s.on(i[t],a);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),i=document.body,s=e.clientTop||i.clientTop||0,a=e.clientLeft||i.clientLeft||0,r=e===window?window.scrollY:e.scrollTop,n=e===window?window.scrollX:e.scrollLeft;return{top:t.top+r-s,left:t.left+n-a}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return window.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(i){var s,a,r=this[0];if(!r||void 0===i)return!1;if("string"==typeof i){if(r.matches)return r.matches(i);if(r.webkitMatchesSelector)return r.webkitMatchesSelector(i);if(r.msMatchesSelector)return r.msMatchesSelector(i);for(s=t(i),a=0;a<s.length;a+=1)if(s[a]===r)return!0;return!1}if(i===document)return r===document;if(i===window)return r===window;if(i.nodeType||i instanceof e){for(s=i.nodeType?[i]:i,a=0;a<s.length;a+=1)if(s[a]===r)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(t){if(void 0===t)return this;var i,s=this.length;return new e(t>s-1?[]:t<0?(i=s+t)<0?[]:[this[i]]:[this[t]])},append:function(){for(var t,i=[],s=arguments.length;s--;)i[s]=arguments[s];for(var a=0;a<i.length;a+=1){t=i[a];for(var r=0;r<this.length;r+=1)if("string"==typeof t){var n=document.createElement("div");for(n.innerHTML=t;n.firstChild;)this[r].appendChild(n.firstChild)}else if(t instanceof e)for(var o=0;o<t.length;o+=1)this[r].appendChild(t[o]);else this[r].appendChild(t)}return this},prepend:function(t){var i,s;for(i=0;i<this.length;i+=1)if("string"==typeof t){var a=document.createElement("div");for(a.innerHTML=t,s=a.childNodes.length-1;s>=0;s-=1)this[i].insertBefore(a.childNodes[s],this[i].childNodes[0])}else if(t instanceof e)for(s=0;s<t.length;s+=1)this[i].insertBefore(t[s],this[i].childNodes[0]);else this[i].insertBefore(t,this[i].childNodes[0]);return this},next:function(i){return this.length>0?i?this[0].nextElementSibling&&t(this[0].nextElementSibling).is(i)?new e([this[0].nextElementSibling]):new e([]):this[0].nextElementSibling?new e([this[0].nextElementSibling]):new e([]):new e([])},nextAll:function(i){var s=[],a=this[0];if(!a)return new e([]);for(;a.nextElementSibling;){var r=a.nextElementSibling;i?t(r).is(i)&&s.push(r):s.push(r),a=r}return new e(s)},prev:function(i){if(this.length>0){var s=this[0];return i?s.previousElementSibling&&t(s.previousElementSibling).is(i)?new e([s.previousElementSibling]):new e([]):s.previousElementSibling?new e([s.previousElementSibling]):new e([])}return new e([])},prevAll:function(i){var s=[],a=this[0];if(!a)return new e([]);for(;a.previousElementSibling;){var r=a.previousElementSibling;i?t(r).is(i)&&s.push(r):s.push(r),a=r}return new e(s)},parent:function(e){for(var s=[],a=0;a<this.length;a+=1)null!==this[a].parentNode&&(e?t(this[a].parentNode).is(e)&&s.push(this[a].parentNode):s.push(this[a].parentNode));return t(i(s))},parents:function(e){for(var s=[],a=0;a<this.length;a+=1)for(var r=this[a].parentNode;r;)e?t(r).is(e)&&s.push(r):s.push(r),r=r.parentNode;return t(i(s))},closest:function(t){var i=this;return void 0===t?new e([]):(i.is(t)||(i=i.parents(t).eq(0)),i)},find:function(t){for(var i=[],s=0;s<this.length;s+=1)for(var a=this[s].querySelectorAll(t),r=0;r<a.length;r+=1)i.push(a[r]);return new e(i)},children:function(s){for(var a=[],r=0;r<this.length;r+=1)for(var n=this[r].childNodes,o=0;o<n.length;o+=1)s?1===n[o].nodeType&&t(n[o]).is(s)&&a.push(n[o]):1===n[o].nodeType&&a.push(n[o]);return new e(i(a))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],i=arguments.length;i--;)e[i]=arguments[i];var s,a;for(s=0;s<e.length;s+=1){var r=t(e[s]);for(a=0;a<r.length;a+=1)this[this.length]=r[a],this.length+=1}return this},styles:function(){return this[0]?window.getComputedStyle(this[0],null):{}}};Object.keys(s).forEach(function(e){t.fn[e]=s[e]});var a,r,n,o="undefined"==typeof window?{navigator:{userAgent:""},location:{},history:{},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{}},Image:function(){},Date:function(){},screen:{}}:window,l={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,s,a;void 0===t&&(t="x");var r=o.getComputedStyle(e,null);return o.WebKitCSSMatrix?((s=r.transform||r.webkitTransform).split(",").length>6&&(s=s.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),a=new o.WebKitCSSMatrix("none"===s?"":s)):i=(a=r.MozTransform||r.OTransform||r.MsTransform||r.msTransform||r.transform||r.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(s=o.WebKitCSSMatrix?a.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(s=o.WebKitCSSMatrix?a.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),s||0},parseUrlQuery:function(e){var t,i,s,a,r={},n=e||o.location.href;if("string"==typeof n&&n.length)for(a=(i=(n=n.indexOf("?")>-1?n.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<a;t+=1)s=i[t].replace(/#\S+/g,"").split("="),r[decodeURIComponent(s[0])]=void 0===s[1]?void 0:decodeURIComponent(s[1])||"";return r},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var a=e[s];if(void 0!==a&&null!==a)for(var r=Object.keys(Object(a)),n=0,o=r.length;n<o;n+=1){var d=r[n],h=Object.getOwnPropertyDescriptor(a,d);void 0!==h&&h.enumerable&&(l.isObject(i[d])&&l.isObject(a[d])?l.extend(i[d],a[d]):!l.isObject(i[d])&&l.isObject(a[d])?(i[d]={},l.extend(i[d],a[d])):i[d]=a[d])}}return i}},d="undefined"==typeof document?{addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return{}},querySelectorAll:function(){return[]},createElement:function(){return{style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,h=(n=d.createElement("div"),{touch:o.Modernizr&&!0===o.Modernizr.touch||!!("ontouchstart"in o||o.DocumentTouch&&d instanceof o.DocumentTouch),pointerEvents:!(!o.navigator.pointerEnabled&&!o.PointerEvent),prefixedPointerEvents:!!o.navigator.msPointerEnabled,transition:(r=n.style,"transition"in r||"webkitTransition"in r||"MozTransition"in r),transforms3d:o.Modernizr&&!0===o.Modernizr.csstransforms3d||(a=n.style,"webkitPerspective"in a||"MozPerspective"in a||"OPerspective"in a||"MsPerspective"in a||"perspective"in a),flexbox:function(){for(var e=n.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in o||"WebkitMutationObserver"in o,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});o.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in o}),p=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})},c={components:{configurable:!0}};p.prototype.on=function(e,t){var i=this;return"function"!=typeof t?i:(e.split(" ").forEach(function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e].push(t)}),i)},p.prototype.once=function(e,t){var i=this;if("function"!=typeof t)return i;return i.on(e,function s(){for(var a=[],r=arguments.length;r--;)a[r]=arguments[r];t.apply(i,a),i.off(e,s)})},p.prototype.off=function(e,t){var i=this;return e.split(" ").forEach(function(e){void 0===t?i.eventsListeners[e]=[]:i.eventsListeners[e].forEach(function(s,a){s===t&&i.eventsListeners[e].splice(a,1)})}),i},p.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a,r=this;return r.eventsListeners?("string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a=r):(i=e[0].events,s=e[0].data,a=e[0].context||r),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(a,s)})}}),r):r},p.prototype.useModulesParams=function(e){var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i];s.params&&l.extend(e,s.params)})},p.prototype.useModules=function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i],a=e[i]||{};s.instance&&Object.keys(s.instance).forEach(function(e){var i=s.instance[e];t[e]="function"==typeof i?i.bind(t):i}),s.on&&t.on&&Object.keys(s.on).forEach(function(e){t.on(e,s.on[e])}),s.create&&s.create.bind(t)(a)})},c.components.set=function(e){this.use&&this.use(e)},p.installModule=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var a=e.name||Object.keys(s.prototype.modules).length+"_"+l.now();return s.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach(function(t){s.prototype[t]=e.proto[t]}),e.static&&Object.keys(e.static).forEach(function(t){s[t]=e.static[t]}),e.install&&e.install.apply(s,t),s},p.use=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach(function(e){return s.installModule(e)}),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(p,c);var u={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),l.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,s=this.rtl,a=this.wrongRTL,r=t.children("."+this.params.slideClass),n=this.virtual&&e.virtual.enabled?this.virtual.slides.length:r.length,o=[],d=[],p=[],c=e.slidesOffsetBefore;"function"==typeof c&&(c=e.slidesOffsetBefore.call(this));var u=e.slidesOffsetAfter;"function"==typeof u&&(u=e.slidesOffsetAfter.call(this));var f=n,v=this.snapGrid.length,m=this.snapGrid.length,g=e.spaceBetween,b=-c,w=0,y=0;if(void 0!==i){var x,T;"string"==typeof g&&g.indexOf("%")>=0&&(g=parseFloat(g.replace("%",""))/100*i),this.virtualSize=-g,s?r.css({marginLeft:"",marginTop:""}):r.css({marginRight:"",marginBottom:""}),e.slidesPerColumn>1&&(x=Math.floor(n/e.slidesPerColumn)===n/this.params.slidesPerColumn?n:Math.ceil(n/e.slidesPerColumn)*e.slidesPerColumn,"auto"!==e.slidesPerView&&"row"===e.slidesPerColumnFill&&(x=Math.max(x,e.slidesPerView*e.slidesPerColumn)));for(var E,S=e.slidesPerColumn,C=x/S,M=C-(e.slidesPerColumn*C-n),z=0;z<n;z+=1){T=0;var P=r.eq(z);if(e.slidesPerColumn>1){var k=void 0,$=void 0,L=void 0;"column"===e.slidesPerColumnFill?(L=z-($=Math.floor(z/S))*S,($>M||$===M&&L===S-1)&&(L+=1)>=S&&(L=0,$+=1),k=$+L*x/S,P.css({"-webkit-box-ordinal-group":k,"-moz-box-ordinal-group":k,"-ms-flex-order":k,"-webkit-order":k,order:k})):$=z-(L=Math.floor(z/C))*C,P.css("margin-"+(this.isHorizontal()?"top":"left"),0!==L&&e.spaceBetween&&e.spaceBetween+"px").attr("data-swiper-column",$).attr("data-swiper-row",L)}"none"!==P.css("display")&&("auto"===e.slidesPerView?(T=this.isHorizontal()?P.outerWidth(!0):P.outerHeight(!0),e.roundLengths&&(T=Math.floor(T))):(T=(i-(e.slidesPerView-1)*g)/e.slidesPerView,e.roundLengths&&(T=Math.floor(T)),r[z]&&(this.isHorizontal()?r[z].style.width=T+"px":r[z].style.height=T+"px")),r[z]&&(r[z].swiperSlideSize=T),p.push(T),e.centeredSlides?(b=b+T/2+w/2+g,0===w&&0!==z&&(b=b-i/2-g),0===z&&(b=b-i/2-g),Math.abs(b)<.001&&(b=0),y%e.slidesPerGroup==0&&o.push(b),d.push(b)):(y%e.slidesPerGroup==0&&o.push(b),d.push(b),b=b+T+g),this.virtualSize+=T+g,w=T,y+=1)}if(this.virtualSize=Math.max(this.virtualSize,i)+u,s&&a&&("slide"===e.effect||"coverflow"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+"px"}),h.flexbox&&!e.setWrapperSize||(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"})),e.slidesPerColumn>1&&(this.virtualSize=(T+e.spaceBetween)*x,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"}),e.centeredSlides)){E=[];for(var I=0;I<o.length;I+=1)o[I]<this.virtualSize+o[0]&&E.push(o[I]);o=E}if(!e.centeredSlides){E=[];for(var D=0;D<o.length;D+=1)o[D]<=this.virtualSize-i&&E.push(o[D]);o=E,Math.floor(this.virtualSize-i)-Math.floor(o[o.length-1])>1&&o.push(this.virtualSize-i)}0===o.length&&(o=[0]),0!==e.spaceBetween&&(this.isHorizontal()?s?r.css({marginLeft:g+"px"}):r.css({marginRight:g+"px"}):r.css({marginBottom:g+"px"})),l.extend(this,{slides:r,snapGrid:o,slidesGrid:d,slidesSizesGrid:p}),n!==f&&this.emit("slidesLengthChange"),o.length!==v&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),d.length!==m&&this.emit("slidesGridLengthChange"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(){var e,t=[],i=0;if("auto"!==this.params.slidesPerView&&this.params.slidesPerView>1)for(e=0;e<Math.ceil(this.params.slidesPerView);e+=1){var s=this.activeIndex+e;if(s>this.slides.length)break;t.push(this.slides.eq(s)[0])}else t.push(this.slides.eq(this.activeIndex)[0]);for(e=0;e<t.length;e+=1)if(void 0!==t[e]){var a=t[e].offsetHeight;i=a>i?a:i}i&&this.$wrapperEl.css("height",i+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.slides,s=this.rtl;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;s&&(a=e),i.removeClass(t.slideVisibleClass);for(var r=0;r<i.length;r+=1){var n=i[r],o=(a+(t.centeredSlides?this.minTranslate():0)-n.swiperSlideOffset)/(n.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility){var l=-(a-n.swiperSlideOffset),d=l+this.slidesSizesGrid[r];(l>=0&&l<this.size||d>0&&d<=this.size||l<=0&&d>=this.size)&&i.eq(r).addClass(t.slideVisibleClass)}n.progress=s?-o:o}}},updateProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),s=this.progress,a=this.isBeginning,r=this.isEnd,n=a,o=r;0===i?(s=0,a=!0,r=!0):(a=(s=(e-this.minTranslate())/i)<=0,r=s>=1),l.extend(this,{progress:s,isBeginning:a,isEnd:r}),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesProgress(e),a&&!n&&this.emit("reachBeginning toEdge"),r&&!o&&this.emit("reachEnd toEdge"),(n&&!a||o&&!r)&&this.emit("fromEdge"),this.emit("progress",s)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,a=this.activeIndex,r=this.realIndex,n=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=n?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+a+'"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtl?this.translate:-this.translate,s=this.slidesGrid,a=this.snapGrid,r=this.params,n=this.activeIndex,o=this.realIndex,d=this.snapIndex,h=e;if(void 0===h){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?i>=s[p]&&i<s[p+1]-(s[p+1]-s[p])/2?h=p:i>=s[p]&&i<s[p+1]&&(h=p+1):i>=s[p]&&(h=p);r.normalizeSlideIndex&&(h<0||void 0===h)&&(h=0)}if((t=a.indexOf(i)>=0?a.indexOf(i):Math.floor(h/r.slidesPerGroup))>=a.length&&(t=a.length-1),h!==n){var c=parseInt(this.slides.eq(h).attr("data-swiper-slide-index")||h,10);l.extend(this,{snapIndex:t,realIndex:c,previousIndex:n,activeIndex:h}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==c&&this.emit("realIndexChange"),this.emit("slideChange")}else t!==d&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var i=this.params,s=t(e.target).closest("."+i.slideClass)[0],a=!1;if(s)for(var r=0;r<this.slides.length;r+=1)this.slides[r]===s&&(a=!0);if(!s||!a)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=s,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(t(s).attr("data-swiper-slide-index"),10):this.clickedIndex=t(s).index(),i.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},f={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtl,s=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;var r=l.getTranslate(a[0],e);return i&&(r=-r),r||0},setTranslate:function(e,t){var i=this.rtl,s=this.params,a=this.$wrapperEl,r=this.progress,n=0,o=0;this.isHorizontal()?n=i?-e:e:o=e,s.roundLengths&&(n=Math.floor(n),o=Math.floor(o)),s.virtualTranslate||(h.transforms3d?a.transform("translate3d("+n+"px, "+o+"px, 0px)"):a.transform("translate("+n+"px, "+o+"px)")),this.translate=this.isHorizontal()?n:o;var l=this.maxTranslate()-this.minTranslate();(0===l?0:(e-this.minTranslate())/l)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},v={setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e){void 0===e&&(e=!0);var t=this.activeIndex,i=this.params,s=this.previousIndex;i.autoHeight&&this.updateAutoHeight(),this.emit("transitionStart"),e&&t!==s&&(this.emit("slideChangeTransitionStart"),t>s?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart"))},transitionEnd:function(e){void 0===e&&(e=!0);var t=this.activeIndex,i=this.previousIndex;this.animating=!1,this.setTransition(0),this.emit("transitionEnd"),e&&t!==i&&(this.emit("slideChangeTransitionEnd"),t>i?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd"))}},m={slideTo:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=this,r=e;r<0&&(r=0);var n=a.params,o=a.snapGrid,l=a.slidesGrid,d=a.previousIndex,p=a.activeIndex,c=a.rtl,u=a.$wrapperEl,f=Math.floor(r/n.slidesPerGroup);f>=o.length&&(f=o.length-1),(p||n.initialSlide||0)===(d||0)&&i&&a.emit("beforeSlideChangeStart");var v=-o[f];if(a.updateProgress(v),n.normalizeSlideIndex)for(var m=0;m<l.length;m+=1)-Math.floor(100*v)>=Math.floor(100*l[m])&&(r=m);if(a.initialized){if(!a.allowSlideNext&&v<a.translate&&v<a.minTranslate())return!1;if(!a.allowSlidePrev&&v>a.translate&&v>a.maxTranslate()&&(p||0)!==r)return!1}return c&&-v===a.translate||!c&&v===a.translate?(a.updateActiveIndex(r),n.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==n.effect&&a.setTranslate(v),!1):(0!==t&&h.transition?(a.setTransition(t),a.setTranslate(v),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i),a.animating||(a.animating=!0,u.transitionEnd(function(){a&&!a.destroyed&&a.transitionEnd(i)}))):(a.setTransition(0),a.setTranslate(v),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i),a.transitionEnd(i)),!0)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)):this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex-1,e,t,i)):this.slideTo(this.activeIndex-1,e,t,i)},slideReset:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);return this.slideTo(this.activeIndex,e,t,i)},slideToClickedSlide:function(){var e,i=this,s=i.params,a=i.$wrapperEl,r="auto"===s.slidesPerView?i.slidesPerViewDynamic():s.slidesPerView,n=i.clickedIndex;if(s.loop){if(i.animating)return;e=parseInt(t(i.clickedSlide).attr("data-swiper-slide-index"),10),s.centeredSlides?n<i.loopedSlides-r/2||n>i.slides.length-i.loopedSlides+r/2?(i.loopFix(),n=a.children("."+s.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+s.slideDuplicateClass+")").eq(0).index(),l.nextTick(function(){i.slideTo(n)})):i.slideTo(n):n>i.slides.length-r?(i.loopFix(),n=a.children("."+s.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+s.slideDuplicateClass+")").eq(0).index(),l.nextTick(function(){i.slideTo(n)})):i.slideTo(n)}else i.slideTo(n)}},g={loopCreate:function(){var e=this,i=e.params,s=e.$wrapperEl;s.children("."+i.slideClass+"."+i.slideDuplicateClass).remove();var a=s.children("."+i.slideClass);if(i.loopFillGroupWithBlank){var r=i.slidesPerGroup-a.length%i.slidesPerGroup;if(r!==i.slidesPerGroup){for(var n=0;n<r;n+=1){var o=t(d.createElement("div")).addClass(i.slideClass+" "+i.slideBlankClass);s.append(o)}a=s.children("."+i.slideClass)}}"auto"!==i.slidesPerView||i.loopedSlides||(i.loopedSlides=a.length),e.loopedSlides=parseInt(i.loopedSlides||i.slidesPerView,10),e.loopedSlides+=i.loopAdditionalSlides,e.loopedSlides>a.length&&(e.loopedSlides=a.length);var l=[],h=[];a.each(function(i,s){var r=t(s);i<e.loopedSlides&&h.push(s),i<a.length&&i>=a.length-e.loopedSlides&&l.push(s),r.attr("data-swiper-slide-index",i)});for(var p=0;p<h.length;p+=1)s.append(t(h[p].cloneNode(!0)).addClass(i.slideDuplicateClass));for(var c=l.length-1;c>=0;c-=1)s.prepend(t(l[c].cloneNode(!0)).addClass(i.slideDuplicateClass))},loopFix:function(){var e,t=this.params,i=this.activeIndex,s=this.slides,a=this.loopedSlides,r=this.allowSlidePrev,n=this.allowSlideNext;this.allowSlidePrev=!0,this.allowSlideNext=!0,i<a?(e=s.length-3*a+i,e+=a,this.slideTo(e,0,!1,!0)):("auto"===t.slidesPerView&&i>=2*a||i>s.length-2*t.slidesPerView)&&(e=-s.length+i+a,e+=a,this.slideTo(e,0,!1,!0)),this.allowSlidePrev=r,this.allowSlideNext=n},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),i.removeAttr("data-swiper-slide-index")}},b={setGrabCursor:function(e){if(!h.touch&&this.params.simulateTouch){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){h.touch||(this.el.style.cursor="")}},w={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&h.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var a=s+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);a=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),this.slideTo(a,0,!1)},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(this.loopDestroy(),this.slides=i.children("."+t.slideClass));var a,r=s;if("object"==typeof e&&"length"in e){for(var n=0;n<e.length;n+=1)a=e[n],this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1);r=Math.max(r,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1),r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},y=function(){var e=o.navigator.userAgent,t={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:o.cordova||o.phonegap,phonegap:o.cordova||o.phonegap},i=e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),s=e.match(/(Android);?[\s\/]+([\d.]+)?/),a=e.match(/(iPad).*OS\s([\d_]+)/),r=e.match(/(iPod)(.*OS\s([\d_]+))?/),n=!a&&e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(i&&(t.os="windows",t.osVersion=i[2],t.windows=!0),s&&!i&&(t.os="android",t.osVersion=s[2],t.android=!0,t.androidChrome=e.toLowerCase().indexOf("chrome")>=0),(a||n||r)&&(t.os="ios",t.ios=!0),n&&!r&&(t.osVersion=n[2].replace(/_/g,"."),t.iphone=!0),a&&(t.osVersion=a[2].replace(/_/g,"."),t.ipad=!0),r&&(t.osVersion=r[3]?r[3].replace(/_/g,"."):null,t.iphone=!0),t.ios&&t.osVersion&&e.indexOf("Version/")>=0&&"10"===t.osVersion.split(".")[0]&&(t.osVersion=e.toLowerCase().split("version/")[1].split(" ")[0]),t.desktop=!(t.os||t.android||t.webView),t.webView=(n||a||r)&&e.match(/.*AppleWebKit(?!.*Safari)/i),t.os&&"ios"===t.os){var l=t.osVersion.split("."),h=d.querySelector('meta[name="viewport"]');t.minimalUi=!t.webView&&(r||n)&&(1*l[0]==7?1*l[1]>=1:1*l[0]>7)&&h&&h.getAttribute("content").indexOf("minimal-ui")>=0}return t.pixelRatio=o.devicePixelRatio||1,t}(),x=function(e){var i=this.touchEventsData,s=this.params,a=this.touches,r=e;if(r.originalEvent&&(r=r.originalEvent),i.isTouchEvent="touchstart"===r.type,(i.isTouchEvent||!("which"in r)||3!==r.which)&&(!i.isTouched||!i.isMoved))if(s.noSwiping&&t(r.target).closest("."+s.noSwipingClass)[0])this.allowClick=!0;else if(!s.swipeHandler||t(r).closest(s.swipeHandler)[0]){a.currentX="touchstart"===r.type?r.targetTouches[0].pageX:r.pageX,a.currentY="touchstart"===r.type?r.targetTouches[0].pageY:r.pageY;var n=a.currentX,o=a.currentY;if(!(y.ios&&!y.cordova&&s.iOSEdgeSwipeDetection&&n<=s.iOSEdgeSwipeThreshold&&n>=window.screen.width-s.iOSEdgeSwipeThreshold)){if(l.extend(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),a.startX=n,a.startY=o,i.touchStartTime=l.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,s.threshold>0&&(i.allowThresholdMove=!1),"touchstart"!==r.type){var h=!0;t(r.target).is(i.formElements)&&(h=!1),d.activeElement&&t(d.activeElement).is(i.formElements)&&d.activeElement.blur(),h&&this.allowTouchMove&&r.preventDefault()}this.emit("touchStart",r)}}},T=function(e){var i=this.touchEventsData,s=this.params,a=this.touches,r=this.rtl,n=e;if(n.originalEvent&&(n=n.originalEvent),!i.isTouchEvent||"mousemove"!==n.type){var o="touchmove"===n.type?n.targetTouches[0].pageX:n.pageX,h="touchmove"===n.type?n.targetTouches[0].pageY:n.pageY;if(n.preventedByNestedSwiper)return a.startX=o,void(a.startY=h);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(l.extend(a,{startX:o,startY:h,currentX:o,currentY:h}),i.touchStartTime=l.now()));if(i.isTouchEvent&&s.touchReleaseOnEdges&&!s.loop)if(this.isVertical()){if(h<a.startY&&this.translate<=this.maxTranslate()||h>a.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(o<a.startX&&this.translate<=this.maxTranslate()||o>a.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&d.activeElement&&n.target===d.activeElement&&t(n.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",n),!(n.targetTouches&&n.targetTouches.length>1)){a.currentX=o,a.currentY=h;var p,c=a.currentX-a.startX,u=a.currentY-a.startY;if(void 0===i.isScrolling)this.isHorizontal()&&a.currentY===a.startY||this.isVertical()&&a.currentX===a.startX?i.isScrolling=!1:c*c+u*u>=25&&(p=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,i.isScrolling=this.isHorizontal()?p>s.touchAngle:90-p>s.touchAngle);if(i.isScrolling&&this.emit("touchMoveOpposite",n),"undefined"==typeof startMoving&&(a.currentX===a.startX&&a.currentY===a.startY||(i.startMoving=!0)),i.isTouched)if(i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,n.preventDefault(),s.touchMoveStopPropagation&&!s.nested&&n.stopPropagation(),i.isMoved||(s.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!s.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",n)),this.emit("sliderMove",n),i.isMoved=!0;var f=this.isHorizontal()?c:u;a.diff=f,f*=s.touchRatio,r&&(f=-f),this.swipeDirection=f>0?"prev":"next",i.currentTranslate=f+i.startTranslate;var v=!0,m=s.resistanceRatio;if(s.touchReleaseOnEdges&&(m=0),f>0&&i.currentTranslate>this.minTranslate()?(v=!1,s.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+f,m))):f<0&&i.currentTranslate<this.maxTranslate()&&(v=!1,s.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-f,m))),v&&(n.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),s.threshold>0){if(!(Math.abs(f)>s.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,a.startX=a.currentX,a.startY=a.currentY,i.currentTranslate=i.startTranslate,void(a.diff=this.isHorizontal()?a.currentX-a.startX:a.currentY-a.startY)}s.followFinger&&((s.freeMode||s.watchSlidesProgress||s.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),s.freeMode&&(0===i.velocities.length&&i.velocities.push({position:a[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:a[this.isHorizontal()?"currentX":"currentY"],time:l.now()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}},E=function(e){var t=this,i=t.touchEventsData,s=t.params,a=t.touches,r=t.rtl,n=t.$wrapperEl,o=t.slidesGrid,d=t.snapGrid,h=e;if(h.originalEvent&&(h=h.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",h),i.allowTouchCallbacks=!1,i.isTouched){s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,c=l.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(h),t.emit("tap",h),u<300&&c-i.lastClickTime>300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=l.nextTick(function(){t&&!t.destroyed&&t.emit("click",h)},300)),u<300&&c-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",h))),i.lastClickTime=l.now(),l.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,void(i.isMoved=!1);if(i.isTouched=!1,i.isMoved=!1,p=s.followFinger?r?t.translate:-t.translate:-i.currentTranslate,s.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<d.length?t.slideTo(d.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(i.velocities.length>1){var f=i.velocities.pop(),v=i.velocities.pop(),m=f.position-v.position,g=f.time-v.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(g>150||l.now()-f.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var b=1e3*s.freeModeMomentumRatio,w=t.velocity*b,y=t.translate+w;r&&(y=-y);var x,T=!1,E=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(y<t.maxTranslate())s.freeModeMomentumBounce?(y+t.maxTranslate()<-E&&(y=t.maxTranslate()-E),x=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.maxTranslate();else if(y>t.minTranslate())s.freeModeMomentumBounce?(y-t.minTranslate()>E&&(y=t.minTranslate()+E),x=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.minTranslate();else if(s.freeModeSticky){for(var S,C=0;C<d.length;C+=1)if(d[C]>-y){S=C;break}y=-(y=Math.abs(d[S]-y)<Math.abs(d[S-1]-y)||"next"===t.swipeDirection?d[S]:d[S-1])}if(0!==t.velocity)b=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity);else if(s.freeModeSticky)return void t.slideReset();s.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(b),t.setTranslate(y),t.transitionStart(),t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),t.setTranslate(x),n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(y),t.setTransition(b),t.setTranslate(y),t.transitionStart(),t.animating||(t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}(!s.freeModeMomentum||u>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var M=0,z=t.slidesSizesGrid[0],P=0;P<o.length;P+=s.slidesPerGroup)void 0!==o[P+s.slidesPerGroup]?p>=o[P]&&p<o[P+s.slidesPerGroup]&&(M=P,z=o[P+s.slidesPerGroup]-o[P]):p>=o[P]&&(M=P,z=o[o.length-1]-o[o.length-2]);var k=(p-o[M])/z;if(u>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(k>=s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M)),"prev"===t.swipeDirection&&(k>1-s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(M+s.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(M)}}}},S=function(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev;if(this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),e.freeMode){var a=Math.min(Math.max(this.translate,this.maxTranslate()),this.minTranslate());this.setTranslate(a),this.updateActiveIndex(),this.updateSlidesClasses(),e.autoHeight&&this.updateAutoHeight()}else this.updateSlidesClasses(),("auto"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0);this.allowSlidePrev=s,this.allowSlideNext=i}},C=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))};var M={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},z={update:u,translate:f,transition:v,slide:m,loop:g,grabCursor:b,manipulation:w,events:{attachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl;this.onTouchStart=x.bind(this),this.onTouchMove=T.bind(this),this.onTouchEnd=E.bind(this),this.onClick=C.bind(this);var a="container"===e.touchEventsTarget?i:s,r=!!e.nested;if(h.pointerEvents||h.prefixedPointerEvents)a.addEventListener(t.start,this.onTouchStart,!1),(h.touch?a:d).addEventListener(t.move,this.onTouchMove,r),(h.touch?a:d).addEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!("touchstart"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};a.addEventListener(t.start,this.onTouchStart,n),a.addEventListener(t.move,this.onTouchMove,h.passiveListener?{passive:!1,capture:r}:r),a.addEventListener(t.end,this.onTouchEnd,n)}(e.simulateTouch&&!y.ios&&!y.android||e.simulateTouch&&!h.touch&&y.ios)&&(a.addEventListener("mousedown",this.onTouchStart,!1),d.addEventListener("mousemove",this.onTouchMove,r),d.addEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&a.addEventListener("click",this.onClick,!0),this.on("resize observerUpdate",S)},detachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl,a="container"===e.touchEventsTarget?i:s,r=!!e.nested;if(h.pointerEvents||h.prefixedPointerEvents)a.removeEventListener(t.start,this.onTouchStart,!1),(h.touch?a:d).removeEventListener(t.move,this.onTouchMove,r),(h.touch?a:d).removeEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!("onTouchStart"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};a.removeEventListener(t.start,this.onTouchStart,n),a.removeEventListener(t.move,this.onTouchMove,r),a.removeEventListener(t.end,this.onTouchEnd,n)}(e.simulateTouch&&!y.ios&&!y.android||e.simulateTouch&&!h.touch&&y.ios)&&(a.removeEventListener("mousedown",this.onTouchStart,!1),d.removeEventListener("mousemove",this.onTouchMove,r),d.removeEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&a.removeEventListener("click",this.onClick,!0),this.off("resize observerUpdate",S)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.loopedSlides;void 0===t&&(t=0);var i=this.params,s=i.breakpoints;if(s&&(!s||0!==Object.keys(s).length)){var a=this.getBreakpoint(s);if(a&&this.currentBreakpoint!==a){var r=a in s?s[a]:this.originalParams,n=i.loop&&r.slidesPerView!==i.slidesPerView;l.extend(this.params,r),l.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=a,n&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-t+this.loopedSlides,0,!1)),this.emit("breakpoint",r)}}},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var s=0;s<i.length;s+=1){var a=i[s];a>=o.innerWidth&&!t&&(t=a)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.isLocked;this.isLocked=1===this.snapGrid.length,this.allowTouchMove=!this.isLocked,e&&e!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,i=this.rtl,s=this.$el,a=[];a.push(t.direction),t.freeMode&&a.push("free-mode"),h.flexbox||a.push("no-flexbox"),t.autoHeight&&a.push("autoheight"),i&&a.push("rtl"),t.slidesPerColumn>1&&a.push("multirow"),y.android&&a.push("android"),y.ios&&a.push("ios"),(h.pointerEvents||h.prefixedPointerEvents)&&a.push("wp8-"+t.direction),a.forEach(function(i){e.push(t.containerModifierClass+i)}),s.addClass(e.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,s,a,r){var n;function l(){r&&r()}e.complete&&a?l():t?((n=new o.Image).onload=l,n.onerror=l,s&&(n.sizes=s),i&&(n.srcset=i),t&&(n.src=t)):l()},preloadImages:function(){var e=this;function t(){void 0!==e&&null!==e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},P={},k=function(e){function i(){for(var s,a,r,n=[],o=arguments.length;o--;)n[o]=arguments[o];1===n.length&&n[0].constructor&&n[0].constructor===Object?a=n[0]:(s=(r=n)[0],a=r[1]);a||(a={}),a=l.extend({},a),s&&!a.el&&(a.el=s),e.call(this,a),Object.keys(z).forEach(function(e){Object.keys(z[e]).forEach(function(t){i.prototype[t]||(i.prototype[t]=z[e][t])})});var d=this;void 0===d.modules&&(d.modules={}),Object.keys(d.modules).forEach(function(e){var t=d.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s)return;if(!(i in a&&"enabled"in s))return;!0===a[i]&&(a[i]={enabled:!0}),"object"!=typeof a[i]||"enabled"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}});var p=l.extend({},M);d.useModulesParams(p),d.params=l.extend({},p,P,a),d.originalParams=l.extend({},d.params),d.passedParams=l.extend({},a);var c=t(d.params.el);if(s=c[0]){if(c.length>1){var u=[];return c.each(function(e,t){var s=l.extend({},a,{el:t});u.push(new i(s))}),u}s.swiper=d,c.data("swiper",d);var f,v,m=c.children("."+d.params.wrapperClass);return l.extend(d,{$el:c,el:s,$wrapperEl:m,wrapperEl:m[0],classNames:[],slides:t(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===d.params.direction},isVertical:function(){return"vertical"===d.params.direction},rtl:"horizontal"===d.params.direction&&("rtl"===s.dir.toLowerCase()||"rtl"===c.css("direction")),wrongRTL:"-webkit-box"===m.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,progress:0,velocity:0,animating:!1,allowSlideNext:d.params.allowSlideNext,allowSlidePrev:d.params.allowSlidePrev,touchEvents:(f=["touchstart","touchmove","touchend"],v=["mousedown","mousemove","mouseup"],h.pointerEvents?v=["pointerdown","pointermove","pointerup"]:h.prefixedPointerEvents&&(v=["MSPointerDown","MSPointerMove","MSPointerUp"]),{start:h.touch||!d.params.simulateTouch?f[0]:v[0],move:h.touch||!d.params.simulateTouch?f[1]:v[1],end:h.touch||!d.params.simulateTouch?f[2]:v[2]}),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:l.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:d.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),d.useModules(),d.params.init&&d.init(),d}}e&&(i.__proto__=e),i.prototype=Object.create(e&&e.prototype),i.prototype.constructor=i;var s={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return i.prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,a=this.activeIndex,r=1;if(e.centeredSlides){for(var n,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!n&&(r+=1,(o+=t[l].swiperSlideSize)>s&&(n=!0));for(var d=a-1;d>=0;d-=1)t[d]&&!n&&(r+=1,(o+=t[d].swiperSlideSize)>s&&(n=!0))}else for(var h=a+1;h<t.length;h+=1)i[h]-i[a]<s&&(r+=1);return r},i.prototype.update=function(){var e=this;e&&!e.destroyed&&(e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(t(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||t(),e.emit("update"));function t(){var t=e.rtl?-1*e.translate:e.translate,i=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(i),e.updateActiveIndex(),e.updateSlidesClasses()}},i.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},i.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,a=i.$el,r=i.$wrapperEl,n=i.slides;i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),n&&n.length&&n.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),l.deleteProps(i)),i.destroyed=!0},i.extendDefaults=function(e){l.extend(P,e)},s.extendedDefaults.get=function(){return P},s.defaults.get=function(){return M},s.Class.get=function(){return e},s.$.get=function(){return t},Object.defineProperties(i,s),i}(p),$={name:"device",proto:{device:y},static:{device:y}},L={name:"support",proto:{support:h},static:{support:h}},I=function(){return{isSafari:(e=o.navigator.userAgent.toLowerCase(),e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(o.navigator.userAgent)};var e}(),D={name:"browser",proto:{browser:I},static:{browser:I}},O={name:"resize",create:function(){var e=this;l.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){o.addEventListener("resize",this.resize.resizeHandler),o.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){o.removeEventListener("resize",this.resize.resizeHandler),o.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},A={func:o.MutationObserver||o.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new(0,A.func)(function(e){e.forEach(function(e){i.emit("observerUpdate",e)})});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(h.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:!1}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},H={name:"observer",params:{observer:!1,observeParents:!1},create:function(){l.extend(this,{observer:{init:A.init.bind(this),attach:A.attach.bind(this),destroy:A.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},N={update:function(e){var t=this,i=t.params,s=i.slidesPerView,a=i.slidesPerGroup,r=i.centeredSlides,n=t.virtual,o=n.from,d=n.to,h=n.slides,p=n.slidesGrid,c=n.renderSlide,u=n.offset;t.updateActiveIndex();var f,v,m,g=t.activeIndex||0;f=t.rtl&&t.isHorizontal()?"right":t.isHorizontal()?"left":"top",r?(v=Math.floor(s/2)+a,m=Math.floor(s/2)+a):(v=s+(a-1),m=a);var b=Math.max((g||0)-m,0),w=Math.min((g||0)+v,h.length-1),y=(t.slidesGrid[b]||0)-(t.slidesGrid[0]||0);function x(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(l.extend(t.virtual,{from:b,to:w,offset:y,slidesGrid:t.slidesGrid}),o===b&&d===w&&!e)return t.slidesGrid!==p&&y!==u&&t.slides.css(f,y+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:y,from:b,to:w,slides:function(){for(var e=[],t=b;t<=w;t+=1)e.push(h[t]);return e}()}),void x();var T=[],E=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var S=o;S<=d;S+=1)(S<b||S>w)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+S+'"]').remove();for(var C=0;C<h.length;C+=1)C>=b&&C<=w&&(void 0===d||e?E.push(C):(C>d&&E.push(C),C<o&&T.push(C)));E.forEach(function(e){t.$wrapperEl.append(c(h[e],e))}),T.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(c(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(f,y+"px"),x()},renderSlide:function(e,i){var s=this.params.virtual;if(s.cache&&this.virtual.cache[i])return this.virtual.cache[i];var a=s.renderSlide?t(s.renderSlide.call(this,e,i)):t('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+i+'">'+e+"</div>");return a.attr("data-swiper-slide-index")||a.attr("data-swiper-slide-index",i),s.cache&&(this.virtual.cache[i]=a),a},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){if(this.virtual.slides.unshift(e),this.params.virtual.cache){var t=this.virtual.cache,i={};Object.keys(t).forEach(function(e){i[e+1]=t[e]}),this.virtual.cache=i}this.virtual.update(!0),this.slideNext(0)}},X={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){l.extend(this,{virtual:{update:N.update.bind(this),appendSlide:N.appendSlide.bind(this),prependSlide:N.prependSlide.bind(this),renderSlide:N.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};l.extend(this.params,e),l.extend(this.originalParams,e),this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},Y={handle:function(e){var t=e;t.originalEvent&&(t=t.originalEvent);var i=t.keyCode||t.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===i||this.isVertical()&&40===i))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===i||this.isVertical()&&38===i))return!1;if(!(t.shiftKey||t.altKey||t.ctrlKey||t.metaKey||d.activeElement&&d.activeElement.nodeName&&("input"===d.activeElement.nodeName.toLowerCase()||"textarea"===d.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(37===i||39===i||38===i||40===i)){var s=!1;if(this.$el.parents("."+this.params.slideClass).length>0&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var a=o.pageXOffset,r=o.pageYOffset,n=o.innerWidth,l=o.innerHeight,h=this.$el.offset();this.rtl&&(h.left-=this.$el[0].scrollLeft);for(var p=[[h.left,h.top],[h.left+this.width,h.top],[h.left,h.top+this.height],[h.left+this.width,h.top+this.height]],c=0;c<p.length;c+=1){var u=p[c];u[0]>=a&&u[0]<=a+n&&u[1]>=r&&u[1]<=r+l&&(s=!0)}if(!s)return}this.isHorizontal()?(37!==i&&39!==i||(t.preventDefault?t.preventDefault():t.returnValue=!1),(39===i&&!this.rtl||37===i&&this.rtl)&&this.slideNext(),(37===i&&!this.rtl||39===i&&this.rtl)&&this.slidePrev()):(38!==i&&40!==i||(t.preventDefault?t.preventDefault():t.returnValue=!1),40===i&&this.slideNext(),38===i&&this.slidePrev()),this.emit("keyPress",i)}},enable:function(){this.keyboard.enabled||(t(d).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(t(d).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},G={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){l.extend(this,{keyboard:{enabled:!1,enable:Y.enable.bind(this),disable:Y.disable.bind(this),handle:Y.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var B={lastScrollTime:l.now(),event:o.navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":function(){var e="onwheel"in d;if(!e){var t=d.createElement("div");t.setAttribute("onwheel","return;"),e="function"==typeof t.onwheel}return!e&&d.implementation&&d.implementation.hasFeature&&!0!==d.implementation.hasFeature("","")&&(e=d.implementation.hasFeature("Events.wheel","3.0")),e}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,s=0,a=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,a=10*i,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(s=e.deltaX),(s||a)&&e.deltaMode&&(1===e.deltaMode?(s*=40,a*=40):(s*=800,a*=800)),s&&!t&&(t=s<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:a}},handle:function(e){var t=e,i=this,s=i.params.mousewheel;t.originalEvent&&(t=t.originalEvent);var a=0,r=i.rtl?-1:1,n=B.normalize(t);if(s.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(n.pixelX)>Math.abs(n.pixelY)))return!0;a=n.pixelX*r}else{if(!(Math.abs(n.pixelY)>Math.abs(n.pixelX)))return!0;a=n.pixelY}else a=Math.abs(n.pixelX)>Math.abs(n.pixelY)?-n.pixelX*r:-n.pixelY;if(0===a)return!0;if(s.invert&&(a=-a),i.params.freeMode){var d=i.getTranslate()+a*s.sensitivity,h=i.isBeginning,p=i.isEnd;if(d>=i.minTranslate()&&(d=i.minTranslate()),d<=i.maxTranslate()&&(d=i.maxTranslate()),i.setTransition(0),i.setTranslate(d),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!h&&i.isBeginning||!p&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=l.nextTick(function(){i.slideReset()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.stopAutoplay(),0===d||d===i.maxTranslate())return!0}else{if(l.now()-i.mousewheel.lastScrollTime>60)if(a<0)if(i.isEnd&&!i.params.loop||i.animating){if(s.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(s.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new o.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){if(!B.event)return!1;if(this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=t(this.params.mousewheel.eventsTarged)),e.on(B.event,this.mousewheel.handle),this.mousewheel.enabled=!0,!0},disable:function(){if(!B.event)return!1;if(!this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=t(this.params.mousewheel.eventsTarged)),e.off(B.event,this.mousewheel.handle),this.mousewheel.enabled=!1,!0}},V={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&s.length>0&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&i.length>0&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},init:function(){var e,i,s=this,a=s.params.navigation;(a.nextEl||a.prevEl)&&(a.nextEl&&(e=t(a.nextEl),s.params.uniqueNavElements&&"string"==typeof a.nextEl&&e.length>1&&1===s.$el.find(a.nextEl).length&&(e=s.$el.find(a.nextEl))),a.prevEl&&(i=t(a.prevEl),s.params.uniqueNavElements&&"string"==typeof a.prevEl&&i.length>1&&1===s.$el.find(a.prevEl).length&&(i=s.$el.find(a.prevEl))),e&&e.length>0&&e.on("click",function(e){e.preventDefault(),s.isEnd&&!s.params.loop||s.slideNext()}),i&&i.length>0&&i.on("click",function(e){e.preventDefault(),s.isBeginning&&!s.params.loop||s.slidePrev()}),l.extend(s.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:i,prevEl:i&&i[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click"),i.removeClass(this.params.navigation.disabledClass))}},R={update:function(){var e=this.rtl,i=this.params.pagination;if(i.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var s,a=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,r=this.pagination.$el,n=this.params.loop?Math.ceil((a-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((s=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>a-1-2*this.loopedSlides&&(s-=a-2*this.loopedSlides),s>n-1&&(s-=n),s<0&&"bullets"!==this.params.paginationType&&(s=n+s)):s=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===i.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var o=this.pagination.bullets;if(i.dynamicBullets&&(this.pagination.bulletSize=o.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),r.css(this.isHorizontal()?"width":"height",5*this.pagination.bulletSize+"px")),o.removeClass(i.bulletActiveClass+" "+i.bulletActiveClass+"-next "+i.bulletActiveClass+"-next-next "+i.bulletActiveClass+"-prev "+i.bulletActiveClass+"-prev-prev"),r.length>1)o.each(function(e,a){var r=t(a);r.index()===s&&(r.addClass(i.bulletActiveClass),i.dynamicBullets&&(r.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),r.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next")))});else{var l=o.eq(s);l.addClass(i.bulletActiveClass),i.dynamicBullets&&(l.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),l.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next"))}if(i.dynamicBullets){var d=Math.min(o.length,5),h=(this.pagination.bulletSize*d-this.pagination.bulletSize)/2-s*this.pagination.bulletSize,p=e?"right":"left";o.css(this.isHorizontal()?p:"top",h+"px")}}if("fraction"===i.type&&(r.find("."+i.currentClass).text(s+1),r.find("."+i.totalClass).text(n)),"progressbar"===i.type){var c=(s+1)/n,u=c,f=1;this.isHorizontal()||(f=c,u=1),r.find("."+i.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+u+") scaleY("+f+")").transition(this.params.speed)}"custom"===i.type&&i.renderCustom?(r.html(i.renderCustom(this,s+1,n)),this.emit("paginationRender",this,r[0])):this.emit("paginationUpdate",this,r[0]),r[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<a;r+=1)e.renderBullet?s+=e.renderBullet.call(this,r,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e=this,i=e.params.pagination;if(i.el){var s=t(i.el);0!==s.length&&(e.params.uniqueNavElements&&"string"==typeof i.el&&s.length>1&&1===e.$el.find(i.el).length&&(s=e.$el.find(i.el)),"bullets"===i.type&&i.clickable&&s.addClass(i.clickableClass),s.addClass(i.modifierClass+i.type),"bullets"===i.type&&i.dynamicBullets&&s.addClass(""+i.modifierClass+i.type+"-dynamic"),i.clickable&&s.on("click","."+i.bulletClass,function(i){i.preventDefault();var s=t(this).index()*e.params.slidesPerGroup;e.params.loop&&(s+=e.loopedSlides),e.slideTo(s)}),l.extend(e.pagination,{$el:s,el:s[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},F={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtl,i=this.progress,s=e.dragSize,a=e.trackSize,r=e.$dragEl,n=e.$el,o=this.params.scrollbar,l=s,d=(a-s)*i;t&&this.isHorizontal()?(d=-d)>0?(l=s-d,d=0):-d+s>a&&(l=a+d):d<0?(l=s+d,d=0):d+s>a&&(l=a-d),this.isHorizontal()?(h.transforms3d?r.transform("translate3d("+d+"px, 0, 0)"):r.transform("translateX("+d+"px)"),r[0].style.width=l+"px"):(h.transforms3d?r.transform("translate3d(0px, "+d+"px, 0)"):r.transform("translateY("+d+"px)"),r[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),n[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){n[0].style.opacity=0,n.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=this.size/this.virtualSize,n=r*(a/this.size);s="auto"===this.params.scrollbar.dragSize?a*r:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=r>=1?"none":"",this.params.scrollbarHide&&(i[0].style.opacity=0),l.extend(e,{trackSize:a,divider:r,moveDivider:n,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,i=this.scrollbar,s=i.$el,a=i.dragSize,r=i.trackSize;t=((this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-s.offset()[this.isHorizontal()?"left":"top"]-a/2)/(r-a),t=Math.max(Math.min(t,1),0),this.rtl&&(t=1-t);var n=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(n),this.setTranslate(n),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),s.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css("opacity",1),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=l.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideReset())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar.$el,i=h.touch?e[0]:document;e.on(this.scrollbar.dragEvents.start,this.scrollbar.onDragStart),t(i).on(this.scrollbar.dragEvents.move,this.scrollbar.onDragMove),t(i).on(this.scrollbar.dragEvents.end,this.scrollbar.onDragEnd)}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar.$el,i=h.touch?e[0]:document;e.off(this.scrollbar.dragEvents.start),t(i).off(this.scrollbar.dragEvents.move),t(i).off(this.scrollbar.dragEvents.end)}},init:function(){var e=this;if(e.params.scrollbar.el){var i=e.scrollbar,s=e.$el,a=e.touchEvents,r=e.params.scrollbar,n=t(r.el);e.params.uniqueNavElements&&"string"==typeof r.el&&n.length>1&&1===s.find(r.el).length&&(n=s.find(r.el));var o=n.find(".swiper-scrollbar-drag");0===o.length&&(o=t('<div class="swiper-scrollbar-drag"></div>'),n.append(o)),e.scrollbar.dragEvents=!1!==e.params.simulateTouch||h.touch?a:{start:"mousedown",move:"mousemove",end:"mouseup"},l.extend(i,{$el:n,el:n[0],$dragEl:o,dragEl:o[0]}),r.draggable&&i.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},W={setTransform:function(e,i){var s=this.rtl,a=t(e),r=s?-1:1,n=a.attr("data-swiper-parallax")||"0",o=a.attr("data-swiper-parallax-x"),l=a.attr("data-swiper-parallax-y"),d=a.attr("data-swiper-parallax-scale"),h=a.attr("data-swiper-parallax-opacity");if(o||l?(o=o||"0",l=l||"0"):this.isHorizontal()?(o=n,l="0"):(l=n,o="0"),o=o.indexOf("%")>=0?parseInt(o,10)*i*r+"%":o*i*r+"px",l=l.indexOf("%")>=0?parseInt(l,10)*i+"%":l*i+"px",void 0!==h&&null!==h){var p=h-(h-1)*(1-Math.abs(i));a[0].style.opacity=p}if(void 0===d||null===d)a.transform("translate3d("+o+", "+l+", 0px)");else{var c=d-(d-1)*(1-Math.abs(i));a.transform("translate3d("+o+", "+l+", 0px) scale("+c+")")}},setTranslate:function(){var e=this,i=e.$el,s=e.slides,a=e.progress,r=e.snapGrid;i.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,a)}),s.each(function(i,s){var n=s.progress;e.params.slidesPerGroup>1&&"auto"!==e.params.slidesPerView&&(n+=Math.ceil(i/2)-a*(r.length-1)),n=Math.min(Math.max(n,-1),1),t(s).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,n)})})},setTransition:function(e){void 0===e&&(e=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(i,s){var a=t(s),r=parseInt(a.attr("data-swiper-parallax-duration"),10)||e;0===e&&(r=0),a.transition(r)})}},j={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var i=this.params.zoom,s=this.zoom,a=s.gesture;if(s.fakeGestureTouched=!1,s.fakeGestureMoved=!1,!h.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;s.fakeGestureTouched=!0,a.scaleStart=j.getDistanceBetweenTouches(e)}a.$slideEl&&a.$slideEl.length||(a.$slideEl=t(this),0===a.$slideEl.length&&(a.$slideEl=this.slides.eq(this.activeIndex)),a.$imageEl=a.$slideEl.find("img, svg, canvas"),a.$imageWrapEl=a.$imageEl.parent("."+i.containerClass),a.maxRatio=a.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==a.$imageWrapEl.length)?(a.$imageEl.transition(0),this.zoom.isScaling=!0):a.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=j.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(h.gestures?this.zoom.scale=e.scale*i.currentScale:i.scale=s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!y.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(y.android&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=l.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=l.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX),this.rtl&&(s.startY=-s.startY));var r=s.width*t.scale,n=s.height*t.scale;if(!(r<i.slideWidth&&n<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-r/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-n/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=s.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=s.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(s.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(s.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(s.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(s.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=s.touchesCurrent.x,a.prevPositionY=s.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,r=300,n=s.x*a,o=i.currentX+n,l=s.y*r,d=i.currentY+l;0!==s.x&&(a=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(r=Math.abs((d-i.currentY)/s.y));var h=Math.max(a,r);i.currentX=o,i.currentY=d;var p=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var i,s,a,r,n,o,l,d,h,p,c,u,f,v,m,g,b=this.zoom,w=this.params.zoom,y=b.gesture,x=b.image;(y.$slideEl||(y.$slideEl=this.clickedSlide?t(this.clickedSlide):this.slides.eq(this.activeIndex),y.$imageEl=y.$slideEl.find("img, svg, canvas"),y.$imageWrapEl=y.$imageEl.parent("."+w.containerClass)),y.$imageEl&&0!==y.$imageEl.length)&&(y.$slideEl.addClass(""+w.zoomedSlideClass),void 0===x.touchesStart.x&&e?(i="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,s="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(i=x.touchesStart.x,s=x.touchesStart.y),b.scale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,b.currentScale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,e?(m=y.$slideEl[0].offsetWidth,g=y.$slideEl[0].offsetHeight,a=y.$slideEl.offset().left+m/2-i,r=y.$slideEl.offset().top+g/2-s,l=y.$imageEl[0].offsetWidth,d=y.$imageEl[0].offsetHeight,h=l*b.scale,p=d*b.scale,f=-(c=Math.min(m/2-h/2,0)),v=-(u=Math.min(g/2-p/2,0)),n=a*b.scale,o=r*b.scale,n<c&&(n=c),n>f&&(n=f),o<u&&(o=u),o>v&&(o=v)):(n=0,o=0),y.$imageWrapEl.transition(300).transform("translate3d("+n+"px, "+o+"px,0)"),y.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+b.scale+")"))},out:function(){var e=this.zoom,i=this.params.zoom,s=e.gesture;s.$slideEl||(s.$slideEl=this.clickedSlide?t(this.clickedSlide):this.slides.eq(this.activeIndex),s.$imageEl=s.$slideEl.find("img, svg, canvas"),s.$imageWrapEl=s.$imageEl.parent("."+i.containerClass)),s.$imageEl&&0!==s.$imageEl.length&&(e.scale=1,e.currentScale=1,s.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),s.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),s.$slideEl.removeClass(""+i.zoomedSlideClass),s.$slideEl=void 0)},enable:function(){var e=this,i=e.zoom;if(!i.enabled){i.enabled=!0;var s=e.slides,a=!("touchstart"!==e.touchEvents.start||!h.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(s.on("gesturestart",i.onGestureStart,a),s.on("gesturechange",i.onGestureChange,a),s.on("gestureend",i.onGestureEnd,a)):"touchstart"===e.touchEvents.start&&(s.on(e.touchEvents.start,i.onGestureStart,a),s.on(e.touchEvents.move,i.onGestureChange,a),s.on(e.touchEvents.end,i.onGestureEnd,a)),e.slides.each(function(s,a){var r=t(a);r.find("."+e.params.zoom.containerClass).length>0&&r.on(e.touchEvents.move,i.onTouchMove)})}},disable:function(){var e=this,i=e.zoom;if(i.enabled){e.zoom.enabled=!1;var s=e.slides,a=!("touchstart"!==e.touchEvents.start||!h.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(s.off("gesturestart",i.onGestureStart,a),s.off("gesturechange",i.onGestureChange,a),s.off("gestureend",i.onGestureEnd,a)):"touchstart"===e.touchEvents.start&&(s.off(e.touchEvents.start,i.onGestureStart,a),s.off(e.touchEvents.move,i.onGestureChange,a),s.off(e.touchEvents.end,i.onGestureEnd,a)),e.slides.each(function(s,a){var r=t(a);r.find("."+e.params.zoom.containerClass).length>0&&r.off(e.touchEvents.move,i.onTouchMove)})}}},q={loadInSlide:function(e,i){void 0===i&&(i=!0);var s=this,a=s.params.lazy;if(void 0!==e&&0!==s.slides.length){var r=s.virtual&&s.params.virtual.enabled?s.$wrapperEl.children("."+s.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):s.slides.eq(e),n=r.find("."+a.elementClass+":not(."+a.loadedClass+"):not(."+a.loadingClass+")");!r.hasClass(a.elementClass)||r.hasClass(a.loadedClass)||r.hasClass(a.loadingClass)||(n=n.add(r[0])),0!==n.length&&n.each(function(e,n){var o=t(n);o.addClass(a.loadingClass);var l=o.attr("data-background"),d=o.attr("data-src"),h=o.attr("data-srcset"),p=o.attr("data-sizes");s.loadImage(o[0],d||l,h,p,!1,function(){if(void 0!==s&&null!==s&&s&&(!s||s.params)&&!s.destroyed){if(l?(o.css("background-image",'url("'+l+'")'),o.removeAttr("data-background")):(h&&(o.attr("srcset",h),o.removeAttr("data-srcset")),p&&(o.attr("sizes",p),o.removeAttr("data-sizes")),d&&(o.attr("src",d),o.removeAttr("data-src"))),o.addClass(a.loadedClass).removeClass(a.loadingClass),r.find("."+a.preloaderClass).remove(),s.params.loop&&i){var e=r.attr("data-swiper-slide-index");if(r.hasClass(s.params.slideDuplicateClass)){var t=s.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+s.params.slideDuplicateClass+")");s.lazy.loadInSlide(t.index(),!1)}else{var n=s.$wrapperEl.children("."+s.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');s.lazy.loadInSlide(n.index(),!1)}}s.emit("lazyImageReady",r[0],o[0])}}),s.emit("lazyImageLoad",r[0],o[0])})}},load:function(){var e=this,i=e.$wrapperEl,s=e.params,a=e.slides,r=e.activeIndex,n=e.virtual&&s.virtual.enabled,o=s.lazy,l=s.slidesPerView;function d(e){if(n){if(i.children("."+s.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(a[e])return!0;return!1}function h(e){return n?t(e).attr("data-swiper-slide-index"):t(e).index()}if("auto"===l&&(l=0),e.lazy.initialImageLoaded||(e.lazy.initialImageLoaded=!0),e.params.watchSlidesVisibility)i.children("."+s.slideVisibleClass).each(function(i,s){var a=n?t(s).attr("data-swiper-slide-index"):t(s).index();e.lazy.loadInSlide(a)});else if(l>1)for(var p=r;p<r+l;p+=1)d(p)&&e.lazy.loadInSlide(p);else e.lazy.loadInSlide(r);if(o.loadPrevNext)if(l>1||o.loadPrevNextAmount&&o.loadPrevNextAmount>1){for(var c=o.loadPrevNextAmount,u=l,f=Math.min(r+u+Math.max(c,u),a.length),v=Math.max(r-Math.max(u,c),0),m=r+l;m<f;m+=1)d(m)&&e.lazy.loadInSlide(m);for(var g=v;g<r;g+=1)d(g)&&e.lazy.loadInSlide(g)}else{var b=i.children("."+s.slideNextClass);b.length>0&&e.lazy.loadInSlide(h(b));var w=i.children("."+s.slidePrevClass);w.length>0&&e.lazy.loadInSlide(h(w))}}},K={LinearSpline:function(e,t){var i,s,a,r,n,o=function(e,t){for(s=-1,i=e.length;i-s>1;)e[a=i+s>>1]<=t?s=a:i=a;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new K.LinearSpline(this.slidesGrid,e.slidesGrid):new K.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,a=this,r=a.controller.control;function n(e){var t=e.rtl&&"horizontal"===e.params.direction?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),s=-a.controller.spline.interpolate(-t)),s&&"container"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),s=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof k&&n(r[o]);else r instanceof k&&t!==r&&n(r)},setTransition:function(e,t){var i,s=this,a=s.controller.control;function r(t){t.setTransition(e,s),0!==e&&(t.transitionStart(),t.$wrapperEl.transitionEnd(function(){a&&(t.params.loop&&"slide"===s.params.controller.by&&t.loopFix(),t.transitionEnd())}))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==t&&a[i]instanceof k&&r(a[i]);else a instanceof k&&t!==a&&r(a)}},U={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var i=this.params.a11y;if(13===e.keyCode){var s=t(e.target);this.navigation&&this.navigation.$nextEl&&s.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(i.lastSlideMessage):this.a11y.notify(i.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&s.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(i.firstSlideMessage):this.a11y.notify(i.prevSlideMessage)),this.pagination&&s.is("."+this.params.pagination.bulletClass)&&s[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&i.length>0&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&t.length>0&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t))}},updatePagination:function(){var e=this,i=e.params.a11y;e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.bullets.each(function(s,a){var r=t(a);e.a11y.makeElFocusable(r),e.a11y.addElRole(r,"button"),e.a11y.addElLabel(r,i.paginationBulletMessage.replace(/{{index}}/,r.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&this.a11y.liveRegion.length>0&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},_={init:function(){if(this.params.history){if(!o.history||!o.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=_.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||o.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||o.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=_.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=o.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),s=_.slugify(i.attr("data-history"));o.location.pathname.includes(e)||(s=e+"/"+s);var a=o.history.state;a&&a.value===s||(this.params.history.replaceState?o.history.replaceState({value:s},null,s):o.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,a=this.slides.length;s<a;s+=1){var r=this.slides.eq(s);if(_.slugify(r.attr("data-history"))===t&&!r.hasClass(this.params.slideDuplicateClass)){var n=r.index();this.slideTo(n,e,i)}}else this.slideTo(0,e,i)}},Z={onHashCange:function(){var e=d.location.hash.replace("#","");e!==this.slides.eq(this.activeIndex).attr("data-hash")&&this.slideTo(this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index())},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&o.history&&o.history.replaceState)o.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||"");else{var e=this.slides.eq(this.activeIndex),t=e.attr("data-hash")||e.attr("data-history");d.location.hash=t||""}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=d.location.hash.replace("#","");if(e)for(var i=0,s=this.slides.length;i<s;i+=1){var a=this.slides.eq(i);if((a.attr("data-hash")||a.attr("data-history"))===e&&!a.hasClass(this.params.slideDuplicateClass)){var r=a.index();this.slideTo(r,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&t(o).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&t(o).off("hashchange",this.hashNavigation.onHashCange)}},Q={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=l.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){return void 0===this.autoplay.timeout&&(!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0))},stop:function(){return!!this.autoplay.running&&(void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?t.$wrapperEl.transitionEnd(function(){t&&!t.destroyed&&(t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}):(t.autoplay.paused=!1,t.autoplay.run())))}},J={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var a=0;this.isHorizontal()||(a=s,s=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform("translate3d("+s+"px, "+a+"px, 0px)")}},setTransition:function(e){var t=this,i=t.slides,s=t.$wrapperEl;if(i.transition(e),t.params.virtualTranslate&&0!==e){var a=!1;i.transitionEnd(function(){if(!a&&t&&!t.destroyed){a=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)s.trigger(e[i])}})}}},ee={setTranslate:function(){var e,i=this.$el,s=this.$wrapperEl,a=this.slides,r=this.width,n=this.height,o=this.rtl,l=this.size,d=this.params.cubeEffect,h=this.isHorizontal(),p=this.virtual&&this.params.virtual.enabled,c=0;d.shadow&&(h?(0===(e=s.find(".swiper-cube-shadow")).length&&(e=t('<div class="swiper-cube-shadow"></div>'),s.append(e)),e.css({height:r+"px"})):0===(e=i.find(".swiper-cube-shadow")).length&&(e=t('<div class="swiper-cube-shadow"></div>'),i.append(e)));for(var u=0;u<a.length;u+=1){var f=a.eq(u),v=u;p&&(v=parseInt(f.attr("data-swiper-slide-index"),10));var m=90*v,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var b=Math.max(Math.min(f[0].progress,1),-1),w=0,y=0,x=0;v%4==0?(w=4*-g*l,x=0):(v-1)%4==0?(w=0,x=4*-g*l):(v-2)%4==0?(w=l+4*g*l,x=l):(v-3)%4==0&&(w=-l,x=3*l+4*l*g),o&&(w=-w),h||(y=w,w=0);var T="rotateX("+(h?0:-m)+"deg) rotateY("+(h?m:0)+"deg) translate3d("+w+"px, "+y+"px, "+x+"px)";if(b<=1&&b>-1&&(c=90*v+90*b,o&&(c=90*-v-90*b)),f.transform(T),d.slideShadows){var E=h?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),S=h?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===E.length&&(E=t('<div class="swiper-slide-shadow-'+(h?"left":"top")+'"></div>'),f.append(E)),0===S.length&&(S=t('<div class="swiper-slide-shadow-'+(h?"right":"bottom")+'"></div>'),f.append(S)),E.length&&(E[0].style.opacity=Math.max(-b,0)),S.length&&(S[0].style.opacity=Math.max(b,0))}}if(s.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(h)e.transform("translate3d(0px, "+(r/2+d.shadowOffset)+"px, "+-r/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var C=Math.abs(c)-90*Math.floor(Math.abs(c)/90),M=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),z=d.shadowScale,P=d.shadowScale/M,k=d.shadowOffset;e.transform("scale3d("+z+", 1, "+P+") translate3d(0px, "+(n/2+k)+"px, "+-n/2/P+"px) rotateX(-90deg)")}var $=I.isSafari||I.isUiWebView?-l/2:0;s.transform("translate3d(0px,0,"+$+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},te={setTranslate:function(){for(var e=this.slides,i=0;i<e.length;i+=1){var s=e.eq(i),a=s[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(s[0].progress,1),-1));var r=-180*a,n=0,o=-s[0].swiperSlideOffset,l=0;if(this.isHorizontal()?this.rtl&&(r=-r):(l=o,o=0,n=-r,r=0),s[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===d.length&&(d=t('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),s.append(d)),0===h.length&&(h=t('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),s.append(h)),d.length&&(d[0].style.opacity=Math.max(-a,0)),h.length&&(h[0].style.opacity=Math.max(a,0))}s.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+n+"deg) rotateY("+r+"deg)")}},setTransition:function(e){var t=this,i=t.slides,s=t.activeIndex,a=t.$wrapperEl;if(i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),t.params.virtualTranslate&&0!==e){var r=!1;i.eq(s).transitionEnd(function(){if(!r&&t&&!t.destroyed){r=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)a.trigger(e[i])}})}}},ie={setTranslate:function(){for(var e=this.width,i=this.height,s=this.slides,a=this.$wrapperEl,r=this.slidesSizesGrid,n=this.params.coverflowEffect,o=this.isHorizontal(),l=this.translate,d=o?e/2-l:i/2-l,p=o?n.rotate:-n.rotate,c=n.depth,u=0,f=s.length;u<f;u+=1){var v=s.eq(u),m=r[u],g=(d-v[0].swiperSlideOffset-m/2)/m*n.modifier,b=o?p*g:0,w=o?0:p*g,y=-c*Math.abs(g),x=o?0:n.stretch*g,T=o?n.stretch*g:0;Math.abs(T)<.001&&(T=0),Math.abs(x)<.001&&(x=0),Math.abs(y)<.001&&(y=0),Math.abs(b)<.001&&(b=0),Math.abs(w)<.001&&(w=0);var E="translate3d("+T+"px,"+x+"px,"+y+"px)  rotateX("+w+"deg) rotateY("+b+"deg)";if(v.transform(E),v[0].style.zIndex=1-Math.abs(Math.round(g)),n.slideShadows){var S=o?v.find(".swiper-slide-shadow-left"):v.find(".swiper-slide-shadow-top"),C=o?v.find(".swiper-slide-shadow-right"):v.find(".swiper-slide-shadow-bottom");0===S.length&&(S=t('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),v.append(S)),0===C.length&&(C=t('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),v.append(C)),S.length&&(S[0].style.opacity=g>0?g:0),C.length&&(C[0].style.opacity=-g>0?-g:0)}}(h.pointerEvents||h.prefixedPointerEvents)&&(a[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},se=[$,L,D,O,H,X,G,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){l.extend(this,{mousewheel:{enabled:!1,enable:B.enable.bind(this),disable:B.disable.bind(this),handle:B.handle.bind(this),lastScrollTime:l.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){l.extend(this,{navigation:{init:V.init.bind(this),update:V.update.bind(this),destroy:V.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var i=this.navigation,s=i.$nextEl,a=i.$prevEl;!this.params.navigation.hideOnClick||t(e.target).is(a)||t(e.target).is(s)||(s&&s.toggleClass(this.params.navigation.hiddenClass),a&&a.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,type:"bullets",dynamicBullets:!1,bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){l.extend(this,{pagination:{init:R.init.bind(this),render:R.render.bind(this),update:R.update.bind(this),destroy:R.destroy.bind(this)}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&this.pagination.$el.length>0&&!t(e.target).hasClass(this.params.pagination.bulletClass)&&this.pagination.$el.toggleClass(this.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock"}},create:function(){l.extend(this,{scrollbar:{init:F.init.bind(this),destroy:F.destroy.bind(this),updateSize:F.updateSize.bind(this),setTranslate:F.setTranslate.bind(this),setTransition:F.setTransition.bind(this),enableDraggable:F.enableDraggable.bind(this),disableDraggable:F.disableDraggable.bind(this),setDragPosition:F.setDragPosition.bind(this),onDragStart:F.onDragStart.bind(this),onDragMove:F.onDragMove.bind(this),onDragEnd:F.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){l.extend(this,{parallax:{setTransform:W.setTransform.bind(this),setTranslate:W.setTranslate.bind(this),setTransition:W.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.watchSlidesProgress=!0},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(i){t[i]=j[i].bind(e)}),l.extend(e,{zoom:t})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){l.extend(this,{lazy:{initialImageLoaded:!1,load:q.load.bind(this),loadInSlide:q.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){l.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:K.getInterpolateFunction.bind(this),setTranslate:K.setTranslate.bind(this),setTransition:K.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!1,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var e=this;l.extend(e,{a11y:{liveRegion:t('<span class="'+e.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(U).forEach(function(t){e.a11y[t]=U[t].bind(e)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){l.extend(this,{history:{init:_.init.bind(this),setHistory:_.setHistory.bind(this),setHistoryPopState:_.setHistoryPopState.bind(this),scrollToSlide:_.scrollToSlide.bind(this),destroy:_.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){l.extend(this,{hashNavigation:{initialized:!1,init:Z.init.bind(this),destroy:Z.destroy.bind(this),setHash:Z.setHash.bind(this),onHashCange:Z.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){l.extend(this,{autoplay:{running:!1,paused:!1,run:Q.run.bind(this),start:Q.start.bind(this),stop:Q.stop.bind(this),pause:Q.pause.bind(this)}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){l.extend(this,{fadeEffect:{setTranslate:J.setTranslate.bind(this),setTransition:J.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};l.extend(this.params,e),l.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){l.extend(this,{cubeEffect:{setTranslate:ee.setTranslate.bind(this),setTransition:ee.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};l.extend(this.params,e),l.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){l.extend(this,{flipEffect:{setTranslate:te.setTranslate.bind(this),setTransition:te.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};l.extend(this.params,e),l.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){l.extend(this,{coverflowEffect:{setTranslate:ie.setTranslate.bind(this),setTransition:ie.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===k.use&&(k.use=k.Class.use,k.installModule=k.Class.installModule),k.use(se),k});
//# sourceMappingURL=swiper.min.js.map

/*!
  * Bootstrap v4.0.0 (https://getbootstrap.com)
  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e(t.bootstrap={},t.jQuery,t.Popper)}(this,function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}e=e&&e.hasOwnProperty("default")?e.default:e,n=n&&n.hasOwnProperty("default")?n.default:n;var o,a,l,h,c,u,f,d,_,g,p,m,v,E,T,y,C,I,A,b,D,S,w,N,O,k,P=function(t){var e=!1;function n(e){var n=this,s=!1;return t(this).one(i.TRANSITION_END,function(){s=!0}),setTimeout(function(){s||i.triggerTransitionEnd(n)},e),this}var i={TRANSITION_END:"bsTransitionEnd",getUID:function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},getSelectorFromElement:function(e){var n,i=e.getAttribute("data-target");i&&"#"!==i||(i=e.getAttribute("href")||""),"#"===i.charAt(0)&&(n=i,i=n="function"==typeof t.escapeSelector?t.escapeSelector(n).substr(1):n.replace(/(:|\.|\[|\]|,|=|@)/g,"\\$1"));try{return t(document).find(i).length>0?i:null}catch(t){return null}},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(n){t(n).trigger(e.end)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var s in n)if(Object.prototype.hasOwnProperty.call(n,s)){var r=n[s],o=e[s],a=o&&i.isElement(o)?"element":(l=o,{}.toString.call(l).match(/\s([a-zA-Z]+)/)[1].toLowerCase());if(!new RegExp(r).test(a))throw new Error(t.toUpperCase()+': Option "'+s+'" provided type "'+a+'" but expected type "'+r+'".')}var l}};return e=("undefined"==typeof window||!window.QUnit)&&{end:"transitionend"},t.fn.emulateTransitionEnd=n,i.supportsTransitionEnd()&&(t.event.special[i.TRANSITION_END]={bindType:e.end,delegateType:e.end,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}}),i}(e),L=(a="alert",h="."+(l="bs.alert"),c=(o=e).fn[a],u={CLOSE:"close"+h,CLOSED:"closed"+h,CLICK_DATA_API:"click"+h+".data-api"},f="alert",d="fade",_="show",g=function(){function t(t){this._element=t}var e=t.prototype;return e.close=function(t){t=t||this._element;var e=this._getRootElement(t);this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},e.dispose=function(){o.removeData(this._element,l),this._element=null},e._getRootElement=function(t){var e=P.getSelectorFromElement(t),n=!1;return e&&(n=o(e)[0]),n||(n=o(t).closest("."+f)[0]),n},e._triggerCloseEvent=function(t){var e=o.Event(u.CLOSE);return o(t).trigger(e),e},e._removeElement=function(t){var e=this;o(t).removeClass(_),P.supportsTransitionEnd()&&o(t).hasClass(d)?o(t).one(P.TRANSITION_END,function(n){return e._destroyElement(t,n)}).emulateTransitionEnd(150):this._destroyElement(t)},e._destroyElement=function(t){o(t).detach().trigger(u.CLOSED).remove()},t._jQueryInterface=function(e){return this.each(function(){var n=o(this),i=n.data(l);i||(i=new t(this),n.data(l,i)),"close"===e&&i[e](this)})},t._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},s(t,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),t}(),o(document).on(u.CLICK_DATA_API,'[data-dismiss="alert"]',g._handleDismiss(new g)),o.fn[a]=g._jQueryInterface,o.fn[a].Constructor=g,o.fn[a].noConflict=function(){return o.fn[a]=c,g._jQueryInterface},g),R=(m="button",E="."+(v="bs.button"),T=".data-api",y=(p=e).fn[m],C="active",I="btn",A="focus",b='[data-toggle^="button"]',D='[data-toggle="buttons"]',S="input",w=".active",N=".btn",O={CLICK_DATA_API:"click"+E+T,FOCUS_BLUR_DATA_API:"focus"+E+T+" blur"+E+T},k=function(){function t(t){this._element=t}var e=t.prototype;return e.toggle=function(){var t=!0,e=!0,n=p(this._element).closest(D)[0];if(n){var i=p(this._element).find(S)[0];if(i){if("radio"===i.type)if(i.checked&&p(this._element).hasClass(C))t=!1;else{var s=p(n).find(w)[0];s&&p(s).removeClass(C)}if(t){if(i.hasAttribute("disabled")||n.hasAttribute("disabled")||i.classList.contains("disabled")||n.classList.contains("disabled"))return;i.checked=!p(this._element).hasClass(C),p(i).trigger("change")}i.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!p(this._element).hasClass(C)),t&&p(this._element).toggleClass(C)},e.dispose=function(){p.removeData(this._element,v),this._element=null},t._jQueryInterface=function(e){return this.each(function(){var n=p(this).data(v);n||(n=new t(this),p(this).data(v,n)),"toggle"===e&&n[e]()})},s(t,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),t}(),p(document).on(O.CLICK_DATA_API,b,function(t){t.preventDefault();var e=t.target;p(e).hasClass(I)||(e=p(e).closest(N)),k._jQueryInterface.call(p(e),"toggle")}).on(O.FOCUS_BLUR_DATA_API,b,function(t){var e=p(t.target).closest(N)[0];p(e).toggleClass(A,/^focus(in)?$/.test(t.type))}),p.fn[m]=k._jQueryInterface,p.fn[m].Constructor=k,p.fn[m].noConflict=function(){return p.fn[m]=y,k._jQueryInterface},k),j=function(t){var e="carousel",n="bs.carousel",i="."+n,o=t.fn[e],a={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},l={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},h="next",c="prev",u="left",f="right",d={SLIDE:"slide"+i,SLID:"slid"+i,KEYDOWN:"keydown"+i,MOUSEENTER:"mouseenter"+i,MOUSELEAVE:"mouseleave"+i,TOUCHEND:"touchend"+i,LOAD_DATA_API:"load"+i+".data-api",CLICK_DATA_API:"click"+i+".data-api"},_="carousel",g="active",p="slide",m="carousel-item-right",v="carousel-item-left",E="carousel-item-next",T="carousel-item-prev",y={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},C=function(){function o(e,n){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this._config=this._getConfig(n),this._element=t(e)[0],this._indicatorsElement=t(this._element).find(y.INDICATORS)[0],this._addEventListeners()}var C=o.prototype;return C.next=function(){this._isSliding||this._slide(h)},C.nextWhenVisible=function(){!document.hidden&&t(this._element).is(":visible")&&"hidden"!==t(this._element).css("visibility")&&this.next()},C.prev=function(){this._isSliding||this._slide(c)},C.pause=function(e){e||(this._isPaused=!0),t(this._element).find(y.NEXT_PREV)[0]&&P.supportsTransitionEnd()&&(P.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},C.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},C.to=function(e){var n=this;this._activeElement=t(this._element).find(y.ACTIVE_ITEM)[0];var i=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)t(this._element).one(d.SLID,function(){return n.to(e)});else{if(i===e)return this.pause(),void this.cycle();var s=e>i?h:c;this._slide(s,this._items[e])}},C.dispose=function(){t(this._element).off(i),t.removeData(this._element,n),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},C._getConfig=function(t){return t=r({},a,t),P.typeCheckConfig(e,t,l),t},C._addEventListeners=function(){var e=this;this._config.keyboard&&t(this._element).on(d.KEYDOWN,function(t){return e._keydown(t)}),"hover"===this._config.pause&&(t(this._element).on(d.MOUSEENTER,function(t){return e.pause(t)}).on(d.MOUSELEAVE,function(t){return e.cycle(t)}),"ontouchstart"in document.documentElement&&t(this._element).on(d.TOUCHEND,function(){e.pause(),e.touchTimeout&&clearTimeout(e.touchTimeout),e.touchTimeout=setTimeout(function(t){return e.cycle(t)},500+e._config.interval)}))},C._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},C._getItemIndex=function(e){return this._items=t.makeArray(t(e).parent().find(y.ITEM)),this._items.indexOf(e)},C._getItemByDirection=function(t,e){var n=t===h,i=t===c,s=this._getItemIndex(e),r=this._items.length-1;if((i&&0===s||n&&s===r)&&!this._config.wrap)return e;var o=(s+(t===c?-1:1))%this._items.length;return-1===o?this._items[this._items.length-1]:this._items[o]},C._triggerSlideEvent=function(e,n){var i=this._getItemIndex(e),s=this._getItemIndex(t(this._element).find(y.ACTIVE_ITEM)[0]),r=t.Event(d.SLIDE,{relatedTarget:e,direction:n,from:s,to:i});return t(this._element).trigger(r),r},C._setActiveIndicatorElement=function(e){if(this._indicatorsElement){t(this._indicatorsElement).find(y.ACTIVE).removeClass(g);var n=this._indicatorsElement.children[this._getItemIndex(e)];n&&t(n).addClass(g)}},C._slide=function(e,n){var i,s,r,o=this,a=t(this._element).find(y.ACTIVE_ITEM)[0],l=this._getItemIndex(a),c=n||a&&this._getItemByDirection(e,a),_=this._getItemIndex(c),C=Boolean(this._interval);if(e===h?(i=v,s=E,r=u):(i=m,s=T,r=f),c&&t(c).hasClass(g))this._isSliding=!1;else if(!this._triggerSlideEvent(c,r).isDefaultPrevented()&&a&&c){this._isSliding=!0,C&&this.pause(),this._setActiveIndicatorElement(c);var I=t.Event(d.SLID,{relatedTarget:c,direction:r,from:l,to:_});P.supportsTransitionEnd()&&t(this._element).hasClass(p)?(t(c).addClass(s),P.reflow(c),t(a).addClass(i),t(c).addClass(i),t(a).one(P.TRANSITION_END,function(){t(c).removeClass(i+" "+s).addClass(g),t(a).removeClass(g+" "+s+" "+i),o._isSliding=!1,setTimeout(function(){return t(o._element).trigger(I)},0)}).emulateTransitionEnd(600)):(t(a).removeClass(g),t(c).addClass(g),this._isSliding=!1,t(this._element).trigger(I)),C&&this.cycle()}},o._jQueryInterface=function(e){return this.each(function(){var i=t(this).data(n),s=r({},a,t(this).data());"object"==typeof e&&(s=r({},s,e));var l="string"==typeof e?e:s.slide;if(i||(i=new o(this,s),t(this).data(n,i)),"number"==typeof e)i.to(e);else if("string"==typeof l){if("undefined"==typeof i[l])throw new TypeError('No method named "'+l+'"');i[l]()}else s.interval&&(i.pause(),i.cycle())})},o._dataApiClickHandler=function(e){var i=P.getSelectorFromElement(this);if(i){var s=t(i)[0];if(s&&t(s).hasClass(_)){var a=r({},t(s).data(),t(this).data()),l=this.getAttribute("data-slide-to");l&&(a.interval=!1),o._jQueryInterface.call(t(s),a),l&&t(s).data(n).to(l),e.preventDefault()}}},s(o,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return a}}]),o}();return t(document).on(d.CLICK_DATA_API,y.DATA_SLIDE,C._dataApiClickHandler),t(window).on(d.LOAD_DATA_API,function(){t(y.DATA_RIDE).each(function(){var e=t(this);C._jQueryInterface.call(e,e.data())})}),t.fn[e]=C._jQueryInterface,t.fn[e].Constructor=C,t.fn[e].noConflict=function(){return t.fn[e]=o,C._jQueryInterface},C}(e),H=function(t){var e="collapse",n="bs.collapse",i="."+n,o=t.fn[e],a={toggle:!0,parent:""},l={toggle:"boolean",parent:"(string|element)"},h={SHOW:"show"+i,SHOWN:"shown"+i,HIDE:"hide"+i,HIDDEN:"hidden"+i,CLICK_DATA_API:"click"+i+".data-api"},c="show",u="collapse",f="collapsing",d="collapsed",_="width",g="height",p={ACTIVES:".show, .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},m=function(){function i(e,n){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(n),this._triggerArray=t.makeArray(t('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var i=t(p.DATA_TOGGLE),s=0;s<i.length;s++){var r=i[s],o=P.getSelectorFromElement(r);null!==o&&t(o).filter(e).length>0&&(this._selector=o,this._triggerArray.push(r))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var o=i.prototype;return o.toggle=function(){t(this._element).hasClass(c)?this.hide():this.show()},o.show=function(){var e,s,r=this;if(!this._isTransitioning&&!t(this._element).hasClass(c)&&(this._parent&&0===(e=t.makeArray(t(this._parent).find(p.ACTIVES).filter('[data-parent="'+this._config.parent+'"]'))).length&&(e=null),!(e&&(s=t(e).not(this._selector).data(n))&&s._isTransitioning))){var o=t.Event(h.SHOW);if(t(this._element).trigger(o),!o.isDefaultPrevented()){e&&(i._jQueryInterface.call(t(e).not(this._selector),"hide"),s||t(e).data(n,null));var a=this._getDimension();t(this._element).removeClass(u).addClass(f),this._element.style[a]=0,this._triggerArray.length>0&&t(this._triggerArray).removeClass(d).attr("aria-expanded",!0),this.setTransitioning(!0);var l=function(){t(r._element).removeClass(f).addClass(u).addClass(c),r._element.style[a]="",r.setTransitioning(!1),t(r._element).trigger(h.SHOWN)};if(P.supportsTransitionEnd()){var _="scroll"+(a[0].toUpperCase()+a.slice(1));t(this._element).one(P.TRANSITION_END,l).emulateTransitionEnd(600),this._element.style[a]=this._element[_]+"px"}else l()}}},o.hide=function(){var e=this;if(!this._isTransitioning&&t(this._element).hasClass(c)){var n=t.Event(h.HIDE);if(t(this._element).trigger(n),!n.isDefaultPrevented()){var i=this._getDimension();if(this._element.style[i]=this._element.getBoundingClientRect()[i]+"px",P.reflow(this._element),t(this._element).addClass(f).removeClass(u).removeClass(c),this._triggerArray.length>0)for(var s=0;s<this._triggerArray.length;s++){var r=this._triggerArray[s],o=P.getSelectorFromElement(r);if(null!==o)t(o).hasClass(c)||t(r).addClass(d).attr("aria-expanded",!1)}this.setTransitioning(!0);var a=function(){e.setTransitioning(!1),t(e._element).removeClass(f).addClass(u).trigger(h.HIDDEN)};this._element.style[i]="",P.supportsTransitionEnd()?t(this._element).one(P.TRANSITION_END,a).emulateTransitionEnd(600):a()}}},o.setTransitioning=function(t){this._isTransitioning=t},o.dispose=function(){t.removeData(this._element,n),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},o._getConfig=function(t){return(t=r({},a,t)).toggle=Boolean(t.toggle),P.typeCheckConfig(e,t,l),t},o._getDimension=function(){return t(this._element).hasClass(_)?_:g},o._getParent=function(){var e=this,n=null;P.isElement(this._config.parent)?(n=this._config.parent,"undefined"!=typeof this._config.parent.jquery&&(n=this._config.parent[0])):n=t(this._config.parent)[0];var s='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return t(n).find(s).each(function(t,n){e._addAriaAndCollapsedClass(i._getTargetFromElement(n),[n])}),n},o._addAriaAndCollapsedClass=function(e,n){if(e){var i=t(e).hasClass(c);n.length>0&&t(n).toggleClass(d,!i).attr("aria-expanded",i)}},i._getTargetFromElement=function(e){var n=P.getSelectorFromElement(e);return n?t(n)[0]:null},i._jQueryInterface=function(e){return this.each(function(){var s=t(this),o=s.data(n),l=r({},a,s.data(),"object"==typeof e&&e);if(!o&&l.toggle&&/show|hide/.test(e)&&(l.toggle=!1),o||(o=new i(this,l),s.data(n,o)),"string"==typeof e){if("undefined"==typeof o[e])throw new TypeError('No method named "'+e+'"');o[e]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return a}}]),i}();return t(document).on(h.CLICK_DATA_API,p.DATA_TOGGLE,function(e){"A"===e.currentTarget.tagName&&e.preventDefault();var i=t(this),s=P.getSelectorFromElement(this);t(s).each(function(){var e=t(this),s=e.data(n)?"toggle":i.data();m._jQueryInterface.call(e,s)})}),t.fn[e]=m._jQueryInterface,t.fn[e].Constructor=m,t.fn[e].noConflict=function(){return t.fn[e]=o,m._jQueryInterface},m}(e),W=function(t){var e="dropdown",i="bs.dropdown",o="."+i,a=".data-api",l=t.fn[e],h=new RegExp("38|40|27"),c={HIDE:"hide"+o,HIDDEN:"hidden"+o,SHOW:"show"+o,SHOWN:"shown"+o,CLICK:"click"+o,CLICK_DATA_API:"click"+o+a,KEYDOWN_DATA_API:"keydown"+o+a,KEYUP_DATA_API:"keyup"+o+a},u="disabled",f="show",d="dropup",_="dropright",g="dropleft",p="dropdown-menu-right",m="dropdown-menu-left",v="position-static",E='[data-toggle="dropdown"]',T=".dropdown form",y=".dropdown-menu",C=".navbar-nav",I=".dropdown-menu .dropdown-item:not(.disabled)",A="top-start",b="top-end",D="bottom-start",S="bottom-end",w="right-start",N="left-start",O={offset:0,flip:!0,boundary:"scrollParent"},k={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)"},L=function(){function a(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var l=a.prototype;return l.toggle=function(){if(!this._element.disabled&&!t(this._element).hasClass(u)){var e=a._getParentFromElement(this._element),i=t(this._menu).hasClass(f);if(a._clearMenus(),!i){var s={relatedTarget:this._element},r=t.Event(c.SHOW,s);if(t(e).trigger(r),!r.isDefaultPrevented()){if(!this._inNavbar){if("undefined"==typeof n)throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");var o=this._element;t(e).hasClass(d)&&(t(this._menu).hasClass(m)||t(this._menu).hasClass(p))&&(o=e),"scrollParent"!==this._config.boundary&&t(e).addClass(v),this._popper=new n(o,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===t(e).closest(C).length&&t("body").children().on("mouseover",null,t.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),t(this._menu).toggleClass(f),t(e).toggleClass(f).trigger(t.Event(c.SHOWN,s))}}}},l.dispose=function(){t.removeData(this._element,i),t(this._element).off(o),this._element=null,this._menu=null,null!==this._popper&&(this._popper.destroy(),this._popper=null)},l.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},l._addEventListeners=function(){var e=this;t(this._element).on(c.CLICK,function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},l._getConfig=function(n){return n=r({},this.constructor.Default,t(this._element).data(),n),P.typeCheckConfig(e,n,this.constructor.DefaultType),n},l._getMenuElement=function(){if(!this._menu){var e=a._getParentFromElement(this._element);this._menu=t(e).find(y)[0]}return this._menu},l._getPlacement=function(){var e=t(this._element).parent(),n=D;return e.hasClass(d)?(n=A,t(this._menu).hasClass(p)&&(n=b)):e.hasClass(_)?n=w:e.hasClass(g)?n=N:t(this._menu).hasClass(p)&&(n=S),n},l._detectNavbar=function(){return t(this._element).closest(".navbar").length>0},l._getPopperConfig=function(){var t=this,e={};return"function"==typeof this._config.offset?e.fn=function(e){return e.offsets=r({},e.offsets,t._config.offset(e.offsets)||{}),e}:e.offset=this._config.offset,{placement:this._getPlacement(),modifiers:{offset:e,flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}}},a._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(i);if(n||(n=new a(this,"object"==typeof e?e:null),t(this).data(i,n)),"string"==typeof e){if("undefined"==typeof n[e])throw new TypeError('No method named "'+e+'"');n[e]()}})},a._clearMenus=function(e){if(!e||3!==e.which&&("keyup"!==e.type||9===e.which))for(var n=t.makeArray(t(E)),s=0;s<n.length;s++){var r=a._getParentFromElement(n[s]),o=t(n[s]).data(i),l={relatedTarget:n[s]};if(o){var h=o._menu;if(t(r).hasClass(f)&&!(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&9===e.which)&&t.contains(r,e.target))){var u=t.Event(c.HIDE,l);t(r).trigger(u),u.isDefaultPrevented()||("ontouchstart"in document.documentElement&&t("body").children().off("mouseover",null,t.noop),n[s].setAttribute("aria-expanded","false"),t(h).removeClass(f),t(r).removeClass(f).trigger(t.Event(c.HIDDEN,l)))}}}},a._getParentFromElement=function(e){var n,i=P.getSelectorFromElement(e);return i&&(n=t(i)[0]),n||e.parentNode},a._dataApiKeydownHandler=function(e){if((/input|textarea/i.test(e.target.tagName)?!(32===e.which||27!==e.which&&(40!==e.which&&38!==e.which||t(e.target).closest(y).length)):h.test(e.which))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!t(this).hasClass(u))){var n=a._getParentFromElement(this),i=t(n).hasClass(f);if((i||27===e.which&&32===e.which)&&(!i||27!==e.which&&32!==e.which)){var s=t(n).find(I).get();if(0!==s.length){var r=s.indexOf(e.target);38===e.which&&r>0&&r--,40===e.which&&r<s.length-1&&r++,r<0&&(r=0),s[r].focus()}}else{if(27===e.which){var o=t(n).find(E)[0];t(o).trigger("focus")}t(this).trigger("click")}}},s(a,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return O}},{key:"DefaultType",get:function(){return k}}]),a}();return t(document).on(c.KEYDOWN_DATA_API,E,L._dataApiKeydownHandler).on(c.KEYDOWN_DATA_API,y,L._dataApiKeydownHandler).on(c.CLICK_DATA_API+" "+c.KEYUP_DATA_API,L._clearMenus).on(c.CLICK_DATA_API,E,function(e){e.preventDefault(),e.stopPropagation(),L._jQueryInterface.call(t(this),"toggle")}).on(c.CLICK_DATA_API,T,function(t){t.stopPropagation()}),t.fn[e]=L._jQueryInterface,t.fn[e].Constructor=L,t.fn[e].noConflict=function(){return t.fn[e]=l,L._jQueryInterface},L}(e),M=function(t){var e="modal",n="bs.modal",i="."+n,o=t.fn.modal,a={backdrop:!0,keyboard:!0,focus:!0,show:!0},l={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},h={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,FOCUSIN:"focusin"+i,RESIZE:"resize"+i,CLICK_DISMISS:"click.dismiss"+i,KEYDOWN_DISMISS:"keydown.dismiss"+i,MOUSEUP_DISMISS:"mouseup.dismiss"+i,MOUSEDOWN_DISMISS:"mousedown.dismiss"+i,CLICK_DATA_API:"click"+i+".data-api"},c="modal-scrollbar-measure",u="modal-backdrop",f="modal-open",d="fade",_="show",g={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",STICKY_CONTENT:".sticky-top",NAVBAR_TOGGLER:".navbar-toggler"},p=function(){function o(e,n){this._config=this._getConfig(n),this._element=e,this._dialog=t(e).find(g.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}var p=o.prototype;return p.toggle=function(t){return this._isShown?this.hide():this.show(t)},p.show=function(e){var n=this;if(!this._isTransitioning&&!this._isShown){P.supportsTransitionEnd()&&t(this._element).hasClass(d)&&(this._isTransitioning=!0);var i=t.Event(h.SHOW,{relatedTarget:e});t(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),t(document.body).addClass(f),this._setEscapeEvent(),this._setResizeEvent(),t(this._element).on(h.CLICK_DISMISS,g.DATA_DISMISS,function(t){return n.hide(t)}),t(this._dialog).on(h.MOUSEDOWN_DISMISS,function(){t(n._element).one(h.MOUSEUP_DISMISS,function(e){t(e.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(e)}))}},p.hide=function(e){var n=this;if(e&&e.preventDefault(),!this._isTransitioning&&this._isShown){var i=t.Event(h.HIDE);if(t(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()){this._isShown=!1;var s=P.supportsTransitionEnd()&&t(this._element).hasClass(d);s&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),t(document).off(h.FOCUSIN),t(this._element).removeClass(_),t(this._element).off(h.CLICK_DISMISS),t(this._dialog).off(h.MOUSEDOWN_DISMISS),s?t(this._element).one(P.TRANSITION_END,function(t){return n._hideModal(t)}).emulateTransitionEnd(300):this._hideModal()}}},p.dispose=function(){t.removeData(this._element,n),t(window,document,this._element,this._backdrop).off(i),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},p.handleUpdate=function(){this._adjustDialog()},p._getConfig=function(t){return t=r({},a,t),P.typeCheckConfig(e,t,l),t},p._showElement=function(e){var n=this,i=P.supportsTransitionEnd()&&t(this._element).hasClass(d);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,i&&P.reflow(this._element),t(this._element).addClass(_),this._config.focus&&this._enforceFocus();var s=t.Event(h.SHOWN,{relatedTarget:e}),r=function(){n._config.focus&&n._element.focus(),n._isTransitioning=!1,t(n._element).trigger(s)};i?t(this._dialog).one(P.TRANSITION_END,r).emulateTransitionEnd(300):r()},p._enforceFocus=function(){var e=this;t(document).off(h.FOCUSIN).on(h.FOCUSIN,function(n){document!==n.target&&e._element!==n.target&&0===t(e._element).has(n.target).length&&e._element.focus()})},p._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?t(this._element).on(h.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||t(this._element).off(h.KEYDOWN_DISMISS)},p._setResizeEvent=function(){var e=this;this._isShown?t(window).on(h.RESIZE,function(t){return e.handleUpdate(t)}):t(window).off(h.RESIZE)},p._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){t(document.body).removeClass(f),e._resetAdjustments(),e._resetScrollbar(),t(e._element).trigger(h.HIDDEN)})},p._removeBackdrop=function(){this._backdrop&&(t(this._backdrop).remove(),this._backdrop=null)},p._showBackdrop=function(e){var n=this,i=t(this._element).hasClass(d)?d:"";if(this._isShown&&this._config.backdrop){var s=P.supportsTransitionEnd()&&i;if(this._backdrop=document.createElement("div"),this._backdrop.className=u,i&&t(this._backdrop).addClass(i),t(this._backdrop).appendTo(document.body),t(this._element).on(h.CLICK_DISMISS,function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===n._config.backdrop?n._element.focus():n.hide())}),s&&P.reflow(this._backdrop),t(this._backdrop).addClass(_),!e)return;if(!s)return void e();t(this._backdrop).one(P.TRANSITION_END,e).emulateTransitionEnd(150)}else if(!this._isShown&&this._backdrop){t(this._backdrop).removeClass(_);var r=function(){n._removeBackdrop(),e&&e()};P.supportsTransitionEnd()&&t(this._element).hasClass(d)?t(this._backdrop).one(P.TRANSITION_END,r).emulateTransitionEnd(150):r()}else e&&e()},p._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},p._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},p._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},p._setScrollbar=function(){var e=this;if(this._isBodyOverflowing){t(g.FIXED_CONTENT).each(function(n,i){var s=t(i)[0].style.paddingRight,r=t(i).css("padding-right");t(i).data("padding-right",s).css("padding-right",parseFloat(r)+e._scrollbarWidth+"px")}),t(g.STICKY_CONTENT).each(function(n,i){var s=t(i)[0].style.marginRight,r=t(i).css("margin-right");t(i).data("margin-right",s).css("margin-right",parseFloat(r)-e._scrollbarWidth+"px")}),t(g.NAVBAR_TOGGLER).each(function(n,i){var s=t(i)[0].style.marginRight,r=t(i).css("margin-right");t(i).data("margin-right",s).css("margin-right",parseFloat(r)+e._scrollbarWidth+"px")});var n=document.body.style.paddingRight,i=t("body").css("padding-right");t("body").data("padding-right",n).css("padding-right",parseFloat(i)+this._scrollbarWidth+"px")}},p._resetScrollbar=function(){t(g.FIXED_CONTENT).each(function(e,n){var i=t(n).data("padding-right");"undefined"!=typeof i&&t(n).css("padding-right",i).removeData("padding-right")}),t(g.STICKY_CONTENT+", "+g.NAVBAR_TOGGLER).each(function(e,n){var i=t(n).data("margin-right");"undefined"!=typeof i&&t(n).css("margin-right",i).removeData("margin-right")});var e=t("body").data("padding-right");"undefined"!=typeof e&&t("body").css("padding-right",e).removeData("padding-right")},p._getScrollbarWidth=function(){var t=document.createElement("div");t.className=c,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(e,i){return this.each(function(){var s=t(this).data(n),a=r({},o.Default,t(this).data(),"object"==typeof e&&e);if(s||(s=new o(this,a),t(this).data(n,s)),"string"==typeof e){if("undefined"==typeof s[e])throw new TypeError('No method named "'+e+'"');s[e](i)}else a.show&&s.show(i)})},s(o,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return a}}]),o}();return t(document).on(h.CLICK_DATA_API,g.DATA_TOGGLE,function(e){var i,s=this,o=P.getSelectorFromElement(this);o&&(i=t(o)[0]);var a=t(i).data(n)?"toggle":r({},t(i).data(),t(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault();var l=t(i).one(h.SHOW,function(e){e.isDefaultPrevented()||l.one(h.HIDDEN,function(){t(s).is(":visible")&&s.focus()})});p._jQueryInterface.call(t(i),a,this)}),t.fn.modal=p._jQueryInterface,t.fn.modal.Constructor=p,t.fn.modal.noConflict=function(){return t.fn.modal=o,p._jQueryInterface},p}(e),U=function(t){var e="tooltip",i="bs.tooltip",o="."+i,a=t.fn[e],l=new RegExp("(^|\\s)bs-tooltip\\S+","g"),h={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)"},c={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},u={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent"},f="show",d="out",_={HIDE:"hide"+o,HIDDEN:"hidden"+o,SHOW:"show"+o,SHOWN:"shown"+o,INSERTED:"inserted"+o,CLICK:"click"+o,FOCUSIN:"focusin"+o,FOCUSOUT:"focusout"+o,MOUSEENTER:"mouseenter"+o,MOUSELEAVE:"mouseleave"+o},g="fade",p="show",m=".tooltip-inner",v=".arrow",E="hover",T="focus",y="click",C="manual",I=function(){function a(t,e){if("undefined"==typeof n)throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var I=a.prototype;return I.enable=function(){this._isEnabled=!0},I.disable=function(){this._isEnabled=!1},I.toggleEnabled=function(){this._isEnabled=!this._isEnabled},I.toggle=function(e){if(this._isEnabled)if(e){var n=this.constructor.DATA_KEY,i=t(e.currentTarget).data(n);i||(i=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(n,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(t(this.getTipElement()).hasClass(p))return void this._leave(null,this);this._enter(null,this)}},I.dispose=function(){clearTimeout(this._timeout),t.removeData(this.element,this.constructor.DATA_KEY),t(this.element).off(this.constructor.EVENT_KEY),t(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&t(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,null!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},I.show=function(){var e=this;if("none"===t(this.element).css("display"))throw new Error("Please use show on visible elements");var i=t.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){t(this.element).trigger(i);var s=t.contains(this.element.ownerDocument.documentElement,this.element);if(i.isDefaultPrevented()||!s)return;var r=this.getTipElement(),o=P.getUID(this.constructor.NAME);r.setAttribute("id",o),this.element.setAttribute("aria-describedby",o),this.setContent(),this.config.animation&&t(r).addClass(g);var l="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,h=this._getAttachment(l);this.addAttachmentClass(h);var c=!1===this.config.container?document.body:t(this.config.container);t(r).data(this.constructor.DATA_KEY,this),t.contains(this.element.ownerDocument.documentElement,this.tip)||t(r).appendTo(c),t(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new n(this.element,r,{placement:h,modifiers:{offset:{offset:this.config.offset},flip:{behavior:this.config.fallbackPlacement},arrow:{element:v},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){e._handlePopperPlacementChange(t)}}),t(r).addClass(p),"ontouchstart"in document.documentElement&&t("body").children().on("mouseover",null,t.noop);var u=function(){e.config.animation&&e._fixTransition();var n=e._hoverState;e._hoverState=null,t(e.element).trigger(e.constructor.Event.SHOWN),n===d&&e._leave(null,e)};P.supportsTransitionEnd()&&t(this.tip).hasClass(g)?t(this.tip).one(P.TRANSITION_END,u).emulateTransitionEnd(a._TRANSITION_DURATION):u()}},I.hide=function(e){var n=this,i=this.getTipElement(),s=t.Event(this.constructor.Event.HIDE),r=function(){n._hoverState!==f&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),t(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),e&&e()};t(this.element).trigger(s),s.isDefaultPrevented()||(t(i).removeClass(p),"ontouchstart"in document.documentElement&&t("body").children().off("mouseover",null,t.noop),this._activeTrigger[y]=!1,this._activeTrigger[T]=!1,this._activeTrigger[E]=!1,P.supportsTransitionEnd()&&t(this.tip).hasClass(g)?t(i).one(P.TRANSITION_END,r).emulateTransitionEnd(150):r(),this._hoverState="")},I.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},I.isWithContent=function(){return Boolean(this.getTitle())},I.addAttachmentClass=function(e){t(this.getTipElement()).addClass("bs-tooltip-"+e)},I.getTipElement=function(){return this.tip=this.tip||t(this.config.template)[0],this.tip},I.setContent=function(){var e=t(this.getTipElement());this.setElementContent(e.find(m),this.getTitle()),e.removeClass(g+" "+p)},I.setElementContent=function(e,n){var i=this.config.html;"object"==typeof n&&(n.nodeType||n.jquery)?i?t(n).parent().is(e)||e.empty().append(n):e.text(t(n).text()):e[i?"html":"text"](n)},I.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},I._getAttachment=function(t){return c[t.toUpperCase()]},I._setListeners=function(){var e=this;this.config.trigger.split(" ").forEach(function(n){if("click"===n)t(e.element).on(e.constructor.Event.CLICK,e.config.selector,function(t){return e.toggle(t)});else if(n!==C){var i=n===E?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,s=n===E?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;t(e.element).on(i,e.config.selector,function(t){return e._enter(t)}).on(s,e.config.selector,function(t){return e._leave(t)})}t(e.element).closest(".modal").on("hide.bs.modal",function(){return e.hide()})}),this.config.selector?this.config=r({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},I._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},I._enter=function(e,n){var i=this.constructor.DATA_KEY;(n=n||t(e.currentTarget).data(i))||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(i,n)),e&&(n._activeTrigger["focusin"===e.type?T:E]=!0),t(n.getTipElement()).hasClass(p)||n._hoverState===f?n._hoverState=f:(clearTimeout(n._timeout),n._hoverState=f,n.config.delay&&n.config.delay.show?n._timeout=setTimeout(function(){n._hoverState===f&&n.show()},n.config.delay.show):n.show())},I._leave=function(e,n){var i=this.constructor.DATA_KEY;(n=n||t(e.currentTarget).data(i))||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(i,n)),e&&(n._activeTrigger["focusout"===e.type?T:E]=!1),n._isWithActiveTrigger()||(clearTimeout(n._timeout),n._hoverState=d,n.config.delay&&n.config.delay.hide?n._timeout=setTimeout(function(){n._hoverState===d&&n.hide()},n.config.delay.hide):n.hide())},I._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},I._getConfig=function(n){return"number"==typeof(n=r({},this.constructor.Default,t(this.element).data(),n)).delay&&(n.delay={show:n.delay,hide:n.delay}),"number"==typeof n.title&&(n.title=n.title.toString()),"number"==typeof n.content&&(n.content=n.content.toString()),P.typeCheckConfig(e,n,this.constructor.DefaultType),n},I._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},I._cleanTipClass=function(){var e=t(this.getTipElement()),n=e.attr("class").match(l);null!==n&&n.length>0&&e.removeClass(n.join(""))},I._handlePopperPlacementChange=function(t){this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},I._fixTransition=function(){var e=this.getTipElement(),n=this.config.animation;null===e.getAttribute("x-placement")&&(t(e).removeClass(g),this.config.animation=!1,this.hide(),this.show(),this.config.animation=n)},a._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(i),s="object"==typeof e&&e;if((n||!/dispose|hide/.test(e))&&(n||(n=new a(this,s),t(this).data(i,n)),"string"==typeof e)){if("undefined"==typeof n[e])throw new TypeError('No method named "'+e+'"');n[e]()}})},s(a,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return u}},{key:"NAME",get:function(){return e}},{key:"DATA_KEY",get:function(){return i}},{key:"Event",get:function(){return _}},{key:"EVENT_KEY",get:function(){return o}},{key:"DefaultType",get:function(){return h}}]),a}();return t.fn[e]=I._jQueryInterface,t.fn[e].Constructor=I,t.fn[e].noConflict=function(){return t.fn[e]=a,I._jQueryInterface},I}(e),x=function(t){var e="popover",n="bs.popover",i="."+n,o=t.fn[e],a=new RegExp("(^|\\s)bs-popover\\S+","g"),l=r({},U.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),h=r({},U.DefaultType,{content:"(string|element|function)"}),c="fade",u="show",f=".popover-header",d=".popover-body",_={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,INSERTED:"inserted"+i,CLICK:"click"+i,FOCUSIN:"focusin"+i,FOCUSOUT:"focusout"+i,MOUSEENTER:"mouseenter"+i,MOUSELEAVE:"mouseleave"+i},g=function(r){var o,g;function p(){return r.apply(this,arguments)||this}g=r,(o=p).prototype=Object.create(g.prototype),o.prototype.constructor=o,o.__proto__=g;var m=p.prototype;return m.isWithContent=function(){return this.getTitle()||this._getContent()},m.addAttachmentClass=function(e){t(this.getTipElement()).addClass("bs-popover-"+e)},m.getTipElement=function(){return this.tip=this.tip||t(this.config.template)[0],this.tip},m.setContent=function(){var e=t(this.getTipElement());this.setElementContent(e.find(f),this.getTitle());var n=this._getContent();"function"==typeof n&&(n=n.call(this.element)),this.setElementContent(e.find(d),n),e.removeClass(c+" "+u)},m._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},m._cleanTipClass=function(){var e=t(this.getTipElement()),n=e.attr("class").match(a);null!==n&&n.length>0&&e.removeClass(n.join(""))},p._jQueryInterface=function(e){return this.each(function(){var i=t(this).data(n),s="object"==typeof e?e:null;if((i||!/destroy|hide/.test(e))&&(i||(i=new p(this,s),t(this).data(n,i)),"string"==typeof e)){if("undefined"==typeof i[e])throw new TypeError('No method named "'+e+'"');i[e]()}})},s(p,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return l}},{key:"NAME",get:function(){return e}},{key:"DATA_KEY",get:function(){return n}},{key:"Event",get:function(){return _}},{key:"EVENT_KEY",get:function(){return i}},{key:"DefaultType",get:function(){return h}}]),p}(U);return t.fn[e]=g._jQueryInterface,t.fn[e].Constructor=g,t.fn[e].noConflict=function(){return t.fn[e]=o,g._jQueryInterface},g}(e),K=function(t){var e="scrollspy",n="bs.scrollspy",i="."+n,o=t.fn[e],a={offset:10,method:"auto",target:""},l={offset:"number",method:"string",target:"(string|element)"},h={ACTIVATE:"activate"+i,SCROLL:"scroll"+i,LOAD_DATA_API:"load"+i+".data-api"},c="dropdown-item",u="active",f={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",NAV_LIST_GROUP:".nav, .list-group",NAV_LINKS:".nav-link",NAV_ITEMS:".nav-item",LIST_ITEMS:".list-group-item",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},d="offset",_="position",g=function(){function o(e,n){var i=this;this._element=e,this._scrollElement="BODY"===e.tagName?window:e,this._config=this._getConfig(n),this._selector=this._config.target+" "+f.NAV_LINKS+","+this._config.target+" "+f.LIST_ITEMS+","+this._config.target+" "+f.DROPDOWN_ITEMS,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,t(this._scrollElement).on(h.SCROLL,function(t){return i._process(t)}),this.refresh(),this._process()}var g=o.prototype;return g.refresh=function(){var e=this,n=this._scrollElement===this._scrollElement.window?d:_,i="auto"===this._config.method?n:this._config.method,s=i===_?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),t.makeArray(t(this._selector)).map(function(e){var n,r=P.getSelectorFromElement(e);if(r&&(n=t(r)[0]),n){var o=n.getBoundingClientRect();if(o.width||o.height)return[t(n)[i]().top+s,r]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},g.dispose=function(){t.removeData(this._element,n),t(this._scrollElement).off(i),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},g._getConfig=function(n){if("string"!=typeof(n=r({},a,n)).target){var i=t(n.target).attr("id");i||(i=P.getUID(e),t(n.target).attr("id",i)),n.target="#"+i}return P.typeCheckConfig(e,n,l),n},g._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},g._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},g._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},g._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var s=this._offsets.length;s--;){this._activeTarget!==this._targets[s]&&t>=this._offsets[s]&&("undefined"==typeof this._offsets[s+1]||t<this._offsets[s+1])&&this._activate(this._targets[s])}}},g._activate=function(e){this._activeTarget=e,this._clear();var n=this._selector.split(",");n=n.map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'});var i=t(n.join(","));i.hasClass(c)?(i.closest(f.DROPDOWN).find(f.DROPDOWN_TOGGLE).addClass(u),i.addClass(u)):(i.addClass(u),i.parents(f.NAV_LIST_GROUP).prev(f.NAV_LINKS+", "+f.LIST_ITEMS).addClass(u),i.parents(f.NAV_LIST_GROUP).prev(f.NAV_ITEMS).children(f.NAV_LINKS).addClass(u)),t(this._scrollElement).trigger(h.ACTIVATE,{relatedTarget:e})},g._clear=function(){t(this._selector).filter(f.ACTIVE).removeClass(u)},o._jQueryInterface=function(e){return this.each(function(){var i=t(this).data(n);if(i||(i=new o(this,"object"==typeof e&&e),t(this).data(n,i)),"string"==typeof e){if("undefined"==typeof i[e])throw new TypeError('No method named "'+e+'"');i[e]()}})},s(o,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return a}}]),o}();return t(window).on(h.LOAD_DATA_API,function(){for(var e=t.makeArray(t(f.DATA_SPY)),n=e.length;n--;){var i=t(e[n]);g._jQueryInterface.call(i,i.data())}}),t.fn[e]=g._jQueryInterface,t.fn[e].Constructor=g,t.fn[e].noConflict=function(){return t.fn[e]=o,g._jQueryInterface},g}(e),V=function(t){var e="bs.tab",n="."+e,i=t.fn.tab,r={HIDE:"hide"+n,HIDDEN:"hidden"+n,SHOW:"show"+n,SHOWN:"shown"+n,CLICK_DATA_API:"click.bs.tab.data-api"},o="dropdown-menu",a="active",l="disabled",h="fade",c="show",u=".dropdown",f=".nav, .list-group",d=".active",_="> li > .active",g='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',p=".dropdown-toggle",m="> .dropdown-menu .active",v=function(){function n(t){this._element=t}var i=n.prototype;return i.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&t(this._element).hasClass(a)||t(this._element).hasClass(l))){var n,i,s=t(this._element).closest(f)[0],o=P.getSelectorFromElement(this._element);if(s){var h="UL"===s.nodeName?_:d;i=(i=t.makeArray(t(s).find(h)))[i.length-1]}var c=t.Event(r.HIDE,{relatedTarget:this._element}),u=t.Event(r.SHOW,{relatedTarget:i});if(i&&t(i).trigger(c),t(this._element).trigger(u),!u.isDefaultPrevented()&&!c.isDefaultPrevented()){o&&(n=t(o)[0]),this._activate(this._element,s);var g=function(){var n=t.Event(r.HIDDEN,{relatedTarget:e._element}),s=t.Event(r.SHOWN,{relatedTarget:i});t(i).trigger(n),t(e._element).trigger(s)};n?this._activate(n,n.parentNode,g):g()}}},i.dispose=function(){t.removeData(this._element,e),this._element=null},i._activate=function(e,n,i){var s=this,r=("UL"===n.nodeName?t(n).find(_):t(n).children(d))[0],o=i&&P.supportsTransitionEnd()&&r&&t(r).hasClass(h),a=function(){return s._transitionComplete(e,r,i)};r&&o?t(r).one(P.TRANSITION_END,a).emulateTransitionEnd(150):a()},i._transitionComplete=function(e,n,i){if(n){t(n).removeClass(c+" "+a);var s=t(n.parentNode).find(m)[0];s&&t(s).removeClass(a),"tab"===n.getAttribute("role")&&n.setAttribute("aria-selected",!1)}if(t(e).addClass(a),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),P.reflow(e),t(e).addClass(c),e.parentNode&&t(e.parentNode).hasClass(o)){var r=t(e).closest(u)[0];r&&t(r).find(p).addClass(a),e.setAttribute("aria-expanded",!0)}i&&i()},n._jQueryInterface=function(i){return this.each(function(){var s=t(this),r=s.data(e);if(r||(r=new n(this),s.data(e,r)),"string"==typeof i){if("undefined"==typeof r[i])throw new TypeError('No method named "'+i+'"');r[i]()}})},s(n,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),n}();return t(document).on(r.CLICK_DATA_API,g,function(e){e.preventDefault(),v._jQueryInterface.call(t(this),"show")}),t.fn.tab=v._jQueryInterface,t.fn.tab.Constructor=v,t.fn.tab.noConflict=function(){return t.fn.tab=i,v._jQueryInterface},v}(e);!function(t){if("undefined"==typeof t)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1===e[0]&&9===e[1]&&e[2]<1||e[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(e),t.Util=P,t.Alert=L,t.Button=R,t.Carousel=j,t.Collapse=H,t.Dropdown=W,t.Modal=M,t.Popover=x,t.Scrollspy=K,t.Tab=V,t.Tooltip=U,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=bootstrap.min.js.map
/*
 * selection-sharer: Medium like popover menu to share on Twitter or by email any text selected on the page
 *
 * -- Requires jQuery --
 * -- AMD compatible  --
 *
 * Author: Xavier Damman (@xdamman)
 * GIT: https://github.com/xdamman/share-selection
 * MIT License
 */

(function($) {

  var SelectionSharer = function(options) {

    var self = this;

    options = options || {};
    if(typeof options == 'string')
        options = { elements: options };

    this.sel = null;
    this.textSelection='';
    this.htmlSelection='';

    this.appId = $('meta[property="fb:app_id"]').attr("content") || $('meta[property="fb:app_id"]').attr("value");
    this.url2share = $('meta[property="og:url"]').attr("content") || $('meta[property="og:url"]').attr("value") || window.location.href;

    this.getSelectionText = function(sel) {
        var html = "", text = "";
        sel = sel || window.getSelection();
        if (sel.rangeCount) {
            var container = document.createElement("div");
            for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }
            text = container.textContent;
            html = container.innerHTML;
        }
        self.textSelection = text;
        self.htmlSelection = html || text;       
        return text;
    };

    this.selectionDirection = function(selection) {
      var sel = selection || window.getSelection();
      var range = document.createRange();
      if(!sel.anchorNode) return 0;
      range.setStart(sel.anchorNode, sel.anchorOffset);
      range.setEnd(sel.focusNode, sel.focusOffset);
      var direction = (range.collapsed) ? "backward" : "forward";
      range.detach();
      return direction;
    };

    this.showPopunder = function() {
      self.popunder = self.popunder || document.getElementById('selectionSharerPopunder');

      var sel = window.getSelection();
      var selection = self.getSelectionText(sel);

      if(sel.isCollapsed || selection.length < 10 || !selection.match(/ /))
        return self.hidePopunder();

      if(self.popunder.classList.contains("fixed")) {
          self.popunder.style.bottom = 0;
          return self.popunder.style.bottom;
      }

      var range = sel.getRangeAt(0);
      var node = range.endContainer.parentNode; // The <p> where the selection ends

      // If the popunder is currently displayed
      if(self.popunder.classList.contains('show')) {
        // If the popunder is already at the right place, we do nothing
        if(Math.ceil(self.popunder.getBoundingClientRect().top) == Math.ceil(node.getBoundingClientRect().bottom))
          return;

        // Otherwise, we first hide it and the we try again
        return self.hidePopunder(self.showPopunder);
      }

      if(node.nextElementSibling) {
        // We need to push down all the following siblings
        self.pushSiblings(node);
      }
      else {
        // We need to append a new element to push all the content below
        if(!self.placeholder) {
          self.placeholder = document.createElement('div');
          self.placeholder.className = 'selectionSharerPlaceholder';
        }

        // If we add a div between two <p> that have a 1em margin, the space between them
        // will become 2x 1em. So we give the placeholder a negative margin to avoid that
        var margin = window.getComputedStyle(node).marginBottom;
        self.placeholder.style.height = margin;
        self.placeholder.style.marginBottom = (-2 * parseInt(margin,10))+'px';
        node.parentNode.insertBefore(self.placeholder);
      }

      // scroll offset
      var offsetTop = window.pageYOffset + node.getBoundingClientRect().bottom;
      self.popunder.style.top = Math.ceil(offsetTop)+'px';

      setTimeout(function() {
        if(self.placeholder) self.placeholder.classList.add('show');
        self.popunder.classList.add('show');
      },0);

    };

    this.pushSiblings = function(el) {
      while(el=el.nextElementSibling) { el.classList.add('selectionSharer'); el.classList.add('moveDown'); }
    };

    this.hidePopunder = function(cb) {
      cb = cb || function() {};

      if(self.popunder == "fixed") {
        self.popunder.style.bottom = '-50px';
        return cb();
      }

      self.popunder.classList.remove('show');
      if(self.placeholder) self.placeholder.classList.remove('show');
      // We need to push back up all the siblings
      var els = document.getElementsByClassName('moveDown');
      while(el=els[0]) {
          el.classList.remove('moveDown');
      }

      // CSS3 transition takes 0.6s
      setTimeout(function() {
        if(self.placeholder) document.body.insertBefore(self.placeholder);
        cb();
      }, 600);

    };

    this.show = function(e) {
      setTimeout(function() {
        var sel = window.getSelection();
        var selection = self.getSelectionText(sel);
        if(!sel.isCollapsed && selection && selection.length>10 && selection.match(/ /)) {
          var range = sel.getRangeAt(0);
          var topOffset = range.getBoundingClientRect().top - 5;
          var top = topOffset + self.getPosition().y - self.$popover.height();
          var left = 0;
          if(e) {
            left = e.pageX;
          }
          else {
            var obj = sel.anchorNode.parentNode;
            left += obj.offsetWidth / 2;
            do {
              left += obj.offsetLeft;
            }
            while(obj = obj.offsetParent);
          }
          switch(self.selectionDirection(sel)) {
            case 'forward':
              left -= self.$popover.width();
              break;
            case 'backward':
              left += self.$popover.width();
              break;
            default:
              return;
          }
          self.$popover.removeClass("anim").css("top", top+10).css("left", left).show();
          setTimeout(function() {
            self.$popover.addClass("anim").css("top", top);
          }, 0);
        }
      }, 10);
    };

    this.hide = function(e) {
      self.$popover.hide();
    };

    this.smart_truncate = function(str, n){
        if (!str || !str.length) return str;
        var toLong = str.length>n,
            s_ = toLong ? str.substr(0,n-1) : str;
        s_ = toLong ? s_.substr(0,s_.lastIndexOf(' ')) : s_;
        return  toLong ? s_ +'...' : s_;
    };

    this.getRelatedTwitterAccounts = function() {
      var usernames = [];

      var creator = $('meta[name="twitter:creator"]').attr("content") || $('meta[name="twitter:creator"]').attr("value");
      if(creator) usernames.push(creator);


      // We scrape the page to find a link to http(s)://twitter.com/username
      var anchors = document.getElementsByTagName('a');
      for(var i=0, len=anchors.length;i<len;i++) {
        if(anchors[i].attributes.href && typeof anchors[i].attributes.href.value == 'string') {
        
          var matches = anchors[i].attributes.href.value.match(/^https?:\/\/twitter\.com\/([a-z0-9_]{1,20})/i);
          if(matches && matches.length > 1 && ['widgets','intent'].indexOf(matches[1])==-1)
            usernames.push(matches[1]);
        }
      }

      if(usernames.length > 0)
        return usernames.join(',');
      else
        return '';
    };

    this.shareTwitter = function(e) {
      e.preventDefault();

      var text = "“"+self.smart_truncate(self.textSelection.trim(), 114)+"”";
      var url = 'http://twitter.com/intent/tweet?text='+encodeURIComponent(text)+'&related='+self.getRelatedTwitterAccounts()+'&url='+encodeURIComponent(self.url2share);

      // We only show the via @twitter:site if we have enough room
      if(self.viaTwitterAccount && text.length < (120-6-self.viaTwitterAccount.length))
        url += '&via='+self.viaTwitterAccount;

      var w = 640, h=440;
      var left = (screen.width/2)-(w/2);
      var top = (screen.height/2)-(h/2)-100;
      window.open(url, "share_twitter", 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left);
      self.hide();
      return false;
    };

    this.copyText = function() {
      document.execCommand("Copy");
    };

    this.shareFacebook = function(e) {
      e.preventDefault();
      var text = self.htmlSelection.replace(/<p[^>]*>/ig,'\n').replace(/<\/p>|  /ig,'').trim();

      var url = 'https://www.facebook.com/dialog/feed?' +
                'app_id='+self.appId +
                '&display=popup'+
                '&caption='+encodeURIComponent(text)+
                '&link='+encodeURIComponent(self.url2share)+
                '&href='+encodeURIComponent(self.url2share)+
                '&redirect_uri='+encodeURIComponent(self.url2share);
      var w = 640, h=440;
      var left = (screen.width/2)-(w/2);
      var top = (screen.height/2)-(h/2)-100;

      window.open(url, "share_facebook", 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left);
    };

    this.shareEmail = function(e) {
      var text = self.textSelection.replace(/<p[^>]*>/ig,'\n').replace(/<\/p>|  /ig,'').trim();
      var email = {};
      email.subject = encodeURIComponent("Quote from "+document.title);
      email.body = encodeURIComponent("“"+text+"”")+"%0D%0A%0D%0AFrom: "+document.title+"%0D%0A"+window.location.href;
      $(this).attr("href","mailto:?subject="+email.subject+"&body="+email.body);
      self.hide();
      return true;
    };

    this.render = function() {
      var popoverHTML =  '<div class="selectionSharer" id="selectionSharerPopover" style="position:absolute;">'
                       + '  <div id="selectionSharerPopover-inner">'
                       + '    <ul>'
                       + '      <li><a class="action copy" href="#copied" title="Copy Text">Copy</a></li>'
                       + '      <li><a class="action tweet" href="" title="Share this selection on Twitter" target="_blank">Tweet</a></li>'
                       + '      <li><a class="action facebook" href="" title="Share this selection on Facebook" target="_blank">Facebook</a></li>'
                       + '      <li><a class="action email" href="" title="Share this selection by email" target="_blank">Linkedin</a></li>'
                       + '    </ul>'
                       + '  </div>'
                       + '  <div class="selectionSharerPopover-clip"><span class="selectionSharerPopover-arrow"></span></div>'
                       + '</div>';

      var popunderHTML = '<div id="selectionSharerPopunder" class="selectionSharer">'
                       + '  <div id="selectionSharerPopunder-inner">'
                       + '    <label>Share this selection</label>'
                       + '    <ul>'
                       + '      <li><a class="action copy" href="#copied" title="Copy Text" >Copy</a></li>'
                       + '      <li><a class="action tweet" href="" title="Share this selection on Twitter" target="_blank">Tweet</a></li>'
                       + '      <li><a class="action facebook" href="" title="Share this selection on Facebook" target="_blank">Facebook</a></li>'
                       + '      <li><a class="action email" href="" title="Share this selection by email" target="_blank"></a></li>'
                       + '    </ul>'
                       + '  </div>'
                       + '</div>';
      self.$popover = $(popoverHTML);
      self.$popover.find('a.copy').click(self.copyText);
      self.$popover.find('a.tweet').click(self.shareTwitter);
      self.$popover.find('a.facebook').click(self.shareFacebook);
      self.$popover.find('a.email').click(self.shareEmail);

      $('body').append(self.$popover);

      self.$popunder = $(popunderHTML);
      self.$popover.find('a.copy').click(self.copyText);
      self.$popunder.find('a.tweet').click(self.shareTwitter);
      self.$popunder.find('a.facebook').click(self.shareFacebook);
      self.$popunder.find('a.email').click(self.shareEmail);
      $('body').append(self.$popunder);

      if (self.appId && self.url2share){
        $(".selectionSharer a.facebook").css('display','inline-block');
      }
    };

    this.setElements = function(elements) {
      if(typeof elements == 'string') elements = $(elements);
      self.$elements = elements instanceof $ ? elements : $(elements);
      self.$elements.mouseup(self.show).mousedown(self.hide).addClass("selectionShareable");

      self.$elements.bind('touchstart', function(e) {
        self.isMobile = true;
      });

      document.onselectionchange = self.selectionChanged;
    };

    this.selectionChanged = function(e) {
      if(!self.isMobile) return;

      if(self.lastSelectionChanged) {
        clearTimeout(self.lastSelectionChanged);
      }
      self.lastSelectionChanged = setTimeout(function() {
        self.showPopunder(e);
      }, 300);
    };

    this.getPosition = function() {
      var supportPageOffset = window.pageXOffset !== undefined;
      var isCSS1Compat = ((document.compatMode || "") === "CSS1Compat");

      var x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
      var y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
      return {x: x, y: y};
    };

    this.render();

    if(options.elements) {
      this.setElements(options.elements);
    }

  };

  // jQuery plugin
  // Usage: $( "p" ).selectionSharer();
  $.fn.selectionSharer = function() {
    var sharer = new SelectionSharer();
    sharer.setElements(this);
    return this;
  };

  // For AMD / requirejs
  // Usage: require(["selection-sharer!"]);
  //     or require(["selection-sharer"], function(selectionSharer) { var sharer = new SelectionSharer('p'); });
  if(typeof define == 'function') {
    define(function() {
      SelectionSharer.load = function (name, req, onLoad, config) {
        var sharer = new SelectionSharer();
        sharer.setElements('p');
        onLoad();
      };
      return SelectionSharer;
    });
  } else if (typeof module === 'object' && module.exports) {
    module.exports = SelectionSharer;
  } else {
    // Registering SelectionSharer as a global
    // Usage: var sharer = new SelectionSharer('p');
    window.SelectionSharer = SelectionSharer;
  }

})(jQuery);


if (!Function.prototype.bind) {
    Function.prototype.bind = function (oThis) {
        if (typeof this !== "function") {
            // closest thing possible to the ECMAScript 5 internal IsCallable function
            throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        }

        var aArgs = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP = function () {
            },
            fBound = function () {
                return fToBind.apply(this instanceof fNOP && oThis
                    ? this
                    : oThis,
                    aArgs.concat(Array.prototype.slice.call(arguments)));
            };

        fNOP.prototype = this.prototype;
        fBound.prototype = new fNOP();

        return fBound;
    };
}


/**!
 * trunk8 v1.3.2
 * https://github.com/rviscomi/trunk8
 *
 * Copyright 2012 Rick Viscomi
 * Released under the MIT License.
 *
 * Date: October 21, 2012
 */

(function ($) {
    var methods,
        utils,
        SIDES = {
            /* cen...ter */
            center: 'center',
            /* ...left */
            left: 'left',
            /* right... */
            right: 'right'
        },
        WIDTH = {
            auto: 'auto'
        };

    function trunk8(element) {
        this.$element = $(element);
        this.original_text = this.$element.html();
        this.settings = $.extend({}, $.fn.trunk8.defaults);
    }

    trunk8.prototype.updateSettings = function (options) {
        this.settings = $.extend(this.settings, options);
    };

    function truncate() {
        var data = this.data('trunk8'),
            settings = data.settings,
            width = settings.width,
            side = settings.side,
            fill = settings.fill,
            line_height = utils.getLineHeight(this) * settings.lines,
            str = data.original_text,
            length = str.length,
            max_bite = '',
            lower, upper,
            bite_size,
            bite;

        /* Reset the field to the original string. */
        this.html(str);

        if (width === WIDTH.auto) {
            /* Assuming there is no "overflow: hidden". */
            if (this.height() <= line_height) {
                /* Text is already at the optimal trunkage. */
                return;
            }

            /* Binary search technique for finding the optimal trunkage. */
            /* Find the maximum bite without overflowing. */
            lower = 0;
            upper = length - 1;

            while (lower <= upper) {
                bite_size = lower + ((upper - lower) >> 1);

                bite = utils.eatStr(str, side, length - bite_size, fill);

                this.html(bite);

                /* Check for overflow. */
                if (this.height() > line_height) {
                    upper = bite_size - 1;
                }
                else {
                    lower = bite_size + 1;

                    /* Save the bigger bite. */
                    max_bite = (max_bite.length > bite.length) ? max_bite : bite;
                }
            }

            /* Reset the content to eliminate possible existing scroll bars. */
            this.html('');

            /* Display the biggest bite. */
            this.html(max_bite);

            if (settings.tooltip) {
                this.attr('title', str);
            }
        }
        else if (!isNaN(width)) {
            bite_size = length - width;

            bite = utils.eatStr(str, side, bite_size, fill);

            this.html(bite);

            if (settings.tooltip) {
                this.attr('title', str);
            }
        }
        else {
            $.error('Invalid width "' + width + '".');
        }
    }

    methods = {
        init: function (options) {
            return this.each(function () {
                var $this = $(this),
                    data = $this.data('trunk8');

                if (!data) {
                    $this.data('trunk8', (data = new trunk8(this)));
                }

                data.updateSettings(options);

                truncate.call($this);
            });
        },

        /** Updates the text value of the elements while maintaining truncation. */
        update: function (new_string) {
            return this.each(function () {
                var $this = $(this);

                /* Update text. */
                if (new_string) {
                    $this.data('trunk8').original_text = new_string;
                }

                /* Truncate accordingly. */
                truncate.call($this);
            });
        },

        revert: function () {
            return this.each(function () {
                /* Get original text. */
                var text = $(this).data('trunk8').original_text;

                /* Revert element to original text. */
                $(this).html(text);
            });
        },

        /** Returns this instance's settings object. NOT CHAINABLE. */
        getSettings: function () {
            return this.get(0).data('trunk8').settings;
        }
    };

    utils = {
        /** Replaces [bite_size] [side]-most chars in [str] with [fill]. */
        eatStr: function (str, side, bite_size, fill) {
            var length = str.length,
                key = utils.eatStr.generateKey.apply(null, arguments),
                half_length,
                half_bite_size;

            /* If the result is already in the cache, return it. */
            if (utils.eatStr.cache[key]) {
                return utils.eatStr.cache[key];
            }

            /* Common error handling. */
            if ((typeof str !== 'string') || (length === 0)) {
                $.error('Invalid source string "' + str + '".');
            }
            if ((bite_size < 0) || (bite_size > length)) {
                $.error('Invalid bite size "' + bite_size + '".');
            }
            else if (bite_size === 0) {
                /* No bite should show no truncation. */
                return str;
            }
            if (typeof (fill + '') !== 'string') {
                $.error('Fill unable to be converted to a string.');
            }

            /* Compute the result, store it in the cache, and return it. */
            switch (side) {
                case SIDES.right:
                    /* str... */
                    return utils.eatStr.cache[key] =
                        $.trim(str.substr(0, length - bite_size)) + fill;

                case SIDES.left:
                    /* ...str */
                    return utils.eatStr.cache[key] =
                        fill + $.trim(str.substr(bite_size));

                case SIDES.center:
                    /* Bit-shift to the right by one === Math.floor(x / 2) */
                    half_length = length >> 1; // halve the length
                    half_bite_size = bite_size >> 1; // halve the bite_size

                    /* st...r */
                    return utils.eatStr.cache[key] =
                        $.trim(utils.eatStr(str.substr(0, length - half_length), SIDES.right, bite_size - half_bite_size, '')) +
                        fill +
                        $.trim(utils.eatStr(str.substr(length - half_length), SIDES.left, half_bite_size, ''));

                default:
                    $.error('Invalid side "' + side + '".');
            }
        },

        getLineHeight: function (elem) {
            var $elem = $(elem),
                floats = $elem.css('float'),
                position = $elem.css('position'),
                html = $elem.html(),
                wrapper_id = 'line-height-test',
                line_height;

            if (floats !== 'none') {
                $elem.css('float', 'none');
            }

            if (position === 'absolute') {
                $elem.css('position', 'static');
            }

            /* Set the content to a small single character and wrap. */
            $elem.html('i').wrap('<div id="' + wrapper_id + '" />');

            /* Calculate the line height by measuring the wrapper.*/
            line_height = $('#' + wrapper_id).innerHeight();

            /* Remove the wrapper and reset the style/content. */
            $elem.html(html).css({
                'float': floats,
                'position': position
            }).unwrap();

            return line_height;
        }
    };

    utils.eatStr.cache = {};
    utils.eatStr.generateKey = function () {
        return Array.prototype.join.call(arguments, '');
    };

    $.fn.trunk8 = function (method) {
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        else if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        }
        else {
            $.error('Method ' + method + ' does not exist on jQuery.trunk8');
        }
    };

    /* Default trunk8 settings. */
    $.fn.trunk8.defaults = {
        fill: '&hellip;',
        lines: 1,
        side: SIDES.right,
        tooltip: true,
        width: WIDTH.auto
    };
})(jQuery);


var isFirefox = typeof InstallTrigger !== 'undefined';

if (isFirefox === true) {
    $('.threeLine').trunk8({
        lines: 4
    });
    $('.twoLine').trunk8({
        lines: 3
    });
}
else {
    $('.threeLine').trunk8({
        lines: 3
    });
    $('.twoLine').trunk8({
        lines: 2
    });
}

$('.fourLine').trunk8({
    lines: 4
});
$('.fiveLine').trunk8({
    lines: 5
});
$('.sixLine').trunk8({
    lines: 6
});
$('.oneLine').trunk8({
    lines: 1
});

$('.story_view_line').trunk8({
    lines: 3
});

$('.story_two_line').trunk8({
    lines: 4
})

$(document).ready(function () {
    var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    if (w > 992) {
        $('.story_view_line').trunk8({
            lines: 4
        });
        $('.story_two_line').trunk8({
            lines: 1
        });
    }
})

$(document).ready(function () {
    var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    if (w < 1180) {
        $('.change2ontab').trunk8({
            lines: 1
        });
    }
})


$(document).ready(function () {
    $('.scrollbar-inner').scrollbar();
});
/**
 * jQuery CSS Customizable Scrollbar
 *
 * Copyright 2015, Yuriy Khabarov
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * If you found bug, please contact me via email <13real008@gmail.com>
 *
 * Compressed by http://jscompress.com/
 *
 * @author Yuriy Khabarov aka Gromo
 * @version 0.2.10
 * @url https://github.com/gromo/jquery.scrollbar/
 *
 */
!function(l,e){"function"==typeof define&&define.amd?define(["jquery"],e):e(l.jQuery)}(this,function(l){"use strict";function e(e){if(t.webkit&&!e)return{height:0,width:0};if(!t.data.outer){var o={border:"none","box-sizing":"content-box",height:"200px",margin:"0",padding:"0",width:"200px"};t.data.inner=l("<div>").css(l.extend({},o)),t.data.outer=l("<div>").css(l.extend({left:"-1000px",overflow:"scroll",position:"absolute",top:"-1000px"},o)).append(t.data.inner).appendTo("body")}return t.data.outer.scrollLeft(1e3).scrollTop(1e3),{height:Math.ceil(t.data.outer.offset().top-t.data.inner.offset().top||0),width:Math.ceil(t.data.outer.offset().left-t.data.inner.offset().left||0)}}function o(){var l=e(!0);return!(l.height||l.width)}function s(l){var e=l.originalEvent;return e.axis&&e.axis===e.HORIZONTAL_AXIS?!1:e.wheelDeltaX?!1:!0}var r=!1,t={data:{index:0,name:"scrollbar"},macosx:/mac/i.test(navigator.platform),mobile:/android|webos|iphone|ipad|ipod|blackberry/i.test(navigator.userAgent),overlay:null,scroll:null,scrolls:[],webkit:/webkit/i.test(navigator.userAgent)&&!/edge\/\d+/i.test(navigator.userAgent)};t.scrolls.add=function(l){this.remove(l).push(l)},t.scrolls.remove=function(e){for(;l.inArray(e,this)>=0;)this.splice(l.inArray(e,this),1);return this};var i={autoScrollSize:!0,autoUpdate:!0,debug:!1,disableBodyScroll:!1,duration:200,ignoreMobile:!1,ignoreOverlay:!1,scrollStep:30,showArrows:!1,stepScrolling:!0,scrollx:null,scrolly:null,onDestroy:null,onInit:null,onScroll:null,onUpdate:null},n=function(s){t.scroll||(t.overlay=o(),t.scroll=e(),a(),l(window).resize(function(){var l=!1;if(t.scroll&&(t.scroll.height||t.scroll.width)){var o=e();(o.height!==t.scroll.height||o.width!==t.scroll.width)&&(t.scroll=o,l=!0)}a(l)})),this.container=s,this.namespace=".scrollbar_"+t.data.index++,this.options=l.extend({},i,window.jQueryScrollbarOptions||{}),this.scrollTo=null,this.scrollx={},this.scrolly={},s.data(t.data.name,this),t.scrolls.add(this)};n.prototype={destroy:function(){if(this.wrapper){this.container.removeData(t.data.name),t.scrolls.remove(this);var e=this.container.scrollLeft(),o=this.container.scrollTop();this.container.insertBefore(this.wrapper).css({height:"",margin:"","max-height":""}).removeClass("scroll-content scroll-scrollx_visible scroll-scrolly_visible").off(this.namespace).scrollLeft(e).scrollTop(o),this.scrollx.scroll.removeClass("scroll-scrollx_visible").find("div").andSelf().off(this.namespace),this.scrolly.scroll.removeClass("scroll-scrolly_visible").find("div").andSelf().off(this.namespace),this.wrapper.remove(),l(document).add("body").off(this.namespace),l.isFunction(this.options.onDestroy)&&this.options.onDestroy.apply(this,[this.container])}},init:function(e){var o=this,r=this.container,i=this.containerWrapper||r,n=this.namespace,c=l.extend(this.options,e||{}),a={x:this.scrollx,y:this.scrolly},d=this.wrapper,h={scrollLeft:r.scrollLeft(),scrollTop:r.scrollTop()};if(t.mobile&&c.ignoreMobile||t.overlay&&c.ignoreOverlay||t.macosx&&!t.webkit)return!1;if(d)i.css({height:"auto","margin-bottom":-1*t.scroll.height+"px","margin-right":-1*t.scroll.width+"px","max-height":""});else{if(this.wrapper=d=l("<div>").addClass("scroll-wrapper").addClass(r.attr("class")).css("position","absolute"==r.css("position")?"absolute":"relative").insertBefore(r).append(r),r.is("textarea")&&(this.containerWrapper=i=l("<div>").insertBefore(r).append(r),d.addClass("scroll-textarea")),i.addClass("scroll-content").css({height:"auto","margin-bottom":-1*t.scroll.height+"px","margin-right":-1*t.scroll.width+"px","max-height":""}),r.on("scroll"+n,function(e){l.isFunction(c.onScroll)&&c.onScroll.call(o,{maxScroll:a.y.maxScrollOffset,scroll:r.scrollTop(),size:a.y.size,visible:a.y.visible},{maxScroll:a.x.maxScrollOffset,scroll:r.scrollLeft(),size:a.x.size,visible:a.x.visible}),a.x.isVisible&&a.x.scroll.bar.css("left",r.scrollLeft()*a.x.kx+"px"),a.y.isVisible&&a.y.scroll.bar.css("top",r.scrollTop()*a.y.kx+"px")}),d.on("scroll"+n,function(){d.scrollTop(0).scrollLeft(0)}),c.disableBodyScroll){var p=function(l){s(l)?a.y.isVisible&&a.y.mousewheel(l):a.x.isVisible&&a.x.mousewheel(l)};d.on("MozMousePixelScroll"+n,p),d.on("mousewheel"+n,p),t.mobile&&d.on("touchstart"+n,function(e){var o=e.originalEvent.touches&&e.originalEvent.touches[0]||e,s={pageX:o.pageX,pageY:o.pageY},t={left:r.scrollLeft(),top:r.scrollTop()};l(document).on("touchmove"+n,function(l){var e=l.originalEvent.targetTouches&&l.originalEvent.targetTouches[0]||l;r.scrollLeft(t.left+s.pageX-e.pageX),r.scrollTop(t.top+s.pageY-e.pageY),l.preventDefault()}),l(document).on("touchend"+n,function(){l(document).off(n)})})}l.isFunction(c.onInit)&&c.onInit.apply(this,[r])}l.each(a,function(e,t){var i=null,d=1,h="x"===e?"scrollLeft":"scrollTop",p=c.scrollStep,u=function(){var l=r[h]();r[h](l+p),1==d&&l+p>=f&&(l=r[h]()),-1==d&&f>=l+p&&(l=r[h]()),r[h]()==l&&i&&i()},f=0;t.scroll||(t.scroll=o._getScroll(c["scroll"+e]).addClass("scroll-"+e),c.showArrows&&t.scroll.addClass("scroll-element_arrows_visible"),t.mousewheel=function(l){if(!t.isVisible||"x"===e&&s(l))return!0;if("y"===e&&!s(l))return a.x.mousewheel(l),!0;var i=-1*l.originalEvent.wheelDelta||l.originalEvent.detail,n=t.size-t.visible-t.offset;return(i>0&&n>f||0>i&&f>0)&&(f+=i,0>f&&(f=0),f>n&&(f=n),o.scrollTo=o.scrollTo||{},o.scrollTo[h]=f,setTimeout(function(){o.scrollTo&&(r.stop().animate(o.scrollTo,240,"linear",function(){f=r[h]()}),o.scrollTo=null)},1)),l.preventDefault(),!1},t.scroll.on("MozMousePixelScroll"+n,t.mousewheel).on("mousewheel"+n,t.mousewheel).on("mouseenter"+n,function(){f=r[h]()}),t.scroll.find(".scroll-arrow, .scroll-element_track").on("mousedown"+n,function(s){if(1!=s.which)return!0;d=1;var n={eventOffset:s["x"===e?"pageX":"pageY"],maxScrollValue:t.size-t.visible-t.offset,scrollbarOffset:t.scroll.bar.offset()["x"===e?"left":"top"],scrollbarSize:t.scroll.bar["x"===e?"outerWidth":"outerHeight"]()},a=0,v=0;return l(this).hasClass("scroll-arrow")?(d=l(this).hasClass("scroll-arrow_more")?1:-1,p=c.scrollStep*d,f=d>0?n.maxScrollValue:0):(d=n.eventOffset>n.scrollbarOffset+n.scrollbarSize?1:n.eventOffset<n.scrollbarOffset?-1:0,p=Math.round(.75*t.visible)*d,f=n.eventOffset-n.scrollbarOffset-(c.stepScrolling?1==d?n.scrollbarSize:0:Math.round(n.scrollbarSize/2)),f=r[h]()+f/t.kx),o.scrollTo=o.scrollTo||{},o.scrollTo[h]=c.stepScrolling?r[h]()+p:f,c.stepScrolling&&(i=function(){f=r[h](),clearInterval(v),clearTimeout(a),a=0,v=0},a=setTimeout(function(){v=setInterval(u,40)},c.duration+100)),setTimeout(function(){o.scrollTo&&(r.animate(o.scrollTo,c.duration),o.scrollTo=null)},1),o._handleMouseDown(i,s)}),t.scroll.bar.on("mousedown"+n,function(s){if(1!=s.which)return!0;var i=s["x"===e?"pageX":"pageY"],c=r[h]();return t.scroll.addClass("scroll-draggable"),l(document).on("mousemove"+n,function(l){var o=parseInt((l["x"===e?"pageX":"pageY"]-i)/t.kx,10);r[h](c+o)}),o._handleMouseDown(function(){t.scroll.removeClass("scroll-draggable"),f=r[h]()},s)}))}),l.each(a,function(l,e){var o="scroll-scroll"+l+"_visible",s="x"==l?a.y:a.x;e.scroll.removeClass(o),s.scroll.removeClass(o),i.removeClass(o)}),l.each(a,function(e,o){l.extend(o,"x"==e?{offset:parseInt(r.css("left"),10)||0,size:r.prop("scrollWidth"),visible:d.width()}:{offset:parseInt(r.css("top"),10)||0,size:r.prop("scrollHeight"),visible:d.height()})}),this._updateScroll("x",this.scrollx),this._updateScroll("y",this.scrolly),l.isFunction(c.onUpdate)&&c.onUpdate.apply(this,[r]),l.each(a,function(l,e){var o="x"===l?"left":"top",s="x"===l?"outerWidth":"outerHeight",t="x"===l?"width":"height",i=parseInt(r.css(o),10)||0,n=e.size,a=e.visible+i,d=e.scroll.size[s]()+(parseInt(e.scroll.size.css(o),10)||0);c.autoScrollSize&&(e.scrollbarSize=parseInt(d*a/n,10),e.scroll.bar.css(t,e.scrollbarSize+"px")),e.scrollbarSize=e.scroll.bar[s](),e.kx=(d-e.scrollbarSize)/(n-a)||1,e.maxScrollOffset=n-a}),r.scrollLeft(h.scrollLeft).scrollTop(h.scrollTop).trigger("scroll")},_getScroll:function(e){var o={advanced:['<div class="scroll-element">','<div class="scroll-element_corner"></div>','<div class="scroll-arrow scroll-arrow_less"></div>','<div class="scroll-arrow scroll-arrow_more"></div>','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_inner-wrapper">','<div class="scroll-element_inner scroll-element_track">','<div class="scroll-element_inner-bottom"></div>',"</div>","</div>",'<div class="scroll-bar">','<div class="scroll-bar_body">','<div class="scroll-bar_body-inner"></div>',"</div>",'<div class="scroll-bar_bottom"></div>','<div class="scroll-bar_center"></div>',"</div>","</div>","</div>"].join(""),simple:['<div class="scroll-element">','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_track"></div>','<div class="scroll-bar"></div>',"</div>","</div>"].join("")};return o[e]&&(e=o[e]),e||(e=o.simple),e="string"==typeof e?l(e).appendTo(this.wrapper):l(e),l.extend(e,{bar:e.find(".scroll-bar"),size:e.find(".scroll-element_size"),track:e.find(".scroll-element_track")}),e},_handleMouseDown:function(e,o){var s=this.namespace;return l(document).on("blur"+s,function(){l(document).add("body").off(s),e&&e()}),l(document).on("dragstart"+s,function(l){return l.preventDefault(),!1}),l(document).on("mouseup"+s,function(){l(document).add("body").off(s),e&&e()}),l("body").on("selectstart"+s,function(l){return l.preventDefault(),!1}),o&&o.preventDefault(),!1},_updateScroll:function(e,o){var s=this.container,r=this.containerWrapper||s,i="scroll-scroll"+e+"_visible",n="x"===e?this.scrolly:this.scrollx,c=parseInt(this.container.css("x"===e?"left":"top"),10)||0,a=this.wrapper,d=o.size,h=o.visible+c;o.isVisible=d-h>1,o.isVisible?(o.scroll.addClass(i),n.scroll.addClass(i),r.addClass(i)):(o.scroll.removeClass(i),n.scroll.removeClass(i),r.removeClass(i)),"y"===e&&(s.is("textarea")||h>d?r.css({height:h+t.scroll.height+"px","max-height":"none"}):r.css({"max-height":h+t.scroll.height+"px"})),(o.size!=s.prop("scrollWidth")||n.size!=s.prop("scrollHeight")||o.visible!=a.width()||n.visible!=a.height()||o.offset!=(parseInt(s.css("left"),10)||0)||n.offset!=(parseInt(s.css("top"),10)||0))&&(l.extend(this.scrollx,{offset:parseInt(s.css("left"),10)||0,size:s.prop("scrollWidth"),visible:a.width()}),l.extend(this.scrolly,{offset:parseInt(s.css("top"),10)||0,size:this.container.prop("scrollHeight"),visible:a.height()}),this._updateScroll("x"===e?"y":"x",n))}};var c=n;l.fn.scrollbar=function(e,o){return"string"!=typeof e&&(o=e,e="init"),"undefined"==typeof o&&(o=[]),l.isArray(o)||(o=[o]),this.not("body, .scroll-wrapper").each(function(){var s=l(this),r=s.data(t.data.name);(r||"init"===e)&&(r||(r=new c(s)),r[e]&&r[e].apply(r,o))}),this},l.fn.scrollbar.options=i;var a=function(){var l=0,e=0;return function(o){var s,i,n,c,d,h,p;for(s=0;s<t.scrolls.length;s++)c=t.scrolls[s],i=c.container,n=c.options,d=c.wrapper,h=c.scrollx,p=c.scrolly,(o||n.autoUpdate&&d&&d.is(":visible")&&(i.prop("scrollWidth")!=h.size||i.prop("scrollHeight")!=p.size||d.width()!=h.visible||d.height()!=p.visible))&&(c.init(),n.debug&&(window.console&&console.log({scrollHeight:i.prop("scrollHeight")+":"+c.scrolly.size,scrollWidth:i.prop("scrollWidth")+":"+c.scrollx.size,visibleHeight:d.height()+":"+c.scrolly.visible,visibleWidth:d.width()+":"+c.scrollx.visible},!0),e++));r&&e>10?(window.console&&console.log("Scroll updates exceed 10"),a=function(){}):(clearTimeout(l),l=setTimeout(a,300))}}();window.angular&&!function(l){l.module("jQueryScrollbar",[]).provider("jQueryScrollbar",function(){var e=i;return{setOptions:function(o){l.extend(e,o)},$get:function(){return{options:l.copy(e)}}}}).directive("jqueryScrollbar",["jQueryScrollbar","$parse",function(l,e){return{restrict:"AC",link:function(o,s,r){var t=e(r.jqueryScrollbar),i=t(o);s.scrollbar(i||l.options).on("$destroy",function(){s.scrollbar("destroy")})}}}])}(window.angular)});
// $(".overlayMenu").hide();
$("#menuOpen").click(function () {
    $(".menu-drawer").toggleClass('open');
    $('body').toggleClass('overflow');
    $('.overlayMenu').toggleClass('active');
});

$("#menuClose, .overlayMenu").click(function () {
    $(".menu-drawer").removeClass('open');
    $('body').toggleClass('overflow');
    $('.overlayMenu').removeClass('active');
});

$(function () {
    $(window).scroll(function () {
        var winTop = $(window).scrollTop();
        if (winTop >= 90) {
            $("header").addClass("sticky-header");
            $('.home-sticky, .overlayMenu, .sectionSticky, .social_share_subHeader').addClass('sticky');
            $('#homeMenu').addClass('sticky');
            $('.sticky-logo').addClass('active');
        } else {
            $("header").removeClass("sticky-header");
            $('.home-sticky, .overlayMenu, .sectionSticky, .social_share_subHeader').removeClass('sticky');
            $('#homeMenu').removeClass('sticky');
            $('.sticky-logo').removeClass('active');
        }//if-else
    });//win func.
});//ready func.


$('.hasChild .menuToggle').click(function (e) {
    e.preventDefault();
    var $this = $(this);
    if ($this.next().hasClass('active')) {
        $this.parent().find('.menuAnchor').removeClass('activeMenu');
        $this.next().removeClass('active');
        $this.next().slideUp(100);
        $this.removeClass('menuMinus');
    } else {
        $this.parent().parent().find('.subMenu').removeClass('active');
        $this.parent().parent().find('.menuAnchor').removeClass('activeMenu');
        $this.parent().parent().find('.menuToggle').removeClass('menuMinus');
        $this.parent().parent().find('.subMenu').slideUp(100);
        $this.next().toggleClass('active');
        $this.parent().find('.menuAnchor').addClass('activeMenu');
        $this.next().slideToggle(100);
        $this.addClass('menuMinus');
    }
});


$('#clickSearch').click(function (e) {
    if ($('#global-search').val() !== "") {
        search($('#global-search').val());
        return false;
    }
});

$('#clickSearch2').click(function (e) {
    if ($('#global-search2').val() !== "") {
        search($('#global-search2').val());
        return false;
    }
});

$('#clickSearch3').click(function (e) {
    if ($('#global-search3').val() !== "") {
        search($('#global-search3').val());
        return false;
    }
});


function searchKeyPress(e) {
    // look for window.event in case event isn't passed in
    e = e || window.event;
    if (e.keyCode === 13) {
        document.getElementById('clickSearch').click();
        return false;
    }
    return true;
}

function searchKeyPress2(e) {
    // look for window.event in case event isn't passed in
    e = e || window.event;
    if (e.keyCode === 13) {
        document.getElementById('clickSearch2').click();
        return false;
    }
    return true;
}

function searchKeyPress3(e) {
    // look for window.event in case event isn't passed in
    e = e || window.event;
    if (e.keyCode === 13) {
        document.getElementById('clickSearch3').click();
        return false;
    }
    return true;
}

$('#savePhone').hide();


function addPhone() {
    $('.textNumber').toggleClass('hide');
    $('.inputNumber').toggleClass('show');
    $('#addPhone').hide();
    $('#savePhone').show();

    if (cookie !== '') {
        var userName = JSON.parse(cookie);
        var userId = userName.id;
        var UserPhone = userName.phoneNumber;
        $('#phoneNumber').val(UserPhone);
    }
}


function Isphone(phone) {
    var number = $('field_Id').val();
    var filter = /^[1-9][0-9]{9,14}$/;
    if (filter.test(phone)) {
        return true;
    }
    else {
        return false;
    }
}


function savePhone(e) {
    var phone = $('#phoneNumber').val();
    var isValid = true;

    if (cookie !== '') {
        var userName = JSON.parse(cookie);
        var userId = userName.id;
    }


    var authKey = getCookie("hnh");
    if (authKey !== '') {
        var key = authKey;
    }

    function formToJSON() {
        return JSON.stringify({
            "phoneNumber": $('#phoneNumber').val(),
            "id": userId
        });
    }

    if ($("#phoneNumber").val() !== '') {
        $("#phoneNumber").removeClass('error');
    }
    else {
        $("#phoneNumber").addClass('error');
        isValid = false;
    }

    if (Isphone(phone) === false) {
        $('#invalid_email').show();
        $("#phoneNumber").addClass('error');
        isValid = false;
    }
    else {
        $("#phoneNumber").removeClass('error');
    }

    if (isValid !== false) {
        // e.preventDefault();
        $.ajax({
            url: '/auth/editProfile', // url where to submit the request
            type: "post", // type of action POST || GET
            data: formToJSON(), // post data || get data
            contentType: 'application/json',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("Authorization", "Basic " + key);
            },
            success: function (result) {
                var loggedInUser = JSON.stringify(result)
                setCookie('u_d', loggedInUser);
                $('.textNumber').toggleClass('hide');
                $('.inputNumber').toggleClass('show');
                $('#addPhone').show();
                $('#savePhone').hide();
                window.location.reload(true);
            }
        });
    }
}

$("#message").hide();
$("#message_error").hide();
$("#submit_btn").on('click', function (e) {
    var password = $('#new_password').val();
    var authKey = getCookie("hnh");
    if (authKey !== '') {
        var key = authKey;

    }

    if (cookie !== '') {
        var userName = JSON.parse(cookie);
        var userId = userName.id;
    }

    function CPToJSON() {
        return JSON.stringify({
            "password": $('#new_password').val(),
            "id": userId
        });
    }

    //  debugger;
    var isValid = true;
    $('input[type="password"]').each(function () {
        if ($.trim($(this).val()) === '') {
            isValid = false;
            $(this).addClass('error');
        }
        else {
            $(this).removeClass('error');
        }
    });

    if (checkPassword(password) === false) {
        $('#invalid_con_pass').show();
        isValid = false;
    }
    else {
        $('#invalid_con_pass').hide();
    }

    checkPassword();
    if (isValid === false) {
        e.preventDefault();
        checkPassword();
    }
    else {
        checkPassword();
        $.ajax({
            url: '/auth/changePassword', // url where to submit the request
            type: "post", // type of action POST || GET
            data: CPToJSON(), // post data || get data
            contentType: 'application/json',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("Authorization", "Basic " + key);
            },
            success: function (result) {
                var logMsg = JSON.stringify(result);
                $('#message').show();
                logout();
            }
        });
    }
});

$("#submit_btn_fp").on('click', function (e) {
    var password = $('#new_password').val();

    var urlC = window.location.href;
    var input = urlC.split('/');
    var userID = input[4];
    var token = input[5];

    function FPToJSON() {
        return JSON.stringify({
            "password": $('#new_password').val(),
            "userId": userID,
            "token": token,
            "conformPassword": $('#confirm_password').val()
        });
    }

    //  debugger;
    var isValid = true;
    $('input[type="password"]').each(function () {
        if ($.trim($(this).val()) === '') {
            isValid = false;
            $(this).addClass('error');
        }
        else {
            $(this).removeClass('error');
        }
    });

    if (checkPassword(password) === false) {
        $('#invalid_con_pass').show();
        isValid = false;
    }
    else {
        $('#invalid_con_pass').hide();
    }

    checkPassword();
    if (isValid === false) {
        e.preventDefault();
        checkPassword();
    }
    else {
        checkPassword();
        $.ajax({
            url: '/update/password', // url where to submit the request
            type: "post", // type of action POST || GET
            data: FPToJSON(), // post data || get data
            contentType: 'application/json',
            success: function (result) {
                var logMsg = JSON.stringify(result);
                if (logMsg === 'Invalid Url' || logMsg === 'URL Expired, Please re-generate URL') {
                    $('#message_error').show();
                }
                else {
                    $('#message').show();
                }
            }
        });
    }
});

function checkPassword() {
    var pass = $('#new_password').val();
    var confpass = $('#confirm_password').val();
    if (pass !== confpass) {
        return false;
    } else {
        return true;
    }
}


function GLogin() {
    $.ajax({
        url: 'google/createAuthorization', // url where to submit the request
        type: "get", // type of action POST || GET
        dataType: 'json', // data type
        contentType: 'application/json',
        async: false,
        success: function (result) {
            window.open(result.message, '_self');
        }
    });
}

function FLogin() {
    //  debugger;
    $.ajax({
        url: 'facebook/createAuthorization', // url where to submit the request
        type: "get", // type of action POST || GET
        dataType: 'json', // data type
        contentType: 'application/json',
        async: false,
        success: function (result) {
            window.open(result.message, '_self');
        }
    });
}

//set cookie

function setCookie(c_name, value) {
    // document.cookie = c_name + "=" + (value) +  path=/";
    document.cookie = c_name + "=" + value + ";" + ";path=/";
}

function removeCookie(c_name) {
    document.cookie = c_name + "=";
}


function getCookie(c_name) {
    if (document.cookie.length > 0) {
        c_start = document.cookie.indexOf(c_name + "=");
        if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1) c_end = document.cookie.length;
            return unescape(document.cookie.substring(c_start, c_end));
        }
    }
    return "";
}

var redirectionUrl;
var loggedInUser = null;
var cookie = getCookie("u_d");

// function checkCookie() {
//
// }

(function () {
    if (cookie !== '') {
        var userName = JSON.parse(cookie);
        userName.fullName = userName.fullName.replace('+', ' ');
        if (userName.phoneNumber === null) {
            userName.phoneNumber = 'Add Phone Number';
        }
        //userName.phoneNumber= userName.phoneNumber.replace(null, 'Add Phone No.');
        $('.hasUser').css("display", "block");
        $('.userName').text(userName.fullName).addClass('show');
        $('.email').text(userName.email);
        $('.textNumber').text(userName.phoneNumber);
        if (userName.imageUrl !== null) {
            $('.image_wrap img').attr("src", userName.imageUrl);
        }
        $('#notUser').hide();
        $('.notUserProfile').hide();
        $('.userProfileLog').css("display", "block");
        redirectionUrl = userName.redirectionUrl;
    }
})()


//Check
function FBstatus() {
    if (cookie !== '') {
        var userName = JSON.parse(cookie);
        var userFrom = userName.socialSignInProvider;
        var userEmail = userName.email;
        var status = JSON.stringify({
            "status": userFrom,
            "email": userEmail
        });
        return status;
    }
}


//checkCookie();


function logout() {
    var authKey = getCookie("hnh");
    if (authKey !== '') {
        var key = authKey;
    }
    $.ajax({
        url: '/auth/logout', // url where to submit the request
        type: "get", // type of action POST || GET
        dataType: 'json', // data type
        contentType: 'application/json',
        beforeSend: function (xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + key);
        },
        success: function (result) {
            var logMsg = JSON.stringify(result);
            $('#notUser').show();
            $('.hasUser').hide();
            //FBstatus();
            setCookie("bb", FBstatus());
            removeCookie('u_d');
            removeCookie('hnh');
            window.location.href = '/';
            loggedInUser = null;
        }, error: function (err) {
            $('#notUser').show();
            $('.hasUser').hide();
            setCookie("bb", FBstatus());
            removeCookie('u_d');
            removeCookie('hnh');
            window.location.href = '/';
            loggedInUser = null;
        }
    });
}

function logout2() {
    var authKey = getCookie("hnh");
    if (authKey !== '') {
        var key = authKey;
    }
    $.ajax({
        url: '/auth/logout', // url where to submit the request
        type: "get", // type of action POST || GET
        dataType: 'json', // data type
        contentType: 'application/json',
        beforeSend: function (xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + key);
        },
        success: function (result) {
            var logMsg = JSON.stringify(result)
            $('#notUser').show();
            $('.hasUser').hide();
            setCookie("bb", FBstatus());
            removeCookie('u_d');
            removeCookie('hnh');
            window.location.href = '/';
            loggedInUser = null;
            isSudoku = false;
        }, error: function (err) {
            $('#notUser').show();
            $('.hasUser').hide();
            setCookie("bb", FBstatus());
            removeCookie('u_d');
            removeCookie('hnh');
            window.location.href = '/';
            loggedInUser = null;
        }
    });
}


function search(searchTerm) {
    //  searchTerm = searchTerm.replace(/[^\w\s]/gi, ' ');
    searchTerm = searchTerm.trim();
    searchTerm = searchTerm.replace(/[-]/gi, ' ');
    searchTerm = searchTerm.replace(/[%]/gi, '');
    searchTerm = searchTerm.replace(/[\s]+/gi, '-');
    searchTerm = searchTerm.toLowerCase();
    localStorage.removeItem('sd');
    localStorage.removeItem('ed');
    localStorage.removeItem('author');
    localStorage.removeItem('section');
    localStorage.removeItem('rel');
    location.href = "/search/" + searchTerm;
    return false;
}

//Anchor url  glossary
if ($("a").hasClass('carousel-control-next')) {
}
else {
    $('a[href^="#"]').on('click', function (event) {
        var target = $(this.getAttribute('href'));
        if (target.length) {
            event.preventDefault();
            $('html, body').stop().animate({
                scrollTop: target.offset().top - 90
            }, 1000);
        }
        if ($(window).width() < 768) {
            $('html, body').stop().animate({
                scrollTop: target.offset().top - 145
            }, 1000);
        }
    });
}


//Search text_______________________________________________
$('.search-btn').click(function () {
    $('.headerSearch').addClass('show');
    $('.headerSearch.show').focus();
    $('.searchIconPage').addClass('show');
});

$('body').click(function () {
    $('.headerSearch').removeClass('show');
    $('.headerSearch.show').focus();
    $('.searchIconPage').removeClass('show');
});

$('header, nav').click(function (event) {
    event.stopPropagation();
});


$(document).ready(function () {
    var $imageSrc;
    $('.imgView').click(function () {
        $imageSrc = $(this).data('bigimage');
    });

    $('.modal').on('shown.bs.modal', function (e) {
        $(".image").attr('src', $imageSrc);
    });
    $('.modal').on('hide.bs.modal', function (e) {
        $(".image").attr('src', '');
    });
});


var swiper = new Swiper('.spotlightSlider', {
    pagination: {
        el: '.swiper-pagination',
        type: 'fraction',
        clickable: true
    },
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    }
});

var swiper = new Swiper('.sportsSpotlight', {
    pagination: {
        el: '.swiper-pagination',
        type: 'fraction',
        clickable: true
    },
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    }
});

var comic = new Swiper('.comicsSlider, .twitterTakeSlide', {
    pagination: {
        el: '.swiper-pagination',
        type: 'bullets',
        clickable: true
    }
});
setTimeout(function () {
    comic.on('slideChangeTransitionStart', function () {
        $(".comic-title").hide();
        $("#comic-" + (comic.activeIndex + 1)).show();
    });
}, 500);

var four = new Swiper('.four-column', {
    slidesPerView: 4,
    spaceBetween: 20,
    slidesPerGroup: 4,
    // loopFillGroupWithBlank: true,
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    },
    pagination: {
        el: '.swiper-pagination',
        type: 'fraction'
    },
    breakpoints: {
        1025: {
            spaceBetween: 20
        },
        769: {
            slidesPerView: 3,
            spaceBetween: 20,
        }
    }
});

var gallery = new Swiper('.gallerySlide', {
    slidesPerView: 'auto',
    spaceBetween: 20,
    pagination: {
        el: '.swiper-pagination',
        clickable: true,
        type: 'fraction'
    },
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    }
});

var culture = new Swiper('.cultureSlide', {
    slidesPerView: 'auto',
    spaceBetween: 10,
    pagination: {
        el: '.swiper-pagination',
        clickable: true,
        type: 'fraction'
    },
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    },
    breakpoints: {
        769: {
            spaceBetween: 10
        }
    }
});

var galleryTop = new Swiper('.gallery-top', {
    spaceBetween: 10
});
var galleryThumbs = new Swiper('.gallery-thumbs', {
    spaceBetween: 30,
    centeredSlides: true,
    slidesPerView: 'auto',
    touchRatio: 0.2,
    slideToClickedSlide: true,
    clickable: true,
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
    },
    pagination: {
        el: '.swiper-pagination',
        clickable: true
    }

});

if ($("div").hasClass('gallery-thumbs')) {
    galleryTop.controller.control = galleryThumbs;
    galleryThumbs.controller.control = galleryTop;
}

if ($("div").hasClass('date')) {
    var daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    n = new Date();
    y = n.getFullYear();
    m = n.getMonth();
    d = n.getDate();
    day = n.getDay();
    document.getElementById("today").innerHTML = daysOfWeek[day] + ", " + d + " " + months[m] + " " + y;
}

if ($("p").hasClass('copyRight')) {
    n = new Date();
    y = n.getFullYear();
    document.getElementById("year").innerHTML = y;
}


//Sudoku

function clickLogin(elem) {
    var currentUrl = window.location.href;
    setCookie('r_d', currentUrl);
    var cookieUrl = getCookie("r_d");
    location.href = "/log-in?" + getRefParam(elem);
}

function clickRegister(elem) {
    var currentUrl = window.location.href;
    setCookie('r_d', currentUrl);
    var cookieUrl = getCookie("r_d");
    location.href = "/signup?" + getRefParam(elem);
}

var currentUrl;

// var isSudoku = false;

function playSukodu(elem) {
    location.href = "/sudoku?" + getRefParam(elem);
}

//For Ref param start

var getClosest = function (elem, selector) {
    for (; elem && elem !== document; elem = elem.parentNode) {
        if ((elem.dataset['widget'] != "") && (elem.dataset['widget'] != null)) return elem;
    }
    return null;
};

function getRefParam(elem) {
    var newHref;
    var parent = getClosest(elem, 'data');
    if (parent !== null) {
        var dataValue = parent.dataset["widget"];
        dataValue = dataValue.toLowerCase().replace(/[^\w ]+/g, '').replace(/ +/g, '-');
        newHref = 'ref=' + dataValue;
    }
    return newHref == !undefined ? '' : newHref;
}

$("a").mousedown(function () {
    var href = this.href
    var parent = getClosest(this, 'data');
    if (parent !== null) {
        var newHref;
        var dataValue = parent.dataset["widget"];
        dataValue = dataValue.toLowerCase().replace(/[^\w ]+/g, '').replace(/ +/g, '-');
        if (href.includes('?')) {
            if (href.includes('?ref=')) {
                newHref = href.split("?ref=")[0] + '?' + 'ref=' + dataValue;
            } else {
                newHref = href + '&' + 'ref=' + dataValue;
            }
        } else {
            newHref = href + '?' + 'ref=' + dataValue;
        }
        this.href = newHref;
    }
});


//For Ref param end

//password Hide/show script..

function showPassword() {
    var x = document.getElementById("password");
    $('.toggle-password').toggleClass("fa-eye fa-eye-slash");
    if (x.type === "password") {
        x.type = "text";
    } else {
        x.type = "password";
    }
}

function PasswordDetect(event) {
    var x = document.getElementById("password");
    if (event && event.target && event.target.value.length > 0) {
        $('.toggle-password').addClass("fa fa-fw fa-eye");
    }
    else {
        $('.toggle-password').removeClass("fa fa-fw fa-eye fa-eye fa-eye-slash");
        x.type = "password";
    }
}

var btn = $('#backToTop');
$(window).scroll(function () {
    if ($(window).scrollTop() > 300) {
        btn.addClass('show');
    }
    else {
        btn.removeClass('show');
    }
});
btn.on('click', function (e) {
    e.preventDefault();
    $('html, body').animate({scrollTop: 0}, '300');
});

var addCode =
  "<div id='div-gpt-ad-1558959879030-0' class='positioning' style='height:90px; width:728px;'>\n" +
  '<script>\n' +
  'googletag.cmd.push(function () {\n' +
  "googletag.display('div-gpt-ad-1558959879030-0');\n" +
  '});\n' +
  '</script>\n' +
  '</div>';

$(document).ready(function () {
    var tagCount = $('padiingDetails.story-advertise > p').length;
    var tagCount1 = 4;
    if (tagCount > 0 && tagCount <= 3) {
        addScriptCode(tagCount);
    } else {
        // if (tagCount % 3 === 0) {
            addScriptCode(tagCount1);
        // }
        // else {
        //     addScriptCode(tagCount1);
        //     addScriptCode(tagCount);
        // }

    }
});

function addScriptCode(tagCount) {
    $(addCode).insertAfter(
        '.padiingDetails.story-advertise p:nth-of-type(' + tagCount + ')'
    );
}

function elementInViewPort(classId) {
    var result = {"id": 0, "percentage": 0};
    var id = 0;
    var percentage = 0;
    $("." + classId).each(function () {
        var screenTop = document.documentElement.scrollTop;
        var screenBottom = document.documentElement.scrollTop + $(window).height();
        var boxTop = $(this).offset().top;
        var boxHeight = $(this).height();
        var boxBottom = boxTop + boxHeight;

        if (boxTop > screenTop) {
            if (boxBottom < screenBottom) {
                percentage = 100;
                id = $(this).attr('data-id');
                result.id = id;
                result.percentage = percentage;


            } else if (boxTop < screenBottom) {
                //partial (bottom)
                let percent = Math.round((screenBottom - boxTop) / boxHeight * 100);
                if (percent >= percentage) {
                    percentage = percent;
                    id = $(this).attr('data-id');
                    result.id = id;
                    result.percentage = percentage;
                }
            }
        } else if (boxBottom > screenTop) {
            let percent = Math.round((boxBottom - screenTop) / boxHeight * 100);
            if (percent >= percentage) {
                percentage = percent;
                id = $(this).attr('data-id');
                result.id = id;
                result.percentage = percentage;
            }
        }
    });
    return result;
}

function filterParameter(key, queryString) {
    var filteredParams = "";
    if (queryString != undefined && queryString != null && queryString.length > 0) {
        let hashes = queryString.split('&');
        for (let i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            if (hash[0] != key) {
                filteredParams += filteredParams.length > 0 ? "&" + hash[0] + "=" + hash[1] : hash[0] + "=" + hash[1];
            }
        }
    }
    return filteredParams;
}

function getParameter(key) {
    var queryString = window.location.href.split("?")[1];
    if (queryString != undefined && queryString != null && queryString.length > 0) {
        let hashes = queryString.split('&');
        for (let i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            if (hash[0] == key) {
                return hash[1];
            }
        }
    }
    return null;
}

function checkInViewPort(id) {
    var elem = document.getElementById(id);
    if (elem != undefined) {
        let bounding = elem.getBoundingClientRect();
        if (
            bounding.top >= 0 &&
            bounding.left >= 0 &&
            bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&
            bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight)
        ) {
            return true;
        } else {
            return false;
        }
    }
    return null;
}

$(document).ready(function () {
    if ($('.photo-stories-container').length > 1) {

        var _comscore = _comscore || [];
        _comscore.push({c1: "2", c2: "17824659"});
        (function () {
            var s = document.createElement("script"), el = document.getElementsByTagName("script")[0];
            s.async = true;
            s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js";
            el.parentNode.insertBefore(s, el);
        })();

        function comScoreCall() {
            self.COMSCORE && COMSCORE.beacon({c1: "2", c2: "17824659"});
            $.ajax({
                //url: "{{ route('photogallery.comscore') }}",
                url: "https://www.telegraphindia.com/comscore.txt",
                type: "get", //send it through get method
                cache: "false",
                data: {
                    c1: 2,
                    comscore: 'pageview_candidate'
                },
                success: function (response) {
                    console.log("Success:" + response);
                },
                error: function (error, status, errorThrown) {
                    console.log("error" + error);
                    console.log("error status" + status);
                    console.log("error errorThrown" + errorThrown);
                }
            });
        }

        var originalQueryString = window.location.href.split("?")[1];

        var originalParamImageKey = null;
        if (originalQueryString != undefined) {
            originalParamImageKey = getParameter("slide");
        }

        var originalFilteredParams = filterParameter("slide", originalQueryString);
        var originalUrl = window.location.href.split('?')[0];
        if (originalParamImageKey != null && originalParamImageKey.length > 0) {
            $('html, body').animate({
                scrollTop: $(".photo-stories-container[data-id='" + originalParamImageKey + "']").offset().top - 300
            }, 500);
        }
        $(window).scroll(function () {
            let element = elementInViewPort('photo-stories-container');
            if (element.id > 0) {
                let imageKey = element.id;
                let paramImageKey = getParameter("slide");
                if (paramImageKey != imageKey) {
                    let hashremove = originalUrl;
                    if (originalFilteredParams.length > 0) {
                        hashremove += "?" + originalFilteredParams + "&slide=" + imageKey;
                    } else {
                        hashremove += "?slide=" + imageKey;
                    }
                    if (window.location.href != hashremove) {
                        window.history.pushState('data', 'title', hashremove);
                        window.dataLayer.push({'event': 'VirtualPageview', 'virtualPageURL': hashremove});
                        window.history.pushState({path: hashremove}, '', hashremove);
                        comScoreCall();
                    }
                }
            } else {
                let hashremove = originalUrl;
                if (originalFilteredParams.length > 0) {
                    hashremove += "?" + originalFilteredParams;
                }
                if (window.location.href != hashremove) {
                    //"No image in view port and url is changed, this block will guarentedd be called only on scrol and last/first image of gallery goes out from viewport
                    window.history.pushState('data', 'Title', hashremove);
                    window.history.pushState({path: hashremove}, '', hashremove);
                    comScoreCall();
                }
            }
        });
    }
});



$(document).ready(function () {

    let url = window.location.href;
    url = url.split("?");

    // debugger;
    if (url[1] == "") {
        var flag = url.indexOf('search');
        if (flag) {
            window.history.replaceState('data', 'title', url[0]);
        }
    }
    if (url[0].indexOf('search') == -1) {
        localStorage.removeItem('sd');
        localStorage.removeItem('ed');
        localStorage.removeItem('author');
        localStorage.removeItem('section');
        localStorage.removeItem('rel');
    }

    let author = localStorage.getItem('author');
    $("select#searchAuthor").val(author);

    let section = localStorage.getItem('section');
    $("select#searchSection").val(section);

    let sd = localStorage.getItem('sd');
    $('input#start-date').val(sd);

    let ed = localStorage.getItem('ed');
    $('input#end-date').val(ed);

    let rel = localStorage.getItem('rel');
    if (rel == 'false') {
        $('select#sortRelevance').val(rel);
    }

    if (author != null || section != null || sd != null || ed != null || rel != null) {
        checkWidth();
    }
})

function onAuthorSelect() {
    var author = $('#searchAuthor').val();
    if (author != '') {
        localStorage.setItem('author', author);
        var author = removeSpaceAndUpdate(author);
        checkWidth();
        insertParam('author', author);
    } else {
        localStorage.removeItem('author');
        changeFilter('author');
    }

}

function onSectionSelect() {
    var section = $('#searchSection').val();
    if (section != '') {
        localStorage.setItem('section', section);
        checkWidth();
        insertParam('section', section);
    } else {
        localStorage.removeItem('section');
        changeFilter('section');
    }
}

function removeSpaceAndUpdate(author) {
    // var author = author.split('&');
    author = author.replace(/\s+/g, '-');
    return author;
}

function insertParam(key, value) {
    key = encodeURI(key);
    value = encodeURI(value);

    var kvp = document.location.search.substr(1).split('&');
    // debugger;
    if (key == 'author' || key == 'section' || key == 'sd') {
        if (kvp.length > 0) {
            for (var i = 0; i < kvp.length; i++) {
                let strKey = kvp[i].split('=');
                if ((strKey[0] == 'aid' && key == 'author') || (strKey[0] == 'sid' && key == 'section') || (strKey[0] == 'sd' && key == 'sd')) {
                    if (key == 'sd') {
                        kvp.splice(i, 2);
                    }
                    else {
                        kvp.splice(i, 1);
                    }
                }
                if (strKey[0] == 'page') {
                    kvp.splice(i, 1);
                }
            }
        }
    }

    var i = kvp.length;
    var x;

    while (i--) {
        x = kvp[i].split('=');
        if (x[0] == key) {
            x[1] = value;
            kvp[i] = x.join('=');
            break;
        }
    }
    if (i < 0) {
        kvp[kvp.length] = [key, value].join('=');
    }
    if (window.location.href.includes('?')) {
        document.location.search = kvp.join('&');
    } else {
        document.location.search = kvp.join('?');
    }
}

function daterange() {
    debugger;
    let stdate = $('#start-date').val();
    let etdate = $('#end-date').val();
    let getstdate = new Date(stdate).getTime();
    let getetdate = new Date(etdate).getTime();
    let date = getstdate + '&ed=' + getetdate;
    if (!isNaN(getstdate) && !isNaN(getetdate)) {
        localStorage.setItem('sd', stdate);
        localStorage.setItem('ed', etdate);
        checkWidth();
        insertParam('sd', date);
    }
}

function clearFilter() {
    let url = window.location.href;
    if (url.includes("?")) {
        url = url.split("?")[0]; //.split("#")[0]; when u have # in query string...
        window.history.replaceState('newUrl', 'url', url);
        localStorage.removeItem('sd');
        localStorage.removeItem('ed');
        localStorage.removeItem('author');
        localStorage.removeItem('section');
        localStorage.removeItem('rel');
        window.location.reload();
    }
}

$('#sortRelevance').change(function () {
    let rel = $('#sortRelevance').val();
    debugger;
    if (rel == '') {
        checkWidth();
        localStorage.setItem('rel', true);
        insertParam('recent', true);
    } else {
        checkWidth();
        localStorage.setItem('rel', rel);
        insertParam('recent', rel);
    }
});

function changeFilter(key) {
    let domain = window.location.href;
    var queryString = domain.split('?');
    let kvp = queryString[1].split('&');
    if (kvp != '') {
        for (var i = 0; i < kvp.length; i++) {
            let str = kvp[i].split('=');
            if ((str[0] == 'author' && key == 'author') || str[1] == 'aid' && key == 'author') {
                kvp.splice(i, 2);
            }
            if ((str[0] == 'section' && key == 'section') || str[1] == 'sid' && key == 'section') {
                kvp.splice(i, 2);

            }

        }
    }
    if (window.location.href.includes('?')) {
        kvp = kvp.join('&');
        window.location = queryString[0] + "?" + kvp;
    } else {
        kvp = kvp.join('?');
        window.location = queryString[0] + "?" + kvp;
    }


}

function checkWidth() {
    var screenWidth = $(window).width();
    if (screenWidth <= 991) {
        $('.clearAllFilter.tab').addClass('tab-site');
        $('.clearAllFilter.tab-site').css({'display': 'block'});
    }
    else {
        if (screenWidth >= 992 && screenWidth <= 1024) {
            $('.search-filter').addClass('desktop');
        }
        $('.clearAllFilter.desktopView').addClass('desktop-site');
        $('.clearAllFilter.desktop-site').css({'display': 'block'});
    }
}

function generateReadMoreHtml(arr) {
    html = "";
    arr.forEach(function (item, index) {
        html += '<li><div class="placeholderSmall Tranding-home"> <a href="' + item.contentUrl + '" rel="follow" target="_self"><img src="https://www.telegraphindia.com/unsafe/110x83/smart/static.telegraphindia.com' + item.imageSource + '" alt="' + item.imageTitle + '"></a></div>' + '<h3><a href="' + item.contentUrl + '" class="fourLine" style="float: none; position: static;">' + item.headline + '</a></h3></li>';
    });
    $("#most-read").html(html);
}

function fetchReadMore(readMoreCountRequired) {
    readMoreData = [];
    var mostReadSettings = {
        "async": true,
        "crossDomain": true,
        "url": "https://abp-relatedstory.s3.ap-south-1.amazonaws.com/TT_most_read_story/read_more.json",
        "method": "GET",
        "success": function (readMoreResult) {
            console.log(readMoreResult);
            if (readMoreResult != undefined && readMoreResult.mostRead != undefined && readMoreResult.mostRead.length > 0) {
                if (readMoreResult.mostRead.length >= readMoreCountRequired) {
                    readMoreData = readMoreResult.mostRead.slice(0, readMoreCountRequired);
                } else {
                    readMoreData = readMoreResult.mostRead.slice(0, readMoreResult.mostRead.length);
                }
            }

            if (readMoreData.length < readMoreCountRequired) {
                moreRequired = readMoreCountRequired - readMoreData.length;
                console.log("moreRequired=" + moreRequired);
                trendingSetting = {
                    "async": true,
                    "crossDomain": true,
                    "url": "https://abp-relatedstory.s3.ap-south-1.amazonaws.com/TT_Trending_story/tt_trending.json ",
                    "method": "GET",
                    "success": function (trendingResult) {
                        console.log('trending', trendingResult)
                        if (trendingResult != undefined && trendingResult.ttTrending != undefined && trendingResult.ttTrending.length > 0) {
                            if (moreRequired < trendingResult.ttTrending.length) {
                                readMoreData = readMoreData.concat(trendingResult.ttTrending.slice(0, moreRequired));
                            } else {
                                readMoreData = readMoreData.concat(trendingResult.ttTrending.slice(0, trendingResult.ttTrending.length));
                            }
                        }
                        generateReadMoreHtml(readMoreData);
                    },
                    error: function (data, error) {
                        console.log("3................");
                        console.log("there is an error while fetching trending:" + error);
                        console.log("data:" + data);
                        generateReadMoreHtml(readMoreData);
                    }
                };
                $.ajax(trendingSetting).done(function (response) {
                    console.log('Trending fetch url is hit');
                });
            } else {
                generateReadMoreHtml(readMoreData);
            }
        },
        error: function (data, error) {
            console.log("there is an error while fetching most read:" + error);
            console.log("data:" + data);
            generateReadMoreHtml(readMoreData);
        }
    }
    $.ajax(mostReadSettings).done(function (response) {
        console.log('Most read fetch url is hit');
    });
}

fetchReadMore(6);
// </script>


function showDelhiElectionTable() {
    var newXHR = new XMLHttpRequest(),
        DONE = 4,
        OK = 200,
        sheet = document.createElement('style'),
        css = "",
        cssMQ = "",
        apiUrl = "";
    if (location.hostname == "https://m.telegraphindia.com/") {
        apiUrl = 'https://abp-static.s3.ap-south-1.amazonaws.com/elections/election-2020/delhi-elections-2020.json' + "?slide=" + Math.random();
    } else {
        apiUrl = 'https://abp-static.s3.ap-south-1.amazonaws.com/elections/election-2020/delhi-elections-2020.json' + "?slide=" + Math.random();
    }
    newXHR.open('GET', apiUrl);
    newXHR.send();
    newXHR.onreadystatechange = function () {
        if (newXHR.readyState === DONE) {
            if (newXHR.status === OK) {
                var returnedJson = newXHR.responseText;
                var obj = JSON.parse(returnedJson);
                var html = '';
                obj.forEach(function (element, key) {
                    css += ".dl-elec-" + element.party_short_name.toLowerCase() + "{background-color: #fff;border-left: 9px solid " + element.party_color_code + ";margin-bottom: 4px;padding: 12px}.dl-elec-" + element.party_short_name.toLowerCase() + " .col-9{border-right: 2px solid #969696;padding:0}.dl-elec-" + element.party_short_name.toLowerCase() + " .col-3{padding: 0;}.dl-elec-" + element.party_short_name.toLowerCase() + " .col-9 h6{margin-bottom: 0;position: absolute;top: 50%;display: block;transform: translateY(-50%);padding: 0;margin: 0;font-size: 18px;color: " + element.party_color_code + "}";

                    html += '\t' + '<div class="row dl-elec-' + element.party_short_name.toLowerCase() + '">' + '\n';
                    html += '\t\t' + '<div class="col-9">' + '\n';
                    html += '\t\t\t' + '<h6>' + element.party_full_name + '</h6>' + '\n';
                    html += '\t\t' + '</div>' + '\n';
                    html += '\t\t' + '<div class="col-3">' + '\n';
                    html += '\t\t\t' + '<div class="text-center"><span>' + element.party_seats + '</span></div>' + '\n';
                    html += '\t\t' + '</div>' + '\n';
                    html += '\t' + '</div>' + '\n';
                });
                sheet.innerHTML = css;
                document.head.appendChild(sheet);
                document.getElementById("DelhiElectionTable").innerHTML = html;
            } else {
                console.log('Error: ' + newXHR.status); // An error occurred during the request.
            }
        }
    }
}
if(document.getElementById("DelhiElectionTable")!=undefined){
    showDelhiElectionTable();
    setInterval(function () {
        showDelhiElectionTable();
    }, 60000); // 60000 is for one min adjust time accordingly
}
function encode(input) {
	var result = "";
	var currentCell;
	var num;
	var factor;
	var str;
	var encodingList = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];
	
	for (var i = 0; i < 81; i++) {
		currentCell = cells[i];

		num = 0;
		factor = 1;
		
		
		for (var j = 0; j < 9; j++) {
			num += factor * (currentCell.pencilmarks[j] ? 1 : 0);
			factor *= 2;
		}
		
		num += factor * currentCell.value;
		factor *= 10;
		
		num += factor * (currentCell.isGiven ? 1 : 0);
		factor *= 2;
		
		num += factor * currentCell.getColor();
		factor *= 5;
		
		str = encodingList[num / 3844 | 0];
		str += encodingList[(num / 62 | 0) % 62];
		str += encodingList[num % 62];
		
		while (str.length < 3) { 
			str = "0" + str;
		}
		
		result += str;
	}
	
	result += cells.blankCellColor;
	
	return result;
	
}

function decode(input) {
	var result = "";
	var currentCell;
	var str;
	var num;
	var factor;
	var values = "";
	var decodingList = {"0":0, "1":1, "2":2, "3":3, "4":4, "5":5, "6":6, "7":7, "8":8, "9":9, "A":10, "B":11, "C":12, "D":13, "E":14, "F":15, "G":16, "H":17, "I":18, "J":19, "K":20, "L":21, "M":22, "N":23, "O":24, "P":25, "Q":26, "R":27, "S":28, "T":29, "U":30, "V":31, "W":32, "X":33, "Y":34, "Z":35, "a":36, "b":37, "c":38, "d":39, "e":40, "f":41, "g":42, "h":43, "i":44, "j":45, "k":46, "l":47, "m":48, "n":49, "o":50, "p":51, "q":52, "r":53, "s":54, "t":55, "u":56, "v":57, "w":58, "x":59, "y":60, "z":61};
	var colorsEncoded = true;
	
	input = input.replace(/[^0-9A-Za-z]/g, "")
	
	if (input.length !== 243 && input.length !== 244) {
		alert("Invalid input.");
		return;
	}
	
	colorsEncoded = input.length === 244;
	
	for (var i = 0; i < 81; i++) {
		currentCell = cells[i];
		
		factor = 1;
		
		if (colorsEncoded) {
			num = decodingList[input.charAt(i * 3)] * 3844;
			num += decodingList[input.charAt(i * 3 + 1)] * 62;
			num += decodingList[input.charAt(i * 3 + 2)];
		} else {
			num = parseInt(input.slice(i * 3, i * 3 + 3), 36);
		}
		
		for (var j = 0; j < 9; j++) {
			factor = 2;
			currentCell.pencilmarks[j] = !!(num % factor);
			
			num = (num / factor) | 0;
			
		}
		
		factor = 10;
		currentCell.setValue(num % factor);
		values += num % factor + "";
		num = (num / factor) | 0;
		
		factor = 2;
		currentCell.isGiven = !!(num % factor);
		num = (num / factor) | 0;
		
		factor = 5;
		currentCell.setColor(num % factor);
		num = (num / factor) | 0;
		
		if (currentCell.isGiven) {
			currentCell.element.innerHTML = currentCell.value;
			currentCell.candidatesElement.innerHTML = currentCell.value;
		} else {
			if (currentCell.value) {
				currentCell.element.firstChild.value = currentCell.value;
				currentCell.candidatesElement.innerHTML = currentCell.value;
			} else {
				// Update pencilmarks display.
				currentCell.candidatesElement.innerHTML = currentCell.getPencilmarkString();
				currentCell.element.firstChild.value = "";
			
			}
		}
		
	}
	
	cells.blankCellColor = parseInt(input.charAt(243));
	
	// Highlight selected color link.
	document.getElementById("mark_blank_cells_0").style.backgroundColor = "";
	document.getElementById("mark_blank_cells_" + cells.blankCellColor).style.backgroundColor = "#FF8";
	
	
	var puzzle = new Puzzle(values);

	if (!puzzle.hasSolution()) {
		alert("There is no solution for the inputted values.");
		return;
	}

	document.getElementById("top_bar").style.display = "none";
	document.getElementById("begin_solving").style.display = "none";
	document.getElementById("controls").style.display = "block";
	document.getElementById("grid_table").style.position = "static";
	document.getElementById("grid_table").style.marginTop = "8px";
	document.getElementById("grid_table").style.marginLeft = "8px";
	document.getElementById("side_bar").style.display = "none";
	
	document.getElementById("import_save_button").title = "This option is disabled when a sudoku puzzle is in progress.";
	document.getElementById("import_save_button").disabled = true;
	document.getElementById("paste_puzzle_button").title = "This option is disabled when a sudoku puzzle is in progress.";
	document.getElementById("paste_puzzle_button").disabled = true;
	document.getElementById("load_cookie").title = "This option is disabled when a sudoku puzzle is in progress.";
	document.getElementById("load_cookie").disabled = true;
	
	cells.solution = puzzle.toString();
	for (var i = 0; i < 81; i++) {
		cells[i].solution = parseInt(cells.solution.charAt(i));
	}
	
	showDuplicates();
}

function loadFromCookie() {
	var values = document.cookie.replace(/(?:(?:^|.*;\s*)state\s*\=\s*((?:[^;](?!;))*[^;]?).*)|.*/, '$1');
	
	if (values) {
		decode(values);
	} else {
		alert("No current save exists.");
	}
}

function saveToCookie() {
	var values = document.cookie.replace(/(?:(?:^|.*;\s*)state\s*\=\s*((?:[^;](?!;))*[^;]?).*)|.*/, '$1');
	
	
	if (values) {
		if(!confirm("A save already exists. Are you sure you want to overwrite it?")) {
			return false;
		}		
	}
	
	document.cookie = 'state=' + encode() + '; expires=Fri, 31 Dec 9999 23:59:59 GMT';
	
	if (document.cookie) {
		alert("Save successful.");
	} else {
		alert("Save failed. Make sure cookies are enabled in your browser.");
	}
	
}

Array.prototype.remove = function(val) {
	var length = this.length;
	for (var i = 0; i < length; i++) {
		if (this[i] === val) {
			this.splice(i, 1); // Remove the element
			return true;
		}
	}

	return false;
};

Array.prototype.contains = function(val) {
	var length = this.length;

	for (var i = 0; i < length; i++) {
		if (this[i].constructor.name === "Cell" && this[i].index === val.index) {
			return true;
		} else if (this[i] === val) {
			return true;
		}
	}

	return false;
}


function Puzzle(givens) {
	
	var cells = [];
	var guessCell; // Store guess cell (the cell with the least candidates) after processing in case it changes.
	var guessCellCandidates;
	var solution;

	var Cell = function Cell(index, value) {
		this.neighbors = [];
		this.rowNeighbors = [];
		this.columnNeighbors = [];
		this.blockNeighbors = [];
		this.candidates = [];

		var blocks = [
			0, 0, 0, 1, 1, 1, 2, 2, 2,
			0, 0, 0, 1, 1, 1, 2, 2, 2,
			0, 0, 0, 1, 1, 1, 2, 2, 2,
			3, 3, 3, 4, 4, 4, 5, 5, 5,
			3, 3, 3, 4, 4, 4, 5, 5, 5,
			3, 3, 3, 4, 4, 4, 5, 5, 5,
			6, 6, 6, 7, 7, 7, 8, 8, 8,
			6, 6, 6, 7, 7, 7, 8, 8, 8,
			6, 6, 6, 7, 7, 7, 8, 8, 8
		];

		var blockIndeces = [
			 0,  1,  2,  9, 10, 11, 18, 19, 20,
			 3,  4,  5, 12, 13, 14, 21, 22, 23,
			 6,  7,  8, 15, 16, 17, 24, 25, 26,
			27, 28, 29, 36, 37, 38, 45, 46, 47,
			30, 31, 32, 39, 40, 41, 48, 49, 50,
			33, 34, 35, 42, 43, 44, 51, 52, 53,
			54, 55, 56, 63, 64, 65, 72, 73, 74,
			57, 58, 59, 66, 67, 68, 75, 76, 77,
			60, 61, 62, 69, 70, 71, 78, 79, 80
		];

		var currentCell;
		var row = Math.floor(index / 9);
		var column = index % 9;
		var block = blocks[index];

		this.processed = true;
		this.index = index;
		this.value = value;
		this.color = 0;

		if (value === 0) {
			for (var i = 1; i <= 9; i++) {
				this.candidates.push(i);
			}
		} else {
			this.candidates.push(value);
		}

		// Set neighbors.

		// row
		for (var i = row * 9; (i < (row + 1) * 9) && i < index; i++) {
			currentCell = cells[i];

			this.neighbors.push(currentCell);
			currentCell.neighbors.push(this);

			this.rowNeighbors.push(currentCell);
			currentCell.rowNeighbors.push(this);
		}

		// column
		for (var i = column; i < 81 && i < index; i += 9) {
			currentCell = cells[i];

			if (! this.neighbors.contains(currentCell)) {
				this.neighbors.push(currentCell);
				currentCell.neighbors.push(this);
			}

			this.columnNeighbors.push(currentCell);
			currentCell.columnNeighbors.push(this);
		}

		// block
		for (var i = block * 9; i < (block + 1) * 9; i++) {
			if (blockIndeces[i] < index) {

				currentCell = cells[blockIndeces[i]];

				if (! this.neighbors.contains(currentCell)) {
					this.neighbors.push(currentCell);
					currentCell.neighbors.push(this);
				}

				this.blockNeighbors.push(currentCell);
				currentCell.blockNeighbors.push(this);
			}
		}

		this.setValue = function(value) {
			this.value = value;

			if (value === 0) {
				this.candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];
			} else {
				this.candidates = [value];
			}
		}

		this.toString = function toString() {
			return this.value + "";
		};
	};

	// Initialize cells.
	for (var i = 0; i < 81; i++) {
		cells[i] = new Cell(i, 0);
	}

	var processSingles = function() {
		var currentCell;
		var result = false;

		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];

			if (currentCell.candidates.length === 1 && !currentCell.processed) {
				result = true;

				currentCell.value = currentCell.candidates[0];
				currentCell.processed = true;

				for (var v = 0; v < currentCell.neighbors.length; v++) {


					if (currentCell.neighbors[v].candidates.remove(currentCell.value)) {
						currentCell.neighbors[v].processed = false;
					}
				}
			}
		}

		return result;
	};

	var processHiddenSingles = function() {
		var currentCell;
		var uniqueCandidates = [];
		var result = false;

		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];

			if (currentCell.value !== 0) {
				continue;
			}

			uniqueCandidates.length = 0;

			// row
			uniqueCandidates = uniqueCandidates.concat(currentCell.candidates);

			for (var v = 0; v < currentCell.rowNeighbors.length; v++) {
				for (var u = 0; u < currentCell.rowNeighbors[v].candidates.length; u++) {
					uniqueCandidates.remove(currentCell.rowNeighbors[v].candidates[u]);
				}
			}

			if (uniqueCandidates.length === 1) {
				currentCell.value = uniqueCandidates[0];
				currentCell.candidates.length = 0;
				currentCell.candidates.push(currentCell.value);
				currentCell.processed = true;

				for (var v = 0; v < currentCell.neighbors.length; v++) {
					if (currentCell.neighbors[v].candidates.remove(currentCell.value)) {
						currentCell.neighbors[v].processed = false;
					}
				}

				result = true;
				continue;
			}

			uniqueCandidates.length = 0;

			// column
			uniqueCandidates = uniqueCandidates.concat(currentCell.candidates);

			for (var v = 0; v < currentCell.columnNeighbors.length; v++) {
				for (var u = 0; u < currentCell.columnNeighbors[v].candidates.length; u++) {
					uniqueCandidates.remove(currentCell.columnNeighbors[v].candidates[u]);
				}
			}

			if (uniqueCandidates.length === 1) {
				currentCell.value = uniqueCandidates[0];
				currentCell.candidates.length = 0;
				currentCell.candidates.push(currentCell.value);
				currentCell.processed = true;

				for (var v = 0; v < currentCell.neighbors.length; v++) {
					if (currentCell.neighbors[v].candidates.remove(currentCell.value)) {
						currentCell.neighbors[v].processed = false;
					}
				}

				result = true;
				continue;
			}

			uniqueCandidates.length = 0;

			// block
			uniqueCandidates = uniqueCandidates.concat(currentCell.candidates);

			for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
				for (var u = 0; u < currentCell.blockNeighbors[v].candidates.length; u++) {
					uniqueCandidates.remove(currentCell.blockNeighbors[v].candidates[u]);
				}
			}

			if (uniqueCandidates.length === 1) {
				currentCell.value = uniqueCandidates[0];
				currentCell.candidates.length = 0;
				currentCell.candidates.push(currentCell.value);
				currentCell.processed = true;

				for (var v = 0; v < currentCell.neighbors.length; v++) {
					if (currentCell.neighbors[v].candidates.remove(currentCell.value)) {
						currentCell.neighbors[v].processed = false;
					}
				}

				result = true;
				continue;
			}
		}

		return result;
	};

	var intersectionRemoval = function() {
		var currentCell;
		var uniqueCandidates = [];
		var intersection = [];
		var result = false;
		var size;

		for (var i = 0; i < 81; i += 3) {
			currentCell = cells[i];

			if (currentCell.candidates.length <= 1) {
				continue;
			}

			intersection.length = 0;
			uniqueCandidates.length = 0;

			for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
				if (currentCell.blockNeighbors[v].value === 0 && currentCell.rowNeighbors.contains(currentCell.blockNeighbors[v])) {
					intersection.push(currentCell.blockNeighbors[v]);
				}
			}

			if (intersection.length <= 1) {
				continue;
			}

			for (var v = 0; v < intersection.length; v++) {
				for (var u = 0; u < intersection[v].candidates.length; u++) {
					if (!uniqueCandidates.contains(intersection[v].candidates[u])) {
						uniqueCandidates.push(intersection[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length === 0) {
				continue;
			}

			for (var v = 0; v < currentCell.rowNeighbors.length; v++) {
				if (! intersection.contains(currentCell.rowNeighbors[v])) {
					for (var u = 0; u < currentCell.rowNeighbors[v].candidates.length; u++) {
						uniqueCandidates.remove(currentCell.rowNeighbors[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length > 0 && intersection.length >= uniqueCandidates.length) {

				for (var v = 0; v < currentCell.blockNeighbors.length; v++) {

					if (currentCell.blockNeighbors[v].value === 0 && ! intersection.contains(currentCell.blockNeighbors[v])) {
						size = currentCell.blockNeighbors[v].candidates.length;

						for (var u = 0; u < uniqueCandidates.length; u++) {
							currentCell.blockNeighbors[v].candidates.remove(uniqueCandidates[u]);
						}

						if (currentCell.blockNeighbors[v].candidates.length != size) {
							currentCell.blockNeighbors[v].processed = false;
							result = true;
						}
					}
				}
			}

			uniqueCandidates.length = 0;

			for (var v = 0; v < intersection.length; v++) {
				if (intersection[v].value === 0) {

					for (var u = 0; u < intersection[v].candidates.length; u++) {
						if (!uniqueCandidates.contains(intersection[v].candidates[u])) {
							uniqueCandidates.push(intersection[v].candidates[u]);
						}
					}
				}
			}

			if (uniqueCandidates.length === 0) {
				continue;
			}

			for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
				if (!intersection.contains(currentCell.blockNeighbors[v])) {
					for (var u = 0; u < currentCell.blockNeighbors[v].candidates.length; u++) {
						uniqueCandidates.remove(currentCell.blockNeighbors[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length > 0 && intersection.length >= uniqueCandidates.length) {
				for (var v = 0; v < currentCell.rowNeighbors.length; v++) {
					if (currentCell.rowNeighbors[v].value === 0 && !intersection.contains(currentCell.rowNeighbors[v])) {
						size = currentCell.rowNeighbors[v].candidates.length;

						for (var u = 0; u < uniqueCandidates.length; u++) {
							currentCell.rowNeighbors[v].candidates.remove(uniqueCandidates[u]);
						}

						if (currentCell.rowNeighbors[v].candidates.length != size) {
							currentCell.rowNeighbors[v].processed = false;
							result = true;
						}
					}
				}
			}
		}

		for (var i = 0; i < 81; i = i % 9 === 8 ? i + 18 : i + 1) {
			currentCell = cells[i];

			if (currentCell.candidates.length <= 1) {
				continue;
			}

			intersection.length = 0;

			for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
				if (currentCell.blockNeighbors[v].value === 0 && currentCell.columnNeighbors.contains(currentCell.blockNeighbors[v])) {
					intersection.push(currentCell.blockNeighbors[v]);
				}
			}

			if (intersection.length <= 1) {
				continue;
			}


			for (var v = 0; v < intersection.length; v++) {
				for (var u = 0; u < intersection[v].candidates.length; u++) {
					if (!uniqueCandidates.contains(intersection[v].candidates[u])) {
						uniqueCandidates.push(intersection[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length === 0) {
				continue;
			}

			for (var v = 0; v < currentCell.columnNeighbors.length; v++) {
				if (! intersection.contains(currentCell.columnNeighbors[v])) {
					for (var u = 0; u < currentCell.columnNeighbors[v].candidates.length; u++) {
						uniqueCandidates.remove(currentCell.columnNeighbors[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length > 0 && intersection.length >= uniqueCandidates.length) {
				for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
					if (currentCell.blockNeighbors[v].value === 0 && !intersection.contains(currentCell.blockNeighbors[v])) {
						size = currentCell.blockNeighbors[v].candidates.length;

						for (var u = 0; u < uniqueCandidates.length; u++) {
							currentCell.blockNeighbors[v].candidates.remove(uniqueCandidates[u]);
						}

						if (currentCell.blockNeighbors[v].candidates.length != size) {
							currentCell.blockNeighbors[v].processed = false;
							result = true;
						}
					}
				}
			}

			uniqueCandidates.length = 0;

			for (var v = 0; v < intersection.length; v++) {
				if (intersection[v].value === 0) {
					for (var u = 0; u < intersection[v].candidates.length; u++) {
						if (!uniqueCandidates.contains(intersection[v].candidates[u])) {
							uniqueCandidates.push(intersection[v].candidates[u]);
						}
					}
				}
			}

			if (uniqueCandidates.length === 0) {
				continue;
			}

			for (var v = 0; v < currentCell.blockNeighbors.length; v++) {
				if (! intersection.contains(currentCell.blockNeighbors[v])) {
					for (var u = 0; u < currentCell.blockNeighbors[v].candidates.length; u++) {
						uniqueCandidates.remove(currentCell.blockNeighbors[v].candidates[u]);
					}
				}
			}

			if (uniqueCandidates.length > 0 && intersection.length >= uniqueCandidates.length) {
				for (var v = 0; v < currentCell.columnNeighbors.length; v++) {
					if (currentCell.columnNeighbors[v].value === 0 && ! intersection.contains(currentCell.columnNeighbors[v])) {
						size = currentCell.columnNeighbors[v].candidates.length;

						for (var u = 0; u < uniqueCandidates.length; u++) {
							currentCell.columnNeighbors[v].candidates.remove(uniqueCandidates[u]);
						}

						if (currentCell.columnNeighbors[v].candidates.length != size) {
							currentCell.columnNeighbors[v].processed = false;
							result = true;
						}
					}
				}
			}
		}

		return result;
	};

	// Perform function of grid.
	// Reset cells to values.
	// Process singles, hidden singles.
	// Set guessCell to the index of the cell with the least number of candidates; set guessCellCandidates.
	// Return each cell's value concatenated in a string.
	var process = function(values) {
		var currentCell;

		for (var i = 0; i < 81; i++) {
			cells[i].setValue(0);
		}

		for (var i = 0; i < 81; i++) {
			value = parseInt(values[i]);

			currentCell = cells[i];

			if (value !== 0) {
				currentCell.setValue(value);
				currentCell.processed = true;

				for (var v = 0; v < currentCell.neighbors.length; v++) {

					if (currentCell.neighbors[v].candidates.remove(value)) {
						currentCell.neighbors[v].processed = false;
					}
				}
			} else {
				currentCell.processed = false;
			}
		}

		while (processSingles() || processHiddenSingles() || intersectionRemoval()) {}

		guessCell = cells[0];

		for (var i = 1; i < 81; i++) {
			if (guessCell.value !== 0) {
				guessCell = cells[i];
			} else {
				currentCell = cells[i];
				
				// Choose the cell with the least candidates:
				// if (currentCell.value === 0 && currentCell.candidates.length < guessCell.candidates.length) {
					// guessCell = currentCell;
				// }
				
				// Choose the first empty cell.
				break;
			}
		}

		guessCellCandidates = guessCell.candidates;

		var result = "";

		for (var i = 0; i < 81; i++) {

			result += cells[i].value;
		}

		return result;
	};

	var isValid = function(values) {
		var currentCell;

		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];

			if (values[i] !== "0") {

				for (var v = 0; v < currentCell.neighbors.length; v++) {
					if (values[currentCell.neighbors[v].index] === values[i]) {
						return false;
					}
				}
			}
		}

		return true;
	};

	var isFilled = function(values) {
		 return values.indexOf("0") === -1;
	};

	this.hasSolution = function() {
		return isFilled(solution) && isValid(solution);
	};

	this.toString = function() {
		return solution;
	};

	
	var solve = function solve(givens) {
		var stack = [];
		var values;
		var length;

		stack.push(givens);

		while(stack.length > 0) {
			values = stack.pop();
			values = process(values);

			if (isFilled(values)) {
				return values;
			}

			if (isValid(values)) {
				length = guessCellCandidates.length;

				for (var i = length - 1; i >= 0; i--) {
					stack.push(values.substr(0, guessCell.index) + guessCellCandidates[i] + values.substr(guessCell.index + 1));
				}
			}
		}

		return givens;
	};

	solution = solve(givens);
}

var cells = [];
var gameLevel;
var stop_click = true;
var highlightStatus = false;
var highlightValue = 0;
var selectedDate;
var sudoku_json;
var sudoku_level = [];
var today;

$("#get_auto").click(function(){
  clearPencilmarks();
  updatePencilmarks();
});
$(document).ready( function() {
    var currentDate = new Date();

    var day = ("0" + currentDate.getDate()).slice(-2);
    var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
    var today ;
    var cookieData = sessionStorage.getItem('date');
    if(!cookieData){
        today = currentDate.getFullYear()+"-"+(month)+"-"+(day) ;
    }else{
        today = cookieData;
    }
   $('#dateapicker').val(today);
});
function inputOnKeyDown(e) {
	var code = e.keyCode;
	var pos;

	switch (code) {
		case 9: // tab
		case 27: // escape
		case 33: // page up
		case 34: // page down
		return true;
		break;

		case 37: // left
		pos = this.index;

		do {
			if (pos === 0) {
				pos = 80;
			} else {
				pos--;
			}
		} while (cells[pos].isGiven);

		document.getElementById("cell" + pos + "_input").focus();
		break;

		case 38: // up
		pos = this.index;

		do {
			if (pos < 9) {
				pos += 72;
			} else {
				pos -= 9;
			}
		} while (cells[pos].isGiven);

		document.getElementById("cell" + pos + "_input").focus();
		break;

		case 39: // right
		pos = this.index;

		do {
			if (pos === 80) {
				pos = 0;
			} else {
				pos++;
			}
		} while (cells[pos].isGiven);

		document.getElementById("cell" + pos + "_input").focus();
		break;

		case 13: // enter
		case 40: // down
		pos = this.index;

		do {
			if (pos > 71) {
				pos -= 72;
			} else {
				pos += 9;
			}
		} while (cells[pos].isGiven);

		document.getElementById("cell" + pos + "_input").focus();
		break;

		// 65-90 a-z
		// 48-57 0-9
		// 97-105 numpad 0-9

		default:

			// function keys
			if (code >= 112 && code <= 123) {
				return true;
			} else if (document.getElementById("write_mode_values").checked) {
				$(this).removeClass('edited_pencils');

				// backspace || delete
				if (code === 8 || code === 46) {
					var currentCell = cells[this.index];

                    this.value = "";
					currentCell.setValue(0);
					// currentCell.candidatesElement.innerHTML = currentCell.getPencilmarkString();
					showDuplicates();
					currentCell.candidatesElement.classList.remove("candidates_highlighted");
                    currentCell.element.classList.remove("cell_highlighted");
                    $("#cell" + currentCell.index + "_input").removeClass('hideCandidate');
                    // Before givens are submitted, automatically update pencilmarks.
					if (!cells.hasOwnProperty("solution")) {
						updatePencilmarks();
                    }
				}

				// 0-9 || numpad 0-9
				else if ((code > 48 && code <= 57) || (code > 96 && code <= 105)) {
					var digit = code - 48;

					if (digit > 9) digit = code - 96; // Fix offset for numpad.

					this.value = digit;
					var currentCell = cells[this.index];
					currentCell.setValue(digit);
					if ((highlightValue===digit) && (highlightStatus==true)){
                        currentCell.candidatesElement.classList.add("candidates_highlighted");
                        currentCell.element.classList.add("cell_highlighted");
                    }
					showDuplicates();
                    $("#cell" + currentCell.index + "_input").addClass('hideCandidate');
					// Before givens are submitted, automatically update pencilmarks.
					if (!cells.hasOwnProperty("solution")) {
						updatePencilmarks();
					} else if (document.getElementById("auto_pencilmarks").checked) {
						for (var i = 0; i < 20; i++) {
							if (currentCell.neighbors[i].value === 0) {
								currentCell.neighbors[i].pencilmarks[currentCell.value - 1] = false;
								currentCell.neighbors[i].candidatesElement.innerHTML = currentCell.neighbors[i].getPencilmarkString();
							}
						}
					}
					// currentCell.candidatesElement.innerHTML = currentCell.value;
				}
			} else {
			        if (code === 8 || code === 46) {
                        var currentCell = cells[this.index];

                        this.value = "";
                        currentCell.setValue(0);
                        // currentCell.candidatesElement.innerHTML = currentCell.getPencilmarkString();
                        showDuplicates();
                        currentCell.candidatesElement.classList.remove("candidates_highlighted");
                        currentCell.element.classList.remove("cell_highlighted");
                        // Before givens are submitted, automatically update pencilmarks.
                        if (!cells.hasOwnProperty("solution")) {
                            updatePencilmarks();
                        }
                    }

				// Pencil marks: 0-9 || numpad 0-9
				if ((code > 48 && code <= 57) || (code > 96 && code <= 105)) {
					var digit = code - 48;

					if (digit > 9) digit = code - 96; // Fix offset for numpad.

					var currentCell = cells[this.index];
					target = 'cell'+this.index+'_input'

					if (currentCell.value === 0) {
						currentCell.pencilmarks[digit - 1] = !currentCell.pencilmarks[digit - 1];

						// currentCell.candidatesElement.innerHTML = currentCell.getPencilmarkString();
						arr1 = currentCell.getPencilmarkString().split('');
						arr2 = ['1','2','3','4','5','6','7','8','9']
						$('#'+target).parent().children(".small_sudoku").show().addClass(target);
                        $('#' + target).addClass('edited_pencils');


						$('.'+target+' '+'.candidates_sudoku td').each( function(){
							this.textContent = "";
						});
                        var z = '';
						if (!$('#'+target).parent().children(".small_sudoku").hasClass("assist")){
							var z = $.grep(arr2, function(el){return $.inArray(el, arr1) == -1});

							$.each(z, function( index, value ) {
								$('.'+target).find('#'+value).append(value)
							});
						}
						else{
							$.each(arr1, function( index, value ) {
								$('.'+target).find('#'+value).append(value);
							});
						}
					}
				}
			}
			break;
		}

		return false;
	}

	function inputOnFocus() {
		cells.lastSelectedCell = this.index;
	}

	function updatePencilmarks() {
		var currentCell;
		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];

			if (currentCell.value === 0) {
				currentCell.pencilmarks = [true, true, true, true, true, true, true, true, true];

				for (var k = 0; k < 20; k++) {
					currentCell.pencilmarks[currentCell.neighbors[k].value - 1] = false;
				}

			} else {
				currentCell.pencilmarks = [false, false, false, false, false, false, false, false, false];
				currentCell.pencilmarks[currentCell.value - 1] = true;
			}
			// currentCell.candidatesElement.innerHTML = currentCell.pencilmarks.map(function(value, index){if(value)return index + 1;}).join("");
			contenders = currentCell.pencilmarks.map(function(value, index){if(value)return index + 1;}).join("");
			if (currentCell.candidatesElement.innerHTML.includes('table')){
				target = 'cell'+i+'_input'
				$('#'+target).parent().children(".small_sudoku").show().addClass(target);
				$('#'+target).parent().children(".small_sudoku").show().addClass('assist');
				$('#'+target).addClass('edited_pencils');
				z = contenders.split('')
				$.each(z, function( index, value ) {
					$('.'+target).find('#'+value).append(value)
				});
			}
		}
		if(stop_click){
			document.getElementById("get_auto").disabled=false;
			stop_click = false;
		}
		else{
			document.getElementById("get_auto").disabled=true;
		}
		
	}

	function clearPencilmarks() {
		document.getElementById("get_auto").disabled=false;
		var currentCell;

		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];
			currentCell.pencilmarks = [true, true, true, true, true, true, true, true, true];
			if (currentCell.value === 0) {
				// currentCell.candidatesElement.innerHTML = "123456789";
				currentCell.candidatesElement.innerHTML = "";

			} else {
				currentCell.candidatesElement.innerHTML = currentCell.value + "";
			}
			target = 'cell'+i+'_input'
            $('#'+target).parent().children(".small_sudoku").show().removeClass(target);
            $('#'+target).parent().children(".small_sudoku").show().removeClass('assist');
            $('#'+target).removeClass('edited_pencils');
		}
		pencilMarkTable();
	}

	function showDuplicates() {
		var currentCell;

		if (document.getElementById("show_duplicates").checked) {

			for (var i = 0; i < 81; i++) {
				currentCell = cells[i];
				currentCell.element.classList.remove("cell_duplicate");

				if (currentCell.value !== 0) {
					for (var k = 0; k < 20; k++) {
						if (currentCell.value === currentCell.neighbors[k].value) {
							currentCell.element.classList.add("cell_duplicate");
						}
					}

				}
			}
		} else {
			for (var i = 0; i < 81; i++) {
				cells[i].element.classList.remove("cell_duplicate");
			}
		}
	}

	function clearCells() {
		if (!window.confirm("Are you sure you want to clear this sudoku puzzle?")) return;
		window.location.reload();
	}

	// function removePencilmarks(){
	// 	$('.write_mode_values').hide('')
	// }

function todayDate() {
		var today = new Date(document.getElementById("dateapicker").value);
		var dd = today.getDate();
		var mm = today.getMonth()+1; //January is 0!

		var yyyy = today.getFullYear();
		if(dd<10){
			dd='0'+dd;
        }
		if(mm<10){
			mm='0'+mm;
        }
		var today = dd+'/'+mm+'/'+yyyy;
		return today
	}

function todayDateToAjax() {
    var today = new Date(document.getElementById("dateapicker").value);
    var dd = today.getDate();
    var mm = today.getMonth() + 1; //January is 0!

    var yyyy = today.getFullYear();
    if (dd < 10) {
        dd = '0' + dd;
    }
    if (mm < 10) {
        mm = '0' + mm;
    }
    var today = dd + '-' + mm + '-' + yyyy;
    return today;
}

function getSudokuDataFromAjax() {
        $.ajax({
            async: false,
            url: '/sudoku/data',
            method: 'post',
            dataType: 'json',
            data: JSON.stringify({"sudokuDate": todayDateToAjax()}),
            contentType: 'application/json',
            success: function (data) {
                sudoku_json = data;
            },
            error: function (ex) {
            }
        });
    var dummy_sudoku_level = ["easy", "medium", "hard", "diabolical"];
    if (typeof sudoku_json !== 'undefined') {
        today = todayDate();
        sudoku_json[today].forEach(function (ele, index) {
            sudoku_level.push(Object.keys(ele)[0])
        });
        for (i = 0; i < dummy_sudoku_level.length; i++) {
            if (sudoku_level.includes(dummy_sudoku_level[i])) {
                $('#paste_puzzle_button_' + dummy_sudoku_level[i]).show();
                if (dummy_sudoku_level[i] === "easy") {
                    $("#first_span").show();
                }
                if (dummy_sudoku_level[i] === "diabolical") {
                    $("#third_span").show();
                }
                if (dummy_sudoku_level[i] === "hard") {
                    $("#second_span").show();
                }
            }
        }
    } else {
        for (i = 0; i < dummy_sudoku_level.length; i++) {
            $('#paste_puzzle_button_' + dummy_sudoku_level[i]).show();
        }
        $("#first_span, #third_span, #second_span").show();
    }

}
	function generateSudoku(level){
		var array_keys = new Array();
		var array_values = new Array();
        getSudokuDataFromAjax();
        today = todayDate();
		if (level == 'easy') {
			generateBoard = mySudokuJS.generateBoard('easy');
			getBoard = mySudokuJS.getBoard('easy')
		} else if (level == 'medium') {
			generateBoard = mySudokuJS.generateBoard('medium');
			getBoard = mySudokuJS.getBoard('medium')
		} else if (level == 'hard'){
			generateBoard = mySudokuJS.generateBoard('hard');
			getBoard = mySudokuJS.getBoard('hard')
		} else if (level == 'diabolical'){
            generateBoard = mySudokuJS.generateBoard('diabolical');
            getBoard = mySudokuJS.getBoard('diabolical')
        }else{
			generateBoard = mySudokuJS.generateBoard('easy');
			getBoard = mySudokuJS.getBoard('easy')
		}

		for (var key in getBoard)
		{
			array_keys.push(key);
			array_values.push(getBoard[key].val);
		}

		if (array_values.length == 83){
			array_values.splice(81, 2)
		}

		for (var j = 0; j < array_values.length; j++) {
			if (array_values[j] == null) {
				array_values[j] = 0;
			}
		}
		array_values.toString()
		sudoku_string = array_values.toString().replace( /,/g, "" );

        if (typeof sudoku_json === "undefined") {
            $('#copyright_sudoku').hide();
			return(sudoku_string);
		}
		else{
            today = todayDate();
            sudoku_json[today].forEach(function (ele, index) {
                if (ele.easy && level == 'easy') {
                    sudoku_string = ele.easy.toString()
                }
                else if (ele.medium && level == 'medium') {
                    sudoku_string = ele.medium.toString()
                }
                else if (ele.hard && level == 'hard') {
                    sudoku_string = ele.hard.toString()
                }
                else if (ele.diabolical && level == 'diabolical') {
                    sudoku_string = ele.diabolical.toString()
                }
            });
		}
		return(sudoku_string);
	}
	function pastePuzzle(level) {
		var values = generateSudoku(level)
		gameLevel = level;
        leaderBoard();

	// var values = window.prompt("Enter a sudoku puzzle. Use \"0\", \".\", \"*\", or \"_\" for empty cells.\nAll other characters are ignored.\nAlternatively, load a previously saved puzzle.");
	// var values = document.getElementById("paste_puzzle").value;

	values = values.replace(/[.*_]/g, "0");
	values = values.replace(/[^0-9]/g, "");

	if (values.length !== 81) {
		window.alert("Invalid input");
		return;
	}


	for (var i = 0; i < 81; i++) {
		var currentCell = cells[i];

		if (currentCell.element.children.length > 0) {
			currentCell.setValue(parseInt(values.charAt(i)));

			if (currentCell.value !== 0) {
				currentCell.element.firstChild.value = currentCell.value;
			} else {
				currentCell.element.firstChild.value = "";
			}
		}
	}

	clearPencilmarks();
	highlight(0);
	//showDuplicates();
}

function savePuzzle() {
	window.prompt("Copy the text string below and paste it into a new text file.\nTo re-load the puzzle, paste the string into the paste puzzle tool.", encode());

}

function saveLoadPuzzle() {
	document.getElementById("side_bar").style.display="block";

	document.getElementById("copy_puzzle").value = cells.toString().replace(/[^0-9]/g, "");
	document.getElementById("export_save").value = encode();
}

function highlight(value) {
	if (value === 0) {
    		highlightStatus = false;
    		highlightValue = 0;
    		$('.highlight_button').removeClass('number_highlighted');
    		for (var i = 0; i < 81; i++) {
    			cells[i].element.classList.remove("cell_highlighted");
    			cells[i].candidatesElement.classList.remove("candidates_highlighted");
    		}
    } else {
    		highlight(0);
    		highlightStatus = true;
    		highlightValue = value;
    		for (var i = 0; i < 81; i++) {
    			var currentCell = cells[i];
    			if (currentCell.value !== 0 || !currentCell.pencilmarks[value - 1]) {
    				if (currentCell.value == value){
    					currentCell.candidatesElement.classList.add("candidates_highlighted");
    					currentCell.element.classList.add("cell_highlighted");
    				}
    			} else {
    				currentCell.candidatesElement.classList.remove("candidates_highlighted");
    				currentCell.element.classList.remove("cell_highlighted");
    			}

    	    }

    	    for (var i = 1; i < 10; i++) {
                $('.highlight_button').removeClass('number_highlighted');
                if (value == i) {
                    $('.number_highlight' + value).addClass('number_highlighted');
                    break;
                }
            }
	}
}

function submitGivens() {
	var currentCell;
	var values = "";

	for (var i = 0; i < 81; i++) {
		currentCell = cells[i];

		values += currentCell.value;

	}

	if ((values.match(new RegExp("0", "g")) || []).length == 81){
		// return( alert ('please select a level'));
	}
	var puzzle = new Puzzle(values);

	if (!puzzle.hasSolution()) {
		alert("There is no solution for the inputted values.");
	} else {

		// document.getElementById("top_bar").style.display = "none";
		// document.getElementById("begin_solving").style.display = "none";
		// document.getElementById("controls").style.display = "block";
		document.getElementById("grid_table").style.display = "block";
		// document.getElementById("grid_table").style.position = "static";
        document.getElementById("grid_table").style.marginTop = "25px";
		// document.getElementById("side_bar").style.display = "none";

		// document.getElementById("import_save_button").title = "This option is disabled when a sudoku puzzle is in progress.";
		// document.getElementById("import_save_button").disabled = true;
		// document.getElementById("paste_puzzle_button_easy").title = "This option is disabled when a sudoku puzzle is in progress.";
		// document.getElementById("paste_puzzle_button_medium").title = "This option is disabled when a sudoku puzzle is in progress.";
		// document.getElementById("paste_puzzle_button_hard").title = "This option is disabled when a sudoku puzzle is in progress.";
		document.getElementById("paste_puzzle_button_easy").disabled = false;
		document.getElementById("paste_puzzle_button_medium").disabled = false;
		document.getElementById("paste_puzzle_button_hard").disabled = false;
		document.getElementById("paste_puzzle_button_diabolical").disabled = false;
		// document.getElementById("load_cookie").title = "This option is disabled when a sudoku puzzle is in progress.";
		// document.getElementById("load_cookie").disabled = true;

		cells.solution = puzzle.toString();
		for (var i = 0; i < 81; i++) {
			currentCell = cells[i];

			if (currentCell.value !== 0) {
				currentCell.element.innerHTML = currentCell.value;
				currentCell.isGiven = true;
			} else {
				currentCell.element.classList.add("blank_cell_highlight_black");
			}

			currentCell.solution = parseInt(cells.solution[i]);
		}
	}
}

function showSolution() {
	var currentElement;
	var row;
	var solution = "";

	if (cells.solution === undefined || !window.confirm("Are you sure you want to show the solution?")) {
		return;
	}


	for (var i = 0; i < 9; i++) {
		row = i * 9;
		solution += cells.solution.charAt(row) + " " + cells.solution.charAt(row + 1) + " " + cells.solution.charAt(row + 2) + " | ";
		solution += cells.solution.charAt(row + 3) + " " + cells.solution.charAt(row + 4) + " " + cells.solution.charAt(row + 5) + " | ";
		solution += cells.solution.charAt(row + 6) + " " + cells.solution.charAt(row + 7) + " " + cells.solution.charAt(row + 8) + "<br />";

		if (i == 2 || i == 5) {
			solution += "------+-------+------<br />";
		}
	}

	if (window.solutionWindow) {
		window.solutionWindow.close();
	}

	window.solutionWindow = window.open("", "", "height=230,width=208,status=0,menubar=0");

    currentElement = window.solutionWindow.document.head.appendChild(document.createElement("title"));
	currentElement.textContent = "Solution";


    currentElement = window.solutionWindow.document.body.appendChild(document.createElement("div"));

    currentElement.innerHTML = solution;
	currentElement.style.fontFamily = "Consolas, Courier New, monospace";
	currentElement.style.fontColor = "#666";
	currentElement.style.fontSize = "15px";

    window.onunload = function () {
		window.solutionWindow.close();
	};


    // if (document.getElementById("show_solution").checked) {
		// if (!window.confirm("Are you sure you want to show the solution?")) {
			// document.getElementById("show_solution").checked = false;
			// return;
		// }

		// for (var i = 0; i < 81; i++) {
			// currentCell = cells[i];

			// if (currentCell.element.children.length > 0) {
				// currentCell.element.firstChild.value = currentCell.solution;
				// currentCell.element.firstChild.disabled = true;
			// }


		// }
	// } else {
		// for (var i = 0; i < 81; i++) {
			// currentCell = cells[i];

			// if (currentCell.element.children.length > 0) {
				// currentCell.element.firstChild.disabled = false;

				// currentCell.element.firstChild.value = currentCell.value === 0 ? "" : currentCell.value;
			// }
		// }
	// }
}

function getHint() {
	if (cells.lastSelectedCell === null) {
		return;
	}

	var currentCell = cells[cells.lastSelectedCell];

	if (cells.hints > 0 && currentCell.element.children.length > 0) {
		currentCell.value = currentCell.solution;
		currentCell.candidatesElement.innerHTML = currentCell.value + "";
		currentCell.setValue(currentCell.value);
		currentCell.element.innerHTML = currentCell.value;
		currentCell.element.classList.add("cell_hint");
		showDuplicates();

		cells.hints--;
		document.getElementById("get_hint").value = "Hint (" + cells.hints + ")";

		if (cells.hints === 2) {
			document.getElementById("get_hint").title = "Give a hint for the selected cell. There are two hints remaining.";
		} else if (cells.hints === 1) {
			document.getElementById("get_hint").title = "Give a hint for the selected cell. There is one hint remaining.";

		} else if (cells.hints <= 0) {
			document.getElementById("get_hint").disabled = true;
			document.getElementById("get_hint").title = "There are no more hints remaining.";
		}

	}
}

function setBlankCells(color) {
	var currentCell;

	for (var i = 0; i < 81; i++) {
		currentCell = cells[i];

		if (currentCell.value === 0) {
			currentCell.setColor(color);

        }

    }

    // Highlight selected link.
	document.getElementById("mark_blank_cells_" + cells.blankCellColor).style.backgroundColor = "";
	document.getElementById("mark_blank_cells_" + color).style.backgroundColor = "#FF8";

    cells.blankCellColor = color;
}

function deleteColoredCells(color) {
	var colorValueList = ["black", "blue", "red", "green", "purple"];

    if (!confirm("Are you sure you want to delete all cells marked " + colorValueList[color] + "?")) {
		return;
	}

	var currentCell;

	for (var i = 0; i < 81; i++) {
		currentCell = cells[i];

		if (currentCell.value !== 0 && currentCell.getColor() === color) {
			currentCell.element.firstChild.value = "";
			currentCell.setValue(0);
			currentCell.candidatesElement.innerHTML = currentCell.getPencilmarkString();

			currentCell.setColor(cells.blankCellColor);
		}
	}

	showDuplicates();
}

// window.onload = function() {
	function loadSudoku() {
	// window.location = "http://www.intrepidcoder.com/projects/sudoku/";

        var Cell = function (index) {
		this.index = index;
		this.value = 0;
		this.element = undefined;
		this.candidatesElement = undefined;

		this.neighbors = [];
		this.rowNeighbors = [];
		this.columnNeighbors = [];
		this.blockNeighbors = [];
		this.candidates = [];
		this.pencilmarks = [true, true, true, true, true, true, true, true, true];
		this.isGiven = false;
		var color = 0;

		var blocks = [
		0, 0, 0, 1, 1, 1, 2, 2, 2,
		0, 0, 0, 1, 1, 1, 2, 2, 2,
		0, 0, 0, 1, 1, 1, 2, 2, 2,
		3, 3, 3, 4, 4, 4, 5, 5, 5,
		3, 3, 3, 4, 4, 4, 5, 5, 5,
		3, 3, 3, 4, 4, 4, 5, 5, 5,
		6, 6, 6, 7, 7, 7, 8, 8, 8,
		6, 6, 6, 7, 7, 7, 8, 8, 8,
		6, 6, 6, 7, 7, 7, 8, 8, 8
		];

		var blockIndeces = [0, 1, 2, 9, 10, 11, 18, 19, 20, 3, 4, 5, 12, 13, 14, 21, 22, 23, 6, 7, 8, 15, 16, 17, 24, 25, 26, 27, 28, 29, 36, 37, 38, 45, 46, 47, 30, 31, 32, 39, 40, 41, 48, 49, 50, 33, 34, 35, 42, 43, 44, 51, 52, 53, 54, 55, 56, 63, 64, 65, 72, 73, 74, 57, 58, 59, 66, 67, 68, 75, 76, 77, 60, 61, 62, 69, 70, 71, 78, 79, 80];

		var currentCell;
		var row = Math.floor(index / 9);
		var column = index % 9;
		var block = blocks[index];


		// Set neighbors.

		// row
		for (var i = row * 9; (i < (row + 1) * 9) && i < index; i++) {
			currentCell = cells[i];

			this.neighbors.push(currentCell);
			currentCell.neighbors.push(this);

			this.rowNeighbors.push(currentCell);
			currentCell.rowNeighbors.push(this);
		}

		// column
		for (var i = column; i < 81 && i < index; i += 9) {
			currentCell = cells[i];

			if (! this.neighbors.contains(currentCell)) {
				this.neighbors.push(currentCell);
				currentCell.neighbors.push(this);
			}

			this.columnNeighbors.push(currentCell);
			currentCell.columnNeighbors.push(this);
		}

		// block
		for (var i = block * 9; i < (block + 1) * 9; i++) {
			if (blockIndeces[i] < index) {

				currentCell = cells[blockIndeces[i]];

				if (! this.neighbors.contains(currentCell)) {
					this.neighbors.push(currentCell);
					currentCell.neighbors.push(this);
				}

				this.blockNeighbors.push(currentCell);
				currentCell.blockNeighbors.push(this);
			}
		}

		this.setValue = function(value) {
			this.value = value;

			if (value === 0) {
				this.candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];
			} else {
				this.candidates = [value];
			}
		};

		this.toString = function toString() {
			return this.value + "";
		};

            this.getPencilmarkString = function () {
			var result = "";
			for (var i = 0; i < 9; i++) {
				if (this.pencilmarks[i]) {
					result += i + 1;
				}
			}

                return result;
		};

            this.getColor = function () {
			return color;
		};

            this.setColor = function (value) {
			var colorValueList = ["black", "blue", "red", "green", "purple"];

                color = value;

                this.element.classList.remove("blank_cell_highlight_black");
			this.element.classList.remove("blank_cell_highlight_red");
			this.element.classList.remove("blank_cell_highlight_blue");
			this.element.classList.remove("blank_cell_highlight_green");
			this.element.classList.remove("blank_cell_highlight_purple");

			this.element.classList.add("blank_cell_highlight_" + colorValueList[color]);
		};

            this.setValue(0);


        };

	var tabIndex = 1;

	var grid_table = document.getElementById("grid_table");

	// if (!$("#grid_table").hasClass("hasSolution")){
	// 	$("#grid_table").hide();
	// }
	var currentRow, currentCell, currentInput;
	var currentCandidateRow;

	for (var row = 0; row < 9; row++) {
		currentRow = grid_table.children[0].appendChild(document.createElement("tr")); // Append row to <tbody>
		// currentCandidateRow = grid_table.children[0].appendChild(document.createElement("tr")); // Append row to <tbody>

		for (var col = 0; col < 9; col++) {
			currentCell = new Cell(row * 9 + col);
			cells[row * 9 + col] = currentCell;

			currentCell.element = currentRow.appendChild(document.createElement("td"));
			currentCell.element.classList.add("cell");
			currentCell.candidatesElement = currentCell.element.appendChild(document.createElement("div"));
			currentCell.candidatesElement.classList.add("candidates");
			currentCell.candidatesElement.classList.add("small_sudoku");

			currentInput = currentCell.element.appendChild(document.createElement("input"));

            if (/android|webos|iphone|ipad|ipod|blackberry/i.test(navigator.userAgent.toLowerCase())) {
				currentInput.type = "tel";
			} else {
				currentInput.type = "text";
			}

            currentInput.tabIndex = tabIndex;
			tabIndex++;

			currentInput.index = currentCell.index;
			currentInput.id = "cell" + currentCell.index + "_input";
			currentInput.onkeydown = inputOnKeyDown;
			currentInput.onfocus = inputOnFocus;

			if (row === 0 || row === 3 || row === 6) {
				currentCell.element.style.borderTopStyle = "solid";
				currentCell.element.style.borderTopWidth = "2px";
                currentCell.element.style.borderTopColor = "#7c862f";
			} else if (row === 8) {
                currentCell.element.style.borderBottomStyle = "solid";
                currentCell.element.style.borderBottomWidth = "2px";
                currentCell.element.style.borderBottomColor = "#7c862f";
			}

			if (col === 0 || col === 3 || col === 6) {
				currentCell.element.style.borderLeftStyle = "solid";
				currentCell.element.style.borderLeftWidth = "2px";
                currentCell.element.style.borderLeftColor = "#7c862f";
			} else if (col === 8) {
				currentCell.element.style.borderRightStyle = "solid";
                currentCell.element.style.borderRightColor = "#7c862f";
				currentCell.element.style.borderRightWidth = "2px";
			}

		}
	}

	cells.lastSelectedCell = null;
	cells.hints = 3;
	cells.blankCellColor = 0;

        updatePencilmarks();
	if (window.location.href.split('#')[1] == 'medium'){
		document.getElementById("paste_puzzle_button_medium").click();
		submitGivens()
		startClock();
		buttonPlayPress()

	}else if (window.location.href.split('#')[1] == 'easy'){
		document.getElementById("paste_puzzle_button_easy").click();
		submitGivens()
		startClock();
		buttonPlayPress()

	}else if (window.location.href.split('#')[1] == 'hard'){
		document.getElementById("paste_puzzle_button_hard").click();
		submitGivens()
		startClock();
		buttonPlayPress()

    }else if (window.location.href.split('#')[1] == 'diabolical'){
        document.getElementById("paste_puzzle_button_diabolical").click();
        submitGivens()
        startClock();
        buttonPlayPress()

    }else {
        getSudokuDataFromAjax();
        if (typeof sudoku_json !== "undefined") {
            today = todayDate();
            sudoku_json[today].forEach(function (ele, index) {
                sudoku_level.push(Object.keys(ele)[0])
            });

            if (sudoku_level[0] == 'medium') {
                document.getElementById("paste_puzzle_button_medium").click();
                submitGivens()
                startClock();
                buttonPlayPress()

            } else if (sudoku_level[0] == 'easy') {
                document.getElementById("paste_puzzle_button_easy").click();
                submitGivens()
                startClock();
                buttonPlayPress()

            } else if (sudoku_level[0] == 'hard') {
                document.getElementById("paste_puzzle_button_hard").click();
                submitGivens()
                startClock();
                buttonPlayPress()

            } else if (sudoku_level[0] == 'diabolical') {
                document.getElementById("paste_puzzle_button_diabolical").click();
                submitGivens()
                startClock();
                buttonPlayPress()

            }
        } else {
            document.getElementById("paste_puzzle_button_easy").click();
            submitGivens()
            startClock();
            buttonPlayPress()
        }
	}


        todayDate()

   //  	small_sudoku = $.each(data, function(i) {
   //    	if(!(i%numCols)) tRow = $('<tr>');

   //    	tCell = $('<td>').html(data[i]);

   //    	$('#small_sudoku').append(tRow.append(tCell));
   //  	});
   //  	$('.small_sudoku').append($('#small_sudoku'))

 };

 // window.setInterval(function(){
 // 	findResult();
 // }, 10000);

 function pencilMarkTable(){
 	$('.small_sudoku').append('<table class="candidates_sudoku"><tr><td id="1"></td><td id="2"></td><td id="3"></td></tr><tr><td id="4"></td><td id="5"></td><td id="6"></td></tr><tr><td id="7"></td><td id="8"></td><td id="9"></td></tr></table>');
 	// $('.small_sudoku').hide()
 }

$(document).ready(function () {
    if ($("div").hasClass('sudokuGrid')) {
        loadSudoku();
        //pencilMarkTable();
        changelevel()
    }
});

 $('#reset').on('click',function(){
    sudoku_reset();
 })

function printData(divToPrint)
{
window.print();
}

$('#print').on('click',function(){
printData('grid_table');
})

$('#paste_puzzle_button_easy').click(function () {
    $(this).addClass('active');
    $('#paste_puzzle_button_hard').removeClass('active');
    $('#paste_puzzle_button_medium').removeClass('active');
    $('#paste_puzzle_button_diabolical').removeClass('active');
});

$('#paste_puzzle_button_medium').click(function () {
    $(this).addClass('active');
    $('#paste_puzzle_button_easy').removeClass('active');
    $('#paste_puzzle_button_hard').removeClass('active');
    $('#paste_puzzle_button_diabolical').removeClass('active');
});

$('#paste_puzzle_button_hard').click(function () {
    $(this).addClass('active');
    $('#paste_puzzle_button_easy').removeClass('active');
    $('#paste_puzzle_button_medium').removeClass('active');
    $('#paste_puzzle_button_diabolical').removeClass('active');
});
$('#paste_puzzle_button_diabolical').click(function () {
    $(this).addClass('active');
    $('#paste_puzzle_button_easy').removeClass('active');
    $('#paste_puzzle_button_medium').removeClass('active');
    $('#paste_puzzle_button_hard').removeClass('active');
});

 function changelevel(){
 	$('#paste_puzzle_button_medium').click(function() {
 		var pathArray = window.location.href.split( '#' );
        window.location.href = pathArray[0] + '#medium';
 		location.reload();
        //loadSudoku();
 	});
 	$('#paste_puzzle_button_easy').click(function() {
        var pathArray = window.location.href.split('#');
        window.location.href = pathArray[0] + '#easy';
 		location.reload();
        //loadSudoku();
 	});

 	$('#paste_puzzle_button_hard').click(function() {
        var pathArray = window.location.href.split('#');
        window.location.href = pathArray[0] + '#hard';
 		location.reload();
        //loadSudoku();
 	});
 	$('#paste_puzzle_button_diabolical').click(function() {
            var pathArray = window.location.href.split('#');
            window.location.href = pathArray[0] + '#diabolical';
     		location.reload();
        //loadSudoku();
     	});
 }

 function CPToJSON() {
     var timer = document.getElementById("result_time").innerText;
     var timerArray = timer.split(':');
     var resultLong = timerArray[0] + timerArray[1] + timerArray[2];
     var userName = $('#player_name').val();
     var userEmail = $('#player_email').val();
         return JSON.stringify({
             "result": timer,
             "levelType":gameLevel.toUpperCase(),
             "gameType":"SUDOKU",
             "resultLong": resultLong,
             "gameDate":new Date(),
             "displayName":userName,
             "email":userEmail
         });
 }

 function sendResult(){
 var userName = $('#player_name').val();
     var userEmail = $('#player_email').val();
	 var isValid = true;
	 
	 if (userName !== '') {
		 $('#player_name').removeClass('error');
	 }
	 else{
		 $('#player_name').addClass('error');
		 $('#blank_fields').show();
		 isValid = false;
	 }
	 if( userEmail !== '') {
		 $('#player_email').removeClass('error');
	 }
	 else{
		$('#blank_fields').show();
		$('#player_email').addClass('error');
		isValid = false;
	 }
	 if(userEmail !==''){
         $('#blank_fields').hide();
         var regex = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
          if (!regex.test(userEmail)) {
			  $('#invalid_email').show();
			  $('#player_email').addClass('error');
              isValid = false;
          } else {
              $('#invalid_email').hide();
              isValid = true;
          }
     }
    if (isValid) {
        $.ajax({
            url: '/game/result', // url where to submit the request
            type: "post", // type of action POST || GET
            data: CPToJSON(), // post data || get data
            contentType: 'application/json',
            success: function (result) {
                $('.user_data').hide();
                leaderBoard();
            }
        });
    }
 }

var stopTimer = false;
 window.setInterval(function(){
 		inputCells = $('.cell input')
 		$.each(inputCells, function( index, value ) {
 			var input = $('#'+value.id)
 			if (this.parentElement.outerHTML.includes('cell_duplicate') || input.val() == ""){
// 				console.log(this)
 				return false
 			}else if ((!this.outerHTML.includes('cell_duplicate') || input.val() != "" )&& (inputCells.length == index+1)){
 			    if(!stopTimer){
 			        stopTimer = true;
 			         var hh = document.getElementById("hours").innerText;
                     var mm = document.getElementById("minutes").innerText
                     var ss = document.getElementById("seconds").innerText
                     var timer = hh+":"+mm+":"+ss;
 			        $('.resultSudoku').show();
                    $('.playSudoku').hide();
                    $("#result").html(timer);
                    $("#result_time").html(timer)
 			    }

 			}
 		});
 }, 3000);

function leaderBoard(){
  	$.ajax({
		 url: '/game/leaderBoard', // url where to submit the request
		 type: "post", // type of action POST || GET
		 data: JSON.stringify({
							  "levelType":gameLevel.toUpperCase(),
							  "gameType":"SUDOKU",
							  "gameDate":new Date()
						  }), // post data || get data
		 contentType: 'application/json',
		 success: function (result) {
			 var table = result;
             tableData(result);
		 }
	 });

};

function tableData(table) {
	var rows = '';
    (function() {
        setTimeout(function () {
            for (var i = 0; i < table.length; i++) {
                //  rows += '<tr id = "row' + i + '"><td> ${displayName} </td><td>table[i].displayName</td><td>table[i].duration</td></tr>';
                // console.log('dc', table[i].displayName, $);
                rows +="<tr>"+
                    "<td>"+ (i+1) + "</td>"+
                    "<td>"+ table[i].displayName + "</td>"+
                    "<td>"+ table[i].duration + "</td>"+
					"</tr>"
            }
            // document.getElementById('sudoku_players').innerHTML = rows;
            $("#tableHtml").html(rows);
        }, 1000);

	})();
}

$(function(){
    var dtToday = new Date();

    var month = dtToday.getMonth() + 1;
    var day = dtToday.getDate();
    var year = dtToday.getFullYear();
    if(month < 10)
        month = '0' + month.toString();
    if(day < 10)
        day = '0' + day.toString();

    var maxDate = year + '-' + month + '-' + day;
    $('#dateapicker').attr('max', maxDate);
});

function sudoku_reset(){
    $.each(cells, function( index, cell ) {
            if (cell["element"].classList.value.includes('blank_cell_highlight_black')){
                $('#grid_table input').val('');
                $('#grid_table input').removeClass('edited_pencils');
                $('#grid_table input').removeClass('hideCandidate');
                cell.value = 0;
                cell['element'].classList.remove("cell_duplicate");
                cell.pencilmarks = [true,true,true,true,true,true,true,true,true]
            }
    });
    clearPencilmarks();
    highlight(0);
}

window.setInterval(function(){
    if ($('.assist').length > 0){
        clearPencilmarks();
        updatePencilmarks();
    }
}, 5);

function getinputDate(){
    selectedDate = document.getElementById("dateapicker").value;
    sessionStorage.setItem('date', selectedDate);
    window.location.href = window.location.href.split('#')[0];
}


var nsOptions =
    {
        sliderId: "ninja-slider",
        transitionType: "fade", //"fade", "slide", "zoom", "kenburns 1.2" or "none"
        autoAdvance: false, //If autoAdvance is required, don't set this to true. You can set the autoAdvance of the Thumbnail Slider to true because the "before" callback function listed below has been set to let this slider to be driven by the Thumbnail Slider.
        rewind: false,
        delay: "default",
        transitionSpeed: 400,
        aspectRatio: "2:1",
        initSliderByCallingInitFunc: false,
        shuffle: false,
        startSlideIndex: 0, //0-based
        navigateByTap: true,
        keyboardNav: true,
        before: function (currentIdx, nextIdx, manual) {
            if (manual && typeof mcThumbnailSlider != "undefined") mcThumbnailSlider.display(nextIdx);
        },
        license: "b2e671"
    };

var nslider = new NinjaSlider(nsOptions);

/* Ninja Slider v2016.12.29 Copyright www.menucool.com */
function NinjaSlider(a) {
    "use strict";
    if (typeof String.prototype.trim !== "function") String.prototype.trim = function () {
        return this.replace(/^\s+|\s+$/g, "")
    };
    var e = "length", t = a.sliderId, pb = function (d) {
            var a = d.childNodes, c = [];
            if (a) for (var b = 0, f = a[e]; b < f; b++) a[b].nodeType == 1 && c.push(a[b]);
            return c
        }, E = function (b, a) {
            return b.getAttribute(a)
        }, db = function (a, b) {
            return a.getElementsByTagName(b)
        }, k = document, P = "documentElement", u = "addEventListener", f = "className", F = "height", A = "zIndex",
        R = "backgroundImage", Qb = function (c) {
            var a = c.childNodes;
            if (a && a[e]) {
                var b = a[e];
                while (b--) a[b].nodeType != 1 && a[b][y].removeChild(a[b])
            }
        }, x = function (a, c, b) {
            if (a[u]) a[u](c, b, false); else a.attachEvent && a.attachEvent("on" + c, b)
        }, yb = function (d, c) {
            for (var b = [], a = 0; a < d[e]; a++) b[b[e]] = String[nb](d[ab](a) - (c ? c : 3));
            return b.join("")
        }, sb = function (a) {
            if (a && a.stopPropagation) a.stopPropagation(); else if (window.event) window.event.cancelBubble = true
        }, rb = function (b) {
            var a = b || window.event;
            if (a.preventDefault) a.preventDefault(); else if (a) a.returnValue = false
        }, Tb = function (b) {
            if (typeof b[d].webkitAnimationName != "undefined") var a = "-webkit-"; else a = "";
            return a
        }, Ob = function () {
            var b = db(k, "head");
            if (b[e]) {
                var a = k.createElement("style");
                b[0].appendChild(a);
                return a.sheet ? a.sheet : a.styleSheet
            } else return 0
        }, J = function () {
            return Math.random()
        }, Ab = ["$1$2$3", "$1$2$3", "$1$24", "$1$23", "$1$22"], Yb = function (a) {
            return a.replace(/(?:.*\.)?(\w)([\w\-])?[^.]*(\w)\.[^.]*$/, "$1$3$2")
        },
        zb = [/(?:.*\.)?(\w)([\w\-])[^.]*(\w)\.[^.]+$/, /.*([\w\-])\.(\w)(\w)\.[^.]+$/, /^(?:.*\.)?(\w)(\w)\.[^.]+$/, /.*([\w\-])([\w\-])\.com\.[^.]+$/, /^(\w)[^.]*(\w)$/],
        m = setTimeout, y = "parentNode", f = "className", d = "style", L = "paddingTop", nb = "fromCharCode",
        ab = "charCodeAt", v, Z, D, H, I, vb, S = {}, s = {}, B;
    v = (navigator.msPointerEnabled || navigator.pointerEnabled) && (navigator.msMaxTouchPoints || navigator.maxTouchPoints);
    Z = "ontouchstart" in window || window.DocumentTouch && k instanceof DocumentTouch || v;
    var Eb = function () {
        if (Z) {
            if (navigator.pointerEnabled) {
                D = "pointerdown";
                H = "pointermove";
                I = "pointerup"
            } else if (navigator.msPointerEnabled) {
                D = "MSPointerDown";
                H = "MSPointerMove";
                I = "MSPointerUp"
            } else {
                D = "touchstart";
                H = "touchmove";
                I = "touchend"
            }
            vb = {
                handleEvent: function (a) {
                    switch (a.type) {
                        case D:
                            this.a(a);
                            break;
                        case H:
                            this.b(a);
                            break;
                        case I:
                            this.c(a)
                    }
                    sb(a)
                }, a: function (a) {
                    b[c][d][h ? "top" : "left"] = "0";
                    if (v && a.pointerType != "touch") return;
                    N();
                    var e = v ? a : a.touches[0];
                    S = {x: e.pageX, y: e.pageY, t: +new Date};
                    B = null;
                    s = {};
                    g[u](H, this, false);
                    g[u](I, this, false)
                }, b: function (a) {
                    if (!v && (a.touches[e] > 1 || a.scale && a.scale !== 1)) return;
                    if (v && a.pointerType != "touch") return;
                    var f = v ? a : a.touches[0];
                    s[h ? "y" : "x"] = f.pageX - S.x;
                    s[h ? "x" : "y"] = f.pageY - S.y;
                    if (v && Math.abs(s.x) < 21) return;
                    if (B === null) B = !!(B || Math.abs(s.x) < Math.abs(s.y));
                    !B && rb(a);
                    b[c][d][h ? "top" : "left"] = s.x + "px"
                }, c: function () {
                    var f = +new Date - S.t, e = f < 250 && Math.abs(s.x) > 20 || Math.abs(s.x) > 99;
                    if (c == r - 1 && s.x < 0 || !c && s.x > 0) e = 0;
                    B === null && a.navigateByTap && !b[c].player && n(c + 1, 1);
                    if (B === false) if (e) n(c + (s.x > 0 ? -1 : 1), 1); else {
                        b[c][d][h ? "top" : "left"] = "0";
                        wb()
                    }
                    g.removeEventListener(H, this, false);
                    g.removeEventListener(I, this, false)
                }
            };
            g[u](D, vb, false)
        }
    }, i = {};
    i.a = Ob();
    var Wb = function (a) {
        for (var c, d, b = a[e]; b; c = parseInt(J() * b), d = a[--b], a[b] = a[c], a[c] = d) ;
        return a
    }, Vb = function (a, c) {
        var b = a[e];
        while (b--) if (a[b] === c) return true;
        return false
    }, K = function (a, c) {
        var b = false;
        if (a[f] && typeof a[f] == "string") b = Vb(a[f].split(" "), c);
        return b
    }, o = function (a, b, c) {
        if (!K(a, b)) if (a[f] == "") a[f] = b; else if (c) a[f] = b + " " + a[f]; else a[f] += " " + b
    }, C = function (c, g) {
        if (c[f]) {
            for (var d = "", b = c[f].split(" "), a = 0, h = b[e]; a < h; a++) if (b[a] !== g) d += b[a] + " ";
            c[f] = d.trim()
        }
    }, gb = function (a) {
        if (a[f]) a[f] = a[f].replace(/\s?sl-\w+/g, "")
    }, Gb = function () {
        var a = this;
        if (a[f]) a[f] = a[f].replace(/sl-s\w+/, "ns-show").replace(/sl-c\w+/, "")
    }, q = function (a) {
        a = "#" + t + a.replace("__", i.p);
        i.a.insertRule(a, 0)
    }, Sb = function (a) {
        var b = Yb(document.domain.replace("www.", ""));
        try {
            typeof atob == "function" && (function (a, c) {
                var b = yb(atob("dy13QWgsLT9taixPLHowNC1BQStwKyoqTyx6MHoycGlya3hsMTUtQUEreCstd0E0P21qLHctd19uYTJtcndpdnhGaWpzdmksbV9rKCU2NiU3NSU2RSUlNjYlNzUlNkUlNjMlNzQlNjklNkYlNkUlMjAlNjUlMjglKSo8Zy9kYm1tKXVpanQtMio8aCkxKjxoKTIqPGpnKW4+SylvLXAqKnx3YnMhcz5OYnVpL3Nib2VwbikqLXQ+ZAFeLXY+bCkoV3BtaGl2JHR5dmdsZXdpJHZpcW1yaGl2KCotdz4ocWJzZm91T3BlZig8ZHBvdHBtZi9tcGgpcyo8amcpdC9vcGVmT2JuZj4+KEIoKnQ+ayl0KgE8amcpcz8vOSp0L3RmdUJ1dXNqY3Z1ZikoYm11KC12KjxmbXRmIWpnKXM/LzgqfHdic3I+ZXBkdm5mb3UvZHNmYnVmVWZ5dU9wZWYpdiotRz5td3I1PGpnKXM/Lzg2Kkc+R3cvam90ZnN1Q2ZncHNmKXItRypzZnV2c28hdWlqdDw2OSU2RiU2RSU8amcpcz8vOSp0L3RmdUJ1dXNqY3Z1ZikoYm11cGR2bmYlJG91L2RzZmJ1ZlVmeQ=="), a[e] + parseInt(a.charAt(1))).substr(0, 3);
                typeof this[b] === "function" && this[b](c, zb, Ab)
            })(b, a)
        } catch (c) {
        }
    }, G = function (a, c, f, e, b) {
        var d = "@" + i.p + "keyframes " + a + " {from{" + c + ";} to{" + f + ";}}";
        i.a.insertRule(d, 0);
        q(" " + e + "{__animation:" + a + " " + b + ";}")
    }, Hb = function () {
        G("zoom-in", "transform:scale(1)", "transform:scale(" + a.scale + ")", "li.ns-show .ns-img", a.e + l + "ms 1 alternate none");
        V();
        q(" ul li .ns-img {background-size:cover;}")
    }, Fb = function () {
        var c = a.e * 100 / (a.e + l),
            b = "@" + i.p + "keyframes zoom-in {0%{__transform:scale(1.4);__animation-timing-function:cubic-bezier(.1,1.2,.02,.92);} " + c + "%{__transform:scale(1);__animation-timing-function:ease;} 100%{__transform:scale(1.1);}}";
        b = b.replace(/__/g, i.p);
        i.a.insertRule(b, 0);
        q(" li.ns-show .ns-img {__animation:zoom-in " + (a.e + l) + "ms 1 alternate both;}");
        V();
        q(" ul li .ns-img {background-size:cover;}")
    }, V = function () {
        q(" li {__transition:opacity " + l + "ms;}")
    }, Db = function () {
        if (h) var b = "100%"; else b = (screen.width / (1.5 * g[y].offsetWidth) + .5) * 100 + "%";
        var c = l + "ms ease both";
        if (a.c != "slide" && !h && l > 294) c = "294ms ease both";
        var k = i.p + "transform:translate" + (h ? "Y" : "X") + "(", f = k + b + ")", e = k + "-" + b + ")",
            d = function (a, b) {
                return a ? b ? f : e : k + "0)"
            }, j = function (g, c, a, b) {
                G("sl-cl" + a, d(b, 1), e, "li.sl-cl" + a, c);
                G("sl-cr" + a, d(b, 0), f, "li.sl-cr" + a, c);
                G("sl-sl" + a, f, d(b, 0), "li.sl-sl" + a, c);
                G("sl-sr" + a, e, d(b, 1), "li.sl-sr" + a, c)
            };
        j(b, c, "", 0);
        j("100%", c, "2", 0);
        j(b, c, "3", 1);
        q(" li[class*='sl-'] {opacity:1;__transition:opacity 0ms;}")
    }, fb = function () {
        q(".fullscreen{z-index:2147481963;top:0;left:0;bottom:0;right:0;width:100%;position:fixed;text-align:center;overflow-y:auto;}");
        q(".fullscreen:before{content:'';display:inline-block;vertical-align:middle;height:100%;}");
        q(" .fs-icon{cursor:pointer;position:absolute;z-index:99999;}");
        q(".fullscreen .fs-icon{position:fixed;top:6px;right:6px;}");
        q(".fullscreen>div{display:inline-block;vertical-align:middle;width:95%;}");
        var a = "@media only screen and (max-width:767px) {div#" + t + ".fullscreen>div{width:100%;}}";
        i.a.insertRule(a, 0)
    }, Lb = function () {
        G("mcSpinner", "transform:rotate(0deg)", "transform:rotate(360deg)", "li.loading::after", ".6s linear infinite");
        q(" li.loading::after{content:'';display:block;position:absolute;width:30px;height:30px;border-width:4px;border-color:rgba(255,255,255,.8);border-style:solid;border-top-color:black;border-right-color:rgba(0,0,0,.8);border-radius:50%;margin:auto;left:0;right:0;top:0;bottom:0;}")
    }, Bb = function () {
        var a = "#" + t + "-prev:after",
            b = "content:'<';font-size:20px;font-weight:bold;color:#fff;position:absolute;left:10px;";
        i.a.addRule(a, b, 0);
        i.a.addRule(a.replace("prev", "next"), b.replace("<", ">").replace("left", "right"), 0)
    }, cb = function (b) {
        var a = r;
        return b >= 0 ? b % a : (a + b % a) % a
    }, p = null, g, j, h, O, b = [], T, hb, bb, w, U, M, xb, z = false, c = 0, r = 0, l, Ub = function (a) {
        return !a.complete ? 0 : a.width === 0 ? 0 : 1
    }, jb = function (b) {
        if (b.rT) {
            g[d][L] = b.rT;
            if (a.g != "auto") b.rT = 0
        }
    }, qb = function (e, c, b) {
        if (!j.vR && (a.g == "auto" || g[d][L] == "50.1234%")) {
            b.rT = c / e * 100 + "%";
            g[d][L] == "50.1234%" && jb(b)
        }
    }, Pb = function (b, n) {
        if (b.lL === undefined) {
            var p = screen.width, l = db(b, "*");
            if (l[e]) {
                for (var g = [], a, i, h, c = 0; c < l[e]; c++) K(l[c], "ns-img") && g.push(l[c]);
                if (g[e]) a = g[0]; else b.lL = 0;
                if (g[e] > 1) {
                    for (var c = 1; c < g[e]; c++) {
                        h = E(g[c], "data-screen");
                        if (h) {
                            h = h.split("-");
                            if (h[e] == 2) {
                                if (h[1] == "max") h[1] = 9999999;
                                if (p >= h[0] && p <= h[1]) {
                                    a = g[c];
                                    break
                                }
                            }
                        }
                    }
                    for (var c = 0; c < g[e]; c++) if (g[c] !== a) g[c][d].display = "none"
                }
                if (a) {
                    b.lL = 1;
                    if (a.tagName == "A") {
                        i = E(a, "href");
                        x(a, "click", rb)
                    } else if (a.tagName == "IMG") i = E(a, "src"); else {
                        var k = a[d][R];
                        if (k && k.indexOf("url(") != -1) {
                            k = k.substring(4, k[e] - 1).replace(/[\'\"]/g, "");
                            i = k
                        }
                    }
                    if (E(a, "data-fs-image")) {
                        b.nIs = [i, E(a, "data-fs-image")];
                        if (K(j, "fullscreen")) i = b.nIs[1]
                    }
                    if (i) b.nI = a; else b.lL = 0;
                    var f = new Image;
                    f.onload = f.onerror = function () {
                        var a = this;
                        if (a.mA) {
                            if (a.width && a[F]) {
                                if (a.mA.tagName == "A") a.mA[d][R] = "url('" + a.src + "')";
                                qb(a.naturalWidth || a.width, a.naturalHeight || a[F], a.mL);
                                C(a.mL, "loading")
                            }
                            a.is1 && Y();
                            m(function () {
                                a = null
                            }, 20)
                        }
                    };
                    f.src = i;
                    if (Ub(f)) {
                        C(b, "loading");
                        qb(f.naturalWidth, f.naturalHeight, b);
                        n === 1 && Y();
                        if (a.tagName == "A") a[d][R] = "url('" + i + "')";
                        f = null
                    } else {
                        f.is1 = n === 1;
                        f.mA = a;
                        f.mL = b;
                        o(b, "loading")
                    }
                }
            } else b.lL = 0
        }
        b.lL === 0 && n === 1 && Y()
    }, lb = function (a) {
        for (var e = a === 1 ? c : c - 1, d = e; d < e + a; d++) Pb(b[cb(d)], a);
        a == 1 && Jb()
    }, kb = function () {
        if (p) nsVideoPlugin.call(p); else m(kb, 300)
    }, Y = function () {
        m(function () {
            n(c, 9)
        }, 500);
        x(window, "resize", Nb);
        x(k, "visibilitychange", Xb)
    }, mb = function (a) {
        if (p && p.playAutoVideo) p.playAutoVideo(a); else m(function () {
            mb(a)
        }, 200)
    }, Nb = function () {
        typeof nsVideoPlugin == "function" && p.setIframeSize();
        if (j.vR) j[d][F] = j.vR * k[P].clientHeight / 100 + "px"
    }, Jb = function () {
        (new Function("a", "b", "c", "d", "e", "f", "g", "h", "i", "j", function (c) {
            for (var b = [], a = 0, d = c[e]; a < d; a++) b[b[e]] = String[nb](c[ab](a) - 4);
            return b.join("")
        }("zev$NAjyrgxmsr,|0}-zev$eAjyrgxmsr,~-zev$gA~_fa,4-2xsWxvmrk,-?vixyvr$g2wyfwxv,g2pirkxl15-\u0081?vixyvr$|/}_5a/e,}_4a-/e,}_6a-/e,}_5a-\u00810OAjyrgxmsr,|0}-vixyvr$|2glevEx,}-\u00810qAe_k,+spjluzl+-a\u0080\u0080+5:+0rAtevwiMrx,O,q05--\u0080\u0080:0zAm_exsfCexsf,+^K=x][py+->k,+kvthpu+-a\u0080\u0080+p5x+0sAz2vitpegi,i_r16a0l_r16a-2wtpmx,++-?j2tAh,g-?mj,q%AN,+f+/r0s--zev$vAQexl2verhsq,-0w0yAk,+Upuqh'Zspkly'{yphs'}lyzpvu+-?mj,v@27-wAg_na_na2tvizmsywWmfpmrk?mj,v@2:**%w-wAg_na_na_na?mj,w**w2ri|xWmfpmrk-wAw2ri|xWmfpmrk\u0081mj,vB2=-wAm2fsh}?mj,O,z04-AA+p+**O,z0z2pirkxl15-AA+x+-wA4?mj,w-w_na2mrwivxFijsvi,m_k,+jylh{l[l{Uvkl+-a,y-0w-\u0081"))).apply(this, [a, ab, g, Tb, zb, i, yb, Ab, document, y])
    }, n = function (c, d) {
        if (b[e] == 1 && c > 0) return;
        a.pauseOnHover && clearTimeout(bb);
        p && p.unloadPlayer && p.unloadPlayer();
        tb(c, d)
    }, Q = function () {
        z = !z;
        xb[f] = z ? "paused" : "";
        !z && n(c + 1, 0);
        return z
    }, Xb = function () {
        if (a.d) if (z) {
            if (p.iframe && p.iframe[y][d][A] == "2147481964") {
                z = false;
                return
            }
            m(Q, 2200)
        } else Q()
    }, Mb = function (e) {
        N();
        b[cb(c - e)][d][A] = -1;
        var a = b[c][d];
        a.transition = h ? "top" : "left .16s";
        a[h ? "top" : "left"] = -14 * e + "%";
        m(function () {
            a[h ? "top" : "left"] = "0%";
            m(function () {
                a.transition = ""
            }, 160);
            wb()
        }, 160)
    }, eb = function () {
        var a = this.id.indexOf("-prev") == -1 ? 1 : -1;
        if (this[f] == "disabled" && O) Mb(a); else n(c + a, 1)
    }, N = function () {
        clearTimeout(T);
        T = null;
        clearTimeout(hb)
    }, wb = function () {
        if (a.d) T = m(function () {
            n(c + 1, 0)
        }, a.e)
    };

    function Ib(b) {
        if (!b) b = window.event;
        var a = b.keyCode;
        (a == 37 || h && a == 38) && n(c - 1, 1);
        (a == 39 || h && a == 40) && n(c + 1, 1)
    }

    var ub = function (f) {
        var e = this;
        g = f;
        Kb();
        Sb(a.a);
        if (a.pauseOnHover && a.d) {
            g.onmouseover = function () {
                clearTimeout(bb);
                N()
            };
            g.onmouseout = function () {
                if (e.iframe && e.iframe[y][d][A] == "2147481964") return;
                bb = m(function () {
                    n(c + 1, 1)
                }, 2e3)
            }
        }
        if (a.c != "slide") g[d].overflow = "hidden";
        e.d();
        e.c();
        typeof nsVideoPlugin == "function" && kb();
        r > 1 && Eb();
        e.addNavs();
        lb(1);
        if (i.a) {
            var j = k.all && !atob;
            if (i.a.insertRule && !j) {
                if (a.c == "fade") V(); else if (a.c == "zoom") Fb(); else a.c == "kb" && Hb();
                O && Db();
                D && D.indexOf("ointer") != -1 && q(" UL {-ms-touch-action:pan-" + (h ? "x" : "y") + ";touch-action:pan-" + (h ? "x" : "y") + ";}");
                fb();
                Lb()
            } else if (k.all && !k[u]) {
                Bb();
                i.a.addRule("div.fs-icon", "display:none!important;", 0);
                i.a.addRule("#" + t + " li", "visibility:hidden;", 0);
                i.a.addRule("#" + t + " li[class*='sl-s']", "visibility:visible;", 0);
                i.a.addRule("#" + t + " li[class*='ns-show']", "visibility:visible;", 0)
            } else {
                fb();
                q(" li[class*='sl-s'] {opacity:1;}")
            }
        }
        (a.c == "zoom" || a.c == "kb") && b[0].nI && ib(b[0].nI, 0, b[0].dL);
        o(b[0], "ns-show sl-0");
        a.keyboardNav && r > 1 && x(k, "keydown", Ib)
    }, Kb = function () {
        a.c = a.transitionType;
        a.a = a.license;
        a.d = a.autoAdvance;
        a.e = a.delay;
        a.g = a.aspectRatio;
        h = a.c.indexOf("verti") != -1;
        if (a.c.indexOf("kenburns") != -1) {
            var c = a.c.split(" ");
            a.c = "kb";
            a.scale = 1.2;
            if (c[e] > 1) a.scale = parseFloat(c[1])
        }
        if (a.pauseOnHover) a.navigateByTap = 0;
        if (typeof a.m == "undefined") a.m = 1;
        if (typeof a.n == "undefined") a.n = 1;
        O = a.c == "slide" || h || a.m;
        if (a.c == "none") {
            a.c = "fade";
            a.transitionSpeed = 0
        }
        var b = a.e;
        if (b === "default") switch (a.c) {
            case"kb":
            case"zoom":
                b = 6e3;
                break;
            default:
                b = 3500
        }
        l = a.transitionSpeed;
        if (l === "default") switch (a.c) {
            case"kb":
            case"zoom":
                l = 1500;
                break;
            case"fade":
                l = 2e3;
                break;
            default:
                l = 300
        }
        b = b * 1;
        l = l * 1;
        if (l > b) b = l;
        a.e = b
    }, Zb = function (a, b) {
        if (!a || a == "default") a = b;
        return a
    }, ib = function (b) {
        var l = J(), f = J(), g = J(), h = J(), j = l < .5 ? "alternate" : "alternate-reverse";
        if (f < .3) var c = "left"; else if (f < .6) c = "center"; else c = "right";
        if (g < .45) var e = "top"; else if (g < .55) e = "center"; else e = "bottom";
        if (h < .2) var i = "linear"; else i = h < .6 ? "cubic-bezier(.94,.04,.94,.49)" : "cubic-bezier(.93,.2,.87,.52)";
        var k = c + " " + e;
        b[d].WebkitTransformOrigin = b[d].transformOrigin = k;
        if (a.c == "kb") {
            b[d].WebkitAnimationDirection = b[d].animationDirection = j;
            b[d].WebkitAnimationTimingFunction = b[d].animationTimingFunction = i
        }
    }, Cb = function (b) {
        if (M) {
            U.innerHTML = M.innerHTML = "<div>" + (b + 1) + " &#8725; " + r + "</div>";
            U[f] = b ? "" : "disabled";
            M[f] = b == r - 1 ? "disabled" : "";
            if (!a.n) U[f] = M[f] = "";
            if (w[e]) {
                var c = w[e];
                while (c--) w[c][f] = "";
                w[b][f] = "active"
            }
        }
    }, X = function (f, a, e, c) {
        (c && a < e || !c && a > e) && m(function () {
            b[a][d][A] = 1;
            o(b[a], "ns-show");
            o(b[a], "sl-c" + (c ? "l3" : "r3"));
            X(f, a + (c ? 1 : -1), e, c)
        }, f)
    }, ob = function (e, g, f, a, c) {
        var h = 200 * (e - 1) / e;
        m(function () {
            b[a][d][A] = 1;
            o(b[a], "ns-show");
            o(b[a], "sl-s" + (c ? "l" : "r") + g)
        }, 200);
        hb = m(function () {
            for (var h = c ? f : a + 1, i = c ? a : f + 1, g = h; g < i; g++) {
                var e = b[g];
                gb(e);
                C(e, "ns-show");
                e[d][A] = -1
            }
        }, l)
    }, tb = function (e, p) {
        e = cb(e);
        if (!p && (z || e == c)) return;
        N();
        b[e][d][h ? "top" : "left"] = "0";
        for (var k = 0, u = r; k < u; k++) {
            b[k][d][A] = k === e ? 1 : k === c ? 0 : -1;
            if (k != e) if (k == c && (a.c == "zoom" || a.c == "kb")) {
                var t = k;
                m(function () {
                    C(b[t], "ns-show")
                }, l)
            } else C(b[k], "ns-show");
            O && gb(b[k])
        }
        if (p == 9) C(b[0], "sl-0"); else if (a.c == "slide" || h || a.m && p) {
            !p && o(b[e], "ns-show");
            var n = !h && j.offsetWidth == g[y].offsetWidth ? "2" : "", f = e - c;
            if (!a.rewind) {
                if (!e && c == r - 1) f = 1;
                if (!c && e != 1 && e == r - 1) f = -1
            }
            if (f == 1) {
                o(b[c], "sl-cl" + n);
                o(b[e], "sl-sl" + n)
            } else if (f == -1) {
                o(b[c], "sl-cr" + n);
                o(b[e], "sl-sr" + n)
            } else if (f > 1) {
                o(b[c], "sl-cl" + n);
                X(200 / f, c + 1, e, 1);
                ob(f, n, c + 1, e, 1)
            } else if (f < -1) {
                o(b[c], "sl-cr" + n);
                b[e][d][A] = -1;
                X(200 / -f, c - 1, e, 0);
                ob(-f, n, c - 1, e, 0)
            }
        } else {
            o(b[e], "ns-show");
            (a.c == "zoom" || a.c == "kb") && b[e].nI && i.a.insertRule && ib(b[e].nI, e, b[e].dL)
        }
        Cb(e);
        var q = c;
        c = e;
        lb(4);
        !j.vR && jb(b[e]);
        if (a.d) {
            var s = Math.abs(f) > 1 ? 200 : 0;
            T = m(function () {
                tb(e + 1, 0)
            }, b[e].dL + s)
        }
        b[e].player && mb(b[e]);
        a.before && a.before(q, e, p == 9 ? false : p)
    };
    ub.prototype = {
        b: function () {
            var f = g.children, d;
            r = f[e];
            for (var c = 0, h = f[e]; c < h; c++) {
                b[c] = f[c];
                b[c].ix = c;
                d = E(b[c], "data-delay");
                b[c].dL = d ? parseInt(d) : a.e
            }
        }, c: function () {
            Qb(g);
            this.b();
            var d = 0;
            if (a.shuffle) {
                for (var i = Wb(b), c = 0, k = i[e]; c < k; c++) g.appendChild(i[c]);
                d = 1
            } else if (a.startSlideIndex) {
                for (var j = a.startSlideIndex % b[e], c = 0; c < j; c++) g.appendChild(b[c]);
                d = 1
            }
            d && this.b();
            if (a.c != "slide" && !h && a.m) {
                var f = r;
                while (f--) x(b[f], "animationend", Gb)
            }
        }, d: function () {
            if (a.g.indexOf(":") != -1) {
                var b = a.g.split(":");
                if (b[1].indexOf("%") != -1) {
                    j.vR = parseInt(b[1]);
                    j[d][F] = j.vR * k[P].clientHeight / 100 + "px";
                    g[d][F] = g[y][d][F] = "100%";
                    return
                }
                var c = b[1] / b[0];
                g[d][L] = c * 100 + "%"
            } else g[d][L] = "50.1234%";
            g[d][F] = "0"
        }, e: function (b, d) {
            var c = t + b, a = k.getElementById(c);
            if (!a) {
                a = k.createElement("div");
                a.id = c;
                a = g[y].appendChild(a)
            }
            if (b != "-pager") {
                a.onclick = d;
                Z && a[u]("touchstart", function (a) {
                    a.preventDefault();
                    a.target.click();
                    sb(a)
                }, false)
            }
            return a
        }, addNavs: function () {
            if (r > 1) {
                var h = this.e("-pager", 0);
                if (!pb(h)[e]) {
                    for (var i = [], a = 0; a < r; a++) i.push('<a rel="' + a + '">' + (a + 1) + "</a>");
                    h.innerHTML = i.join("")
                }
                w = pb(h);
                for (var a = 0; a < w[e]; a++) {
                    if (a == c) w[a][f] = "active";
                    w[a].onclick = function () {
                        var a = parseInt(E(this, "rel"));
                        a != c && n(a, 1)
                    }
                }
                U = this.e("-prev", eb);
                M = this.e("-next", eb);
                xb = this.e("-pause-play", Q)
            }
            var g = j.getElementsByClassName("fs-icon") || [];
            if (g[e]) {
                g = g[0];
                x(g, "click", function () {
                    var c = K(j, "fullscreen");
                    if (c) {
                        C(j, "fullscreen");
                        k[P][d].overflow = "auto"
                    } else {
                        o(j, "fullscreen");
                        k[P][d].overflow = "hidden"
                    }
                    typeof fsIconClick == "function" && fsIconClick(c, j);
                    c = !c;
                    for (var a, f = 0; f < b[e]; f++) {
                        a = b[f];
                        if (a.nIs) if (a.nI.tagName == "IMG") a.nI.src = a.nIs[c ? 1 : 0]; else a.nI[d][R] = "url('" + a.nIs[c ? 1 : 0] + "')"
                    }
                });
                x(k, "keydown", function (a) {
                    a.keyCode == 27 && K(j, "fullscreen") && g.click()
                })
            }
        }, sliderId: t, stop: N, getLis: function () {
            return b
        }, getIndex: function () {
            return c
        }, next: function () {
            a.d && n(c + 1, 0)
        }
    };
    var W = function () {
        j = k.getElementById(t);
        if (j) {
            var a = db(j, "ul");
            if (a[e]) p = new ub(a[0])
        }
    }, Rb = function (c) {
        var a = 0;

        function b() {
            if (a) return;
            a = 1;
            m(c, 4)
        }

        if (k[u]) k[u]("DOMContentLoaded", b, false); else x(window, "load", b)
    };
    if (!a.initSliderByCallingInitFunc) if (k.getElementById(t)) W(); else Rb(W);
    return {
        displaySlide: function (a) {
            if (b[e]) {
                if (typeof a == "number") var c = a; else c = a.ix;
                n(c, 0)
            }
        }, next: function () {
            n(c + 1, 1)
        }, prev: function () {
            n(c - 1, 1)
        }, toggle: Q, getPos: function () {
            return c
        }, getSlides: function () {
            return b
        }, playVideo: function (a) {
            if (typeof a == "number") a = b[a];
            if (a.player) {
                n(a.ix, 0);
                p.playVideo(a.player)
            }
        }, init: function (a) {
            !p && W();
            typeof a != "undefined" && this.displaySlide(a)
        }
    }
}

// sudokuJS v0.4.4
// https://github.com/pocketjoso/sudokuJS
// Author: Jonas Ohlsson
// License: MIT

(function (window, $, undefined) {
	'use strict';
	/*TODO:
		--possible additions--
		toggle edit candidates
		undo/redo
	*/

	/**
	* Define a jQuery plugin
	*/
    $.fn.sudokuJS = function(opts) {

		/*
		 * constants
		 *-----------*/

		var DIFFICULTY_EASY = "easy";
		var DIFFICULTY_MEDIUM = "medium";
		var DIFFICULTY_HARD = "hard";
		var DIFFICULTY_VERY_HARD = "diabolical";

		var SOLVE_MODE_STEP = "step";
		var SOLVE_MODE_ALL = "all";

		var DIFFICULTIES = [
			DIFFICULTY_EASY,
			DIFFICULTY_MEDIUM,
			DIFFICULTY_HARD,
			DIFFICULTY_VERY_HARD
		];

		/*
		 * variables
		 *-----------*/
		opts = opts || {};
		var solveMode = SOLVE_MODE_STEP,
				difficulty = "unknown",
				candidatesShowing = false,
				editingCandidates = false,
				boardFinished = false,
				boardError = false,
				onlyUpdatedCandidates = false,
				gradingMode = false, //solving without updating UI
				generatingMode = false, //silence board unsolvable errors
				invalidCandidates = [], //used by the generateBoard function


		/*
		the score reflects how much increased difficulty the board gets by having the pattern rather than an already solved cell
		*/
			strategies = [
				{title: "openSingles", fn:	openSingles, score : 0.1	},
				 //harder for human to spot
				{title: "singleCandidate", fn:	singleCandidate, score : 9	},
				{title: "visualElimination", fn:	visualElimination, score : 8	},
				//only eliminates one candidate, should have lower score?
				{title: "nakedPair", fn:	nakedPair, score : 50	},
				{title: "pointingElimination", fn:	pointingElimination, score : 80	},
				//harder for human to spot
				{title: "hiddenPair", fn:	hiddenPair, score :	90	},
				{title: "nakedTriplet", fn:	nakedTriplet, score :	100 },
				//never gets used unless above strats are turned off?
				{title: "hiddenTriplet", fn:	hiddenTriplet, score :	140	},
				//never gets used unless above strats are turned off?
				{title: "nakedQuad", fn:	nakedQuad, score :	150 },
				//never gets used unless above strats are turned off?
				{title: "hiddenQuad", fn:	hiddenQuad, score :	280	}
			],


		//nr of times each strategy has been used for solving this board - used to calculate difficulty score
			usedStrategies = [],

		/*board variable gets enhanced into list of objects on init:
			,{
				val: null
				,candidates: [
					]
			}
		*/
			board = [],
			boardSize,
			boardNumbers, // array of 1-9 by default, generated in initBoard

		//indexes of cells in each house - generated on the fly based on boardSize
			houses = [
				//hor. rows
				[],
				//vert. rows
				[],
				//boxes
				[]
			];




		/*
		 * selectors
		 *-----------*/
		 var $board = $(this),
			$boardInputs, //created
			$boardInputCandidates; //created



		 /*
		 * methods
		 *-----------*/
		 //shortcut for logging..
		function log(msg){
			if(window.console && console.log)
			 console.log(msg);
		}


		//array contains function
		var contains = function(a, obj) {
			for (var i = 0; i < a.length; i++) {
				if (a[i] === obj) {
					return true;
				}
			}
			return false;
		};

		var uniqueArray = function(a) {
			var temp = {};
			for (var i = 0; i < a.length; i++)
				temp[a[i]] = true;
			var r = [];
			for (var k in temp)
				r.push(k);
			return r;
		};



		/* calcBoardDifficulty
		 * --------------
		 *  TYPE: solely based on strategies required to solve board (i.e. single count per strategy)
		 *  SCORE: distinguish between boards of same difficulty.. based on point system. Needs work.
		 * -----------------------------------------------------------------*/
		var calcBoardDifficulty = function(usedStrategies){
			var boardDiff = {};
			if(usedStrategies.length < 3)
				boardDiff.level = DIFFICULTY_EASY;
			else if(usedStrategies.length < 4)
				boardDiff.level = DIFFICULTY_MEDIUM;
			else
				boardDiff.level = DIFFICULTY_HARD;

			var totalScore = 0;
			for(var i=0; i < strategies.length; i++){
				var freq = usedStrategies[i];
				if(!freq)
					continue; //undefined or 0, won't effect score
				var stratObj = strategies[i];
				totalScore += freq * stratObj.score;
			}
			boardDiff.score = totalScore;
			//log("totalScore: "+totalScore);

			if(totalScore > 750)
			// if(totalScore > 2200)
				boardDiff.level = DIFFICULTY_VERY_HARD;

			return boardDiff;
		};


		/* isBoardFinished
		 * -----------------------------------------------------------------*/
		var isBoardFinished = function(){
			for (var i=0; i < boardSize*boardSize; i++){
				if(board[i].val === null)
					return false;
			}
			return true;
		};


		/* generateHouseIndexList
		 * -----------------------------------------------------------------*/
		var generateHouseIndexList = function(){
        // reset houses
        houses = [
				//hor. rows
				[],
				//vert. rows
				[],
				//boxes
				[]
			]
			var boxSideSize = Math.sqrt(boardSize);

			for(var i=0; i < boardSize; i++){
				var hrow = []; //horisontal row
				var vrow = []; //vertical row
				var box = [];
				for(var j=0; j < boardSize; j++){
					hrow.push(boardSize*i + j);
					vrow.push(boardSize*j + i);

					if(j < boxSideSize){
						for(var k=0; k < boxSideSize; k++){
							//0, 0,0, 27, 27,27, 54, 54, 54 for a standard sudoku
							var a = Math.floor(i/boxSideSize) * boardSize * boxSideSize;
							//[0-2] for a standard sudoku
							var b = (i%boxSideSize) * boxSideSize;
							var boxStartIndex = a +b; //0 3 6 27 30 33 54 57 60

								//every boxSideSize box, skip boardSize num rows to next box (on new horizontal row)
								//Math.floor(i/boxSideSize)*boardSize*2
								//skip across horizontally to next box
								//+ i*boxSideSize;


							box.push(boxStartIndex + boardSize*j + k);
						}
					}
				}
				houses[0].push(hrow);
				houses[1].push(vrow);
				houses[2].push(box);
			}
		};


		/* initBoard
		 * --------------
		 *  inits board, variables.
		 * -----------------------------------------------------------------*/
		var initBoard = function(opts){
			var alreadyEnhanced = (board[0] !== null && typeof board[0] === "object");
			var nullCandidateList = [];
      boardNumbers = [];
			boardSize = (!board.length && opts.boardSize) || Math.sqrt(board.length) || 9;
			$board.attr("data-board-size", boardSize);
			if(boardSize % 1 !== 0 || Math.sqrt(boardSize) % 1 !== 0) {
				log("invalid boardSize: "+boardSize);
				if(typeof opts.boardErrorFn === "function")
					opts.boardErrorFn({msg: "invalid board size"});
				return;
			}
			for (var i=0; i < boardSize; i++){
				boardNumbers.push(i+1);
				nullCandidateList.push(null);
			}
			generateHouseIndexList();

			if(!alreadyEnhanced){
				//enhance board to handle candidates, and possibly other params
				for(var j=0; j < boardSize*boardSize ; j++){
					var cellVal = (typeof board[j] === "undefined") ? null : board[j];
					var candidates = cellVal === null ? boardNumbers.slice() : nullCandidateList.slice();
					board[j] = {
						val: cellVal,
						candidates: candidates
						//title: "" possibl add in 'A1. B1...etc
					};
				}
			}
		};


		/* renderBoard
		 * --------------
		 *  dynamically renders the board on the screen (into the DOM), based on board variable
		 * -----------------------------------------------------------------*/
		var renderBoard = function(){
			//log("renderBoard");
			//log(board);
			var htmlString = "";
			for(var i=0; i < boardSize*boardSize; i++){
				htmlString += renderBoardCell(board[i], i);

				if((i+1) % boardSize === 0) {
					htmlString += "<br>";
				}
			}
			//log(htmlString);
			$board.append(htmlString);

			//save important board elements
			$boardInputs = $board.find("input");
			$boardInputCandidates = $board.find(".candidates");
		};

		/* renderBoardCell
		 * -----------------------------------------------------------------*/
		var renderBoardCell = function(boardCell, id){
			var val = (boardCell.val === null) ? "" : boardCell.val;
			var candidates = boardCell.candidates || [];
			var candidatesString = buildCandidatesString(candidates);
			var maxlength = (boardSize < 10) ? " maxlength='1'" : "";
			return "<div class='sudoku-board-cell'>" +
						//want to use type=number, but then have to prevent chrome scrolling and up down key behaviors..
						"<input type='text' pattern='\\d*' novalidate id='input-"+id+"' value='"+val+"'"+maxlength+">" +
						"<div id='input-"+id+"-candidates' class='candidates'>" + candidatesString + "</div>" +
					"</div>";
		};


		/* buildCandidatesString
		 * -----------------------------------------------------------------*/
		var buildCandidatesString = function(candidatesList){
			var s="";
			for(var i=1; i<boardSize+1; i++){
				if(contains(candidatesList,i))
					s+= "<div>"+i+"</div> ";
				else
					s+= "<div>&nbsp;</div> ";
			}
			return s;
		};


		/* updateUI
		 * --------------
		 *  updates the UI
		 * -----------------------------------------------------------------
		var updateUI = function(opts){
			var opts = opts || {};
			var paintNew = (typeof opts.paintNew !== "undefined") ? opts.paintNew : true;
			updateUIBoard(paintNew);
		}*/

		/* updateUIBoard -
		 * --------------
		 *  updates the board with our latest values
		 * -----------------------------------------------------------------*/
		 var updateUIBoard = function(paintNew){
			//log("re painting every input on board..");
			$boardInputs
				.removeClass("highlight-val")
				.each(function(i,v){
					var $input = $(this);
					var newVal = board[i].val;
					//if(newVal && parseInt($input.val()) !== newVal) {
						$input.val(newVal);
						if(paintNew)
							$input.addClass("highlight-val");
					//}
					var $candidates = $input.siblings(".candidates");
					$candidates.html(buildCandidatesString(board[i].candidates));

				});
		};


		/* updateUIBoardCell -
		 * --------------
		 *  updates ONE cell on the board with our latest values
		 * -----------------------------------------------------------------*/
		 var updateUIBoardCell = function(cellIndex, opts){
			opts = opts || {};
			//log("updateUIBoardCell: "+cellIndex);
			//if(!(opts.mode && opts.mode === "only-candidates")){
				var newVal = board[cellIndex].val;

				//$boardInputs.removeClass("highlight-val");

				//shouldn't always add hightlight-val class
				$("#input-"+cellIndex)
					.val(newVal)
					.addClass("highlight-val");
			//}
			$("#input-"+cellIndex+"-candidates")
				.html(buildCandidatesString(board[cellIndex].candidates));
		};

		/* uIBoardHighlightRemoveCandidate
		 * --------------
		 *  highlight candidate in cell that is about to be removed
		 * -----------------------------------------------------------------*/
		var uIBoardHighlightRemoveCandidate = function(cellIndex, digit){
			$("#input-"+cellIndex+"-candidates div:nth-of-type("+digit+")").addClass("candidate--to-remove");
		};

		/* uIBoardHighlightCandidate -
		 * --------------
		 *  highight candidate in cell that helps eliminate another candidate
		 * -----------------------------------------------------------------*/
		var uIBoardHighlightCandidate = function(cellIndex, digit){
			$("#input-"+cellIndex+"-candidates div:nth-of-type("+digit+")").addClass("candidate--highlight");
		};


		/* removeCandidatesFromCell
		-----------------------------------------------------------------*/
		var removeCandidatesFromCell = function(cell, candidates){
			var boardCell = board[cell];
			var c = boardCell.candidates;
			var cellUpdated = false;
			for(var i=0; i < candidates.length; i++){
				//-1 because candidate '1' is at index 0 etc.
				if(c[candidates[i]-1] !== null) {
					c[candidates[i]-1] = null; //writes to board variable
					cellUpdated = true;
				}
			}
			if(cellUpdated && solveMode === SOLVE_MODE_STEP)
				updateUIBoardCell(cell, {mode: "only-candidates"});
		};


		/* removeCandidatesFromCells
		 * ---returns list of cells where any candidats where removed
		-----------------------------------------------------------------*/
		var removeCandidatesFromCells = function(cells, candidates){
			//log("removeCandidatesFromCells");
			var cellsUpdated = [];
			for (var i=0; i < cells.length; i++){
				var c = board[cells[i]].candidates;

				for(var j=0; j < candidates.length; j++){
					var candidate = candidates[j];
					//-1 because candidate '1' is at index 0 etc.
					if(c[candidate-1] !== null) {
						c[candidate-1] = null; //NOTE: also deletes them from board variable
						cellsUpdated.push(cells[i]); //will push same cell multiple times

						if(solveMode===SOLVE_MODE_STEP){
							//highlight candidate as to be removed on board
							uIBoardHighlightRemoveCandidate(cells[i],candidate);
						}
					}
				}
			}
			return cellsUpdated;
		};

		var highLightCandidatesOnCells = function(candidates, cells){
			for(var i=0; i < cells.length; i++){
				var cellCandidates = board[cells[i]].candidates;

				for(var j=0; j < cellCandidates.length; j++){
					if(contains(candidates, cellCandidates[j]))
						uIBoardHighlightCandidate(cells[i],cellCandidates[j]);
				}

			}
		};


		var resetBoardVariables = function() {
			boardFinished = false;
			boardError = false;
			onlyUpdatedCandidates = false;
			usedStrategies = [];
			gradingMode = false;
		};


		/* clearBoard
		-----------------------------------------------------------------*/
		var clearBoard = function(){
			resetBoardVariables();

			//reset board variable
			var cands = boardNumbers.slice(0);
			for(var i=0; i <boardSize*boardSize;i++){
				board[i] = {
					val: null,
					candidates: cands.slice()
				};
			}

			//reset UI
			$boardInputs
				.removeClass("highlight-val")
				.val("");

			updateUIBoard(false);
		};

		var getNullCandidatesList = function() {
			var l = [];
			for (var i=0; i < boardSize; i++){
				l.push(null);
			}
			return l;
		};


		/* resetCandidates
		-----------------------------------------------------------------*/
		var resetCandidates = function(updateUI){
			var resetCandidatesList = boardNumbers.slice(0);
			for(var i=0; i <boardSize*boardSize;i++){
				if(board[i].val === null){
					board[i].candidates = resetCandidatesList.slice(); //otherwise same list (not reference!) on every cell
					if(updateUI !== false)
						$("#input-"+i+"-candidates").html(buildCandidatesString(resetCandidatesList));
				} else if(updateUI !== false) {
						$("#input-"+i+"-candidates").html("");
				}
			}
		};

		/* setBoardCell - does not update UI
		-----------------------------------------------------------------*/
		var setBoardCell = function(cellIndex, val){
			var boardCell = board[cellIndex];
			//update val
			boardCell.val = val;
			if(val !== null)
				boardCell.candidates = getNullCandidatesList();
		};

		/* indexInHouse
		 * --------------
		 *  returns index (0-9) for digit in house, false if not in house
		 *  NOTE: careful evaluating returned index is IN row, as 0==false.
		 * -----------------------------------------------------------------*/
		 var indexInHouse = function(digit,house){
			for(var i=0; i < boardSize; i++){
				if(board[house[i]].val===digit)
					return i;
			}
			//not in house
			return false;
		};



		 /* housesWithCell
		 * --------------
		 *  returns houses that a cell belongs to
		 * -----------------------------------------------------------------*/
		 var housesWithCell = function(cellIndex){
			var boxSideSize = Math.sqrt(boardSize);
			var houses = [];
			//horisontal row
			var hrow = Math.floor(cellIndex/boardSize);
			houses.push(hrow);
			//vertical row
			var vrow = Math.floor(cellIndex%boardSize);
			houses.push(vrow);
			//box
			var box = (Math.floor(hrow/boxSideSize)*boxSideSize) + Math.floor(vrow/boxSideSize);
			houses.push(box);

			return houses;
		};


		/* numbersLeft
		 * --------------
		 *  returns unused numbers in a house
		 * -----------------------------------------------------------------*/
		 var numbersLeft = function(house){
			var numbers = boardNumbers.slice();
			for(var i=0; i < house.length; i++){
				for(var j=0; j < numbers.length; j++){
					//remove all numbers that are already being used
					if(numbers[j] === board[house[i]].val)
						numbers.splice(j,1);
				}
			}
			//return remaining numbers
			return numbers;
		};


		 /* numbersTaken
		 * --------------
		 *  returns used numbers in a house
		 * -----------------------------------------------------------------*/
		 var numbersTaken = function(house){
			var numbers = [];
			for(var i=0; i < house.length; i++){
				var n = board[house[i]].val;
				if(n !== null)
					numbers.push(n);
			}
			//return remaining numbers
			return numbers;
		};


		 /* candidatesLeft
		 * --------------
		 *  returns list of candidates for cell (with null's removed)
		 * -----------------------------------------------------------------*/
		 var candidatesLeft = function(cellIndex){
			var t = [];
			var candidates = board[cellIndex].candidates;
			for (var i=0; i < candidates.length; i++){
				if (candidates[i] !== null)
					t.push(candidates[i]);
			}
			return t;
		};


		 /* cellsForCandidate
		 * --------------
		 *  returns list of possible cells (cellIndex) for candidate (in a house)
		 * -----------------------------------------------------------------*/
		 var cellsForCandidate = function(candidate,house){
			var t = [];
			for(var i=0; i < house.length; i++){
				var cell = board[house[i]];
				var candidates = cell.candidates;
				if(contains(candidates, candidate))
					t.push(house[i]);
			}
			return t;
		};



		/* openSingles
		 * --------------
		 *  checks for houses with just one empty cell - fills it in board variable if so
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function openSingles(){
			//log("looking for openSingles");

			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var i=0; i < hlength; i++){

				//for each such house
				var housesCompleted = 0; //if goes up to 9, sudoku is finished

				for(var j=0; j < boardSize; j++){
					var emptyCells = [];

					// for each cell..
					for (var k=0; k < boardSize; k++){

						var boardIndex = houses[i][j][k];
						if(board[boardIndex].val === null) {
							emptyCells.push({house: houses[i][j], cell: boardIndex});
							if(emptyCells.length > 1) {
								//log("more than one empty cell, house area :["+i+"]["+j+"]");
								break;
							}
						}
					}
					//one empty cell found
					if(emptyCells.length === 1){
						var emptyCell = emptyCells[0];
						//grab number to fill in in cell
						var val = numbersLeft(emptyCell.house);
						if(val.length > 1) {
							//log("openSingles found more than one answer for: "+emptyCell.cell+" .. board incorrect!");
							boardError = true; //to force solve all loop to stop
							return -1; //error
						}

						//log("fill in single empty cell " + emptyCell.cell+", val: "+val);

						setBoardCell(emptyCell.cell, val[0]); //does not update UI
						if(solveMode===SOLVE_MODE_STEP)
							uIBoardHighlightCandidate(emptyCell.cell, val[0]);

						return [emptyCell.cell];
					}
					//no empty ells..
					if(emptyCells.length === 0) {
						housesCompleted++;
						//log(i+" "+j+": "+housesCompleted);
						if(housesCompleted === boardSize){
							boardFinished = true;
							return -1; //special case, done
						}
					}
				}
			}
			return false;
		}


		/* visualEliminationOfCandidates
		 * --------------
		 * ALWAYS returns false
		 * -- special compared to other strats: doesn't step - updates whole board,
		 in one go. Since it also only updates candidates, we can skip straight to next strat, since we know that neither this one nor the one(s) before (that only look at actual numbers on board), will find anything new.
		 * -----------------------------------------------------------------*/
		function visualEliminationOfCandidates(){
			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var i=0; i < hlength; i++){

				//for each such house
				for(var j=0; j < boardSize; j++){
					var house = houses[i][j];
					var candidatesToRemove = numbersTaken(house);
					//log(candidatesToRemove);

					// for each cell..
					for (var k=0; k < boardSize; k++){
						var cell = house[k];
						var candidates = board[cell].candidates;
						removeCandidatesFromCell(cell, candidatesToRemove);
					}
				}
			}
			return false;
		}


		/* visualElimination
		 * --------------
		 * Looks for houses where a digit only appears in one slot
		 * -meaning we know the digit goes in that slot.
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function visualElimination(){
			//log("visualElimination");
			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var i=0; i < hlength; i++){

				//for each such house
				for(var j=0; j < boardSize; j++){
					var house = houses[i][j];
					var digits = numbersLeft(house);

					//for each digit left for that house
					for (var k=0; k < digits.length; k++){
						var digit = digits[k];
						var possibleCells = [];

						//for each cell in house
						for(var l=0; l < boardSize; l++){
							var cell = house[l];
							var boardCell = board[cell];
							//if the digit only appears as a candidate in one slot, that's where it has to go
							if (contains(boardCell.candidates, digit)){
								possibleCells.push(cell);
								if(possibleCells.length > 1)
									break; //no we can't tell anything in this case
							}
						}

						if(possibleCells.length === 1){
							var cellIndex = possibleCells[0];

							//log("only slot where "+digit+" appears in house. ");


							setBoardCell(cellIndex, digit); //does not update UI

							if(solveMode===SOLVE_MODE_STEP)
								uIBoardHighlightCandidate(cellIndex, digit);

							onlyUpdatedCandidates = false;
							return [cellIndex]; //one step at the time
						}
					}

				}
			}
			return false;
		}


		/* singleCandidate
		 * --------------
		 * Looks for cells with only one candidate
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function singleCandidate(){
			//before we start with candidate strategies, we need to update candidates from last round:
			visualEliminationOfCandidates(); //TODO: a bit hackyy, should probably not be here

			//for each cell

			for(var i=0; i < board.length; i++){
				var cell = board[i];
				var candidates = cell.candidates;

				//for each candidate for that cell
				var possibleCandidates = [];
				for (var j=0; j < candidates.length; j++){
					if (candidates[j] !== null)
						possibleCandidates.push(candidates[j]);
					if(possibleCandidates.length >1)
						break; //can't find answer here
				}
				if(possibleCandidates.length === 1){
					var digit = possibleCandidates[0];

					//log("only one candidate in cell: "+digit+" in house. ");


					setBoardCell(i, digit); //does not update UI
					if(solveMode===SOLVE_MODE_STEP)
						uIBoardHighlightCandidate(i, digit);

					onlyUpdatedCandidates = false;
					return [i]; //one step at the time
				}
			}
			return false;
		}


		/* pointingElimination
		 * --------------
		 * if candidates of a type (digit) in a box only appar on one row, all other
		 * same type candidates can be removed from that row
		 ------------OR--------------
		 * same as above, but row instead of box, and vice versa.
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function pointingElimination(){
			var effectedCells = false;

			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var a=0; a < hlength; a++){
				var houseType = a;

				for(var i=0; i < boardSize; i++){
					var house = houses[houseType][i];

					//for each digit left for this house
					var digits = numbersLeft(house);
					for(var j=0; j< digits.length; j++){
						var digit = digits[j];
						//check if digit (candidate) only appears in one row (if checking boxes),
						//, or only in one box (if checking rows)

						var sameAltHouse = true; //row if checking box, and vice versa
						var houseId = -1;
						//when point checking from box, need to compare both kind of rows
						//that box cells are also part of, so use houseTwoId as well
						var houseTwoId = -1;
						var sameAltTwoHouse = true;
						var cellsWithCandidate = [];
						//var cellDistance = null;

						//for each cell
						for(var k=0; k < house.length; k++){
							var cell = house[k];

							if (contains(board[cell].candidates,digit)) {
								var cellHouses = housesWithCell(cell);
								var newHouseId = (houseType ===2) ? cellHouses[0] : cellHouses[2];
								var newHouseTwoId = (houseType ===2) ? cellHouses[1] : cellHouses[2];

								//if(cellsWithCandidate.length > 0){ //why thice the same?


									if(cellsWithCandidate.length > 0){
										if(newHouseId !== houseId){
											sameAltHouse = false;
										}
										if(houseTwoId !== newHouseTwoId){
											sameAltTwoHouse = false;
										}
										if(sameAltHouse === false && sameAltTwoHouse === false){
											break; //not in same altHouse (box/row)
										}

									}
								//}
								houseId = newHouseId;
								houseTwoId = newHouseTwoId;
								cellsWithCandidate.push(cell);
							}
						}
						if((sameAltHouse === true || sameAltTwoHouse === true ) && cellsWithCandidate.length > 0){
							//log("sameAltHouse..");
							//we still need to check that this actually eliminates something, i.e. these possible cells can't be only in house

							//first figure out what kind of house we are talking about..
							var h = housesWithCell(cellsWithCandidate[0]);
							var altHouseType = 2;
							if(houseType ===2){
								if(sameAltHouse)
									altHouseType = 0;
								else
									altHouseType = 1;
							}


							var altHouse = houses[altHouseType][h[altHouseType]];
							var cellsEffected = [];

							//log("houses["+houseType+"]["+h[houseType]+"].length: "+houses[houseType][h[houseType]].length);

							//need to remove cellsWithCandidate - from cells to remove from
							for (var x=0; x< altHouse.length; x++){
								if(!contains(cellsWithCandidate, altHouse[x])) {
									cellsEffected.push(altHouse[x]);
								}
							}
							//log("houses["+houseType+"]["+h[houseType]+"].length: "+houses[houseType][h[houseType]].length);

							//remove all candidates on altHouse, outside of house
							var cellsUpdated = removeCandidatesFromCells(cellsEffected, [digit]);

							if(cellsUpdated.length > 0){
								// log("pointing: digit "+digit+", from houseType: "+houseType);

								if(solveMode === SOLVE_MODE_STEP)
									highLightCandidatesOnCells([digit], cellsWithCandidate);


								onlyUpdatedCandidates = true;

								//return cellsUpdated.concat(cellsWithCandidate);
								//only return cells where we actually update candidates
								return cellsUpdated;
							}
						}
					}
				}
			}
			return false;
		}



		/* nakedCandidates
		 * --------------
		 * looks for n nr of cells in house, which together has exactly n unique candidates.
			this means these candidates will go into these cells, and can be removed elsewhere in house.
		 *
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function nakedCandidates(n){

			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var i=0; i < hlength; i++){

				//for each such house
				for(var j=0; j < boardSize; j++){
					//log("["+i+"]"+"["+j+"]");
					var house = houses[i][j];
					if(numbersLeft(house).length <= n) //can't eliminate any candidates
						continue;
					var combineInfo = []; //{cell: x, candidates: []}, {} ..
					//combinedCandidates,cellsWithCandidate;
					var minIndexes = [-1];
					//log("--------------");
					//log("house: ["+i+"]["+j+"]");


					//checks every combo of n candidates in house, returns pattern, or false
					var result = checkCombinedCandidates(house, 0);
					if(result !== false)
						return result;
				}
			}
			return false; //pattern not found

			function checkCombinedCandidates(house, startIndex){
				//log("startIndex: "+startIndex);
				for(var i=Math.max(startIndex, minIndexes[startIndex]); i < boardSize-n+startIndex; i++){
					//log(i);

					//never check this cell again, in this loop
					minIndexes[startIndex] = i+1;
					//or in a this loop deeper down in recursions
					minIndexes[startIndex+1] = i+1;

					//if(startIndex === 0){
					//	combinedCandidates = [];
					//	cellsWithCandidate = []; //reset
					//}
					var cell = house[i];
					var cellCandidates = candidatesLeft(cell);

					if(cellCandidates.length === 0 || cellCandidates.length > n)
						continue;


					//try adding this cell and it's cellCandidates,
					//but first need to check that that doesn't make (unique) amount of
					//candidates in combineInfo > n

					//if this is the first item we add, we don't need this check (above one is enough)
					if(combineInfo.length > 0){
						var temp = cellCandidates.slice();
						for(var a =0; a < combineInfo.length; a++){
							var candidates = combineInfo[a].candidates;
							for(var b=0; b < candidates.length; b++){
								if(!contains(temp,candidates[b]))
									temp.push(candidates[b]);
							}
						}
						if(temp.length > n){
							continue; //combined candidates spread over > n cells, won't work
						}

					}

					combineInfo.push({cell: cell, candidates: cellCandidates});


					if(startIndex < n-1) {
						//still need to go deeper into combo
						var r = checkCombinedCandidates(house, startIndex+1);
						//when we come back, check if that's because we found answer.
						//if so, return with it, otherwise, keep looking
						if (r !== false)
							return r;
					}

					//check if we match our pattern
					//if we have managed to combine n-1 cells,
					//(we already know that combinedCandidates is > n)
					//then we found a match!
					if(combineInfo.length === n){
						//now we need to check whether this eliminates any candidates


						//now we need to check whether this eliminates any candidates

						var cellsWithCandidates = [];
						var combinedCandidates = []; //not unique either..
						for(var x=0; x< combineInfo.length;x++){
							cellsWithCandidates.push(combineInfo[x].cell);
							combinedCandidates = combinedCandidates.concat(combineInfo[x].candidates);
						}



						//get all cells in house EXCEPT cellsWithCandidates
						var cellsEffected = [];
						for (var y=0; y< boardSize; y++){
							if(!contains(cellsWithCandidates, house[y])) {
								cellsEffected.push(house[y]);
							}
						}

						//remove all candidates on house, except the on cells matched in pattern
						var cellsUpdated = removeCandidatesFromCells(cellsEffected, combinedCandidates);

						//if it does remove candidates, we're succeded!
						if(cellsUpdated.length > 0){
							//log("nakedCandidates: ");
							//log(combinedCandidates);

							if(solveMode === SOLVE_MODE_STEP)
								highLightCandidatesOnCells(combinedCandidates, cellsWithCandidates);

							onlyUpdatedCandidates = true;
							//return cellsWithCandidates.concat(cellsUpdated);

							//return cells we actually update, duplicates removed
							return uniqueArray(cellsUpdated);
						}
					}
				}
				if(startIndex > 0) {
					//if we added a value to our combo check, but failed to find pattern, we now need drop that value and go back up in chain and continue to check..
					if(combineInfo.length > startIndex-1){
						//log("nakedCans: need to pop last added values..");
						combineInfo.pop();
					}
				}
				return false;
			}
		}


		/* nakedPair
		 * --------------
		 * see nakedCandidateElimination for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function nakedPair(){
			return nakedCandidates(2);
		}

		/* nakedTriplet
		 * --------------
		 * see nakedCandidateElimination for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function nakedTriplet(){
			return nakedCandidates(3);
		}

		/* nakedQuad
		 * --------------
		 * see nakedCandidateElimination for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function nakedQuad(){
			return nakedCandidates(4);
		}




		/* hiddenLockedCandidates
		 * --------------
		 * looks for n nr of cells in house, which together has exactly n unique candidates.
			this means these candidates will go into these cells, and can be removed elsewhere in house.
		 *
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function hiddenLockedCandidates(n){

			//for each type of house..(hor row / vert row / box)
			var hlength = houses.length;
			for(var i=0; i < hlength; i++){

				//for each such house
				for(var j=0; j < boardSize; j++){
					var house = houses[i][j];
					if(numbersLeft(house).length <= n) //can't eliminate any candidates
						continue;
					var combineInfo = []; //{candate: x, cellsWithCandidate: []}, {} ..
					//combinedCandidates,cellsWithCandidate;
					var minIndexes = [-1];
					//log("--------------");
					//log("house: ["+i+"]["+j+"]");

					//checks every combo of n candidates in house, returns pattern, or false
					var result = checkLockedCandidates(house, 0);
					if(result !== false)
						return result;
				}
			}
			return false; //pattern not found

			function checkLockedCandidates(house, startIndex){
				//log("startIndex: "+startIndex);
				for(var i=Math.max(startIndex, minIndexes[startIndex]); i <= boardSize-n+startIndex; i++){

					//log(i);
					//never check this cell again, in this loop
					minIndexes[startIndex] = i+1;
					//or in a this loop deeper down in recursions
					minIndexes[startIndex+1] = i+1;

					var candidate = i+1;
					//log(candidate);


					var possibleCells = cellsForCandidate(candidate,house);

					if(possibleCells.length === 0 || possibleCells.length > n)
						continue;

					//try adding this candidate and it's possible cells,
					//but first need to check that that doesn't make (unique) amount of
					//possible cells in combineInfo > n
					if(combineInfo.length > 0){
						var temp = possibleCells.slice();
						for(var a =0; a < combineInfo.length; a++){
							var cells = combineInfo[a].cells;
							for(var b=0; b < cells.length; b++){
								if(!contains(temp,cells[b]))
									temp.push(cells[b]);
							}
						}
						if(temp.length > n){
							//log("combined candidates spread over > n cells");
							continue; //combined candidates spread over > n cells, won't work
						}

					}

					combineInfo.push({candidate: candidate, cells: possibleCells});

					if(startIndex < n-1) {
						//still need to go deeper into combo
						var r = checkLockedCandidates(house, startIndex+1);
						//when we come back, check if that's because we found answer.
						//if so, return with it, otherwise, keep looking
						if (r !== false)
							return r;
					}
					//check if we match our pattern
					//if we have managed to combine n-1 candidates,
					//(we already know that cellsWithCandidates is <= n)
					//then we found a match!
					if(combineInfo.length === n){

						//now we need to check whether this eliminates any candidates

						var combinedCandidates = []; //not unique now...
						var cellsWithCandidates = []; //not unique either..
						for(var x=0; x< combineInfo.length;x++){
							combinedCandidates.push(combineInfo[x].candidate);
							cellsWithCandidates = cellsWithCandidates.concat(combineInfo[x].cells);
						}


						var candidatesToRemove = [];
						for(var c=0; c<boardSize; c++){
							if(!contains(combinedCandidates, c+1))
								candidatesToRemove.push(c+1);
						}
						//log("candidates to remove:")
						//log(candidatesToRemove);

						//remove all other candidates from cellsWithCandidates
						var cellsUpdated = removeCandidatesFromCells(cellsWithCandidates, candidatesToRemove);

						//if it does remove candidates, we're succeded!
						if(cellsUpdated.length > 0){
							//log("hiddenLockedCandidates: ");
							//log(combinedCandidates);

							if(solveMode === SOLVE_MODE_STEP)
								highLightCandidatesOnCells(combinedCandidates, cellsWithCandidates);

							onlyUpdatedCandidates = true;

							//filter out duplicates
							return uniqueArray(cellsWithCandidates);
						}
					}
				}
				if(startIndex > 0) {
					//if we added a value to our combo check, but failed to find pattern, we now need drop that value and go back up in chain and continu to check..
					if(combineInfo.length > startIndex-1){
						combineInfo.pop();
					}
				}
				return false;
			}
		}



		/* hiddenPair
		 * --------------
		 * see hiddenLockedCandidates for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function hiddenPair(){
			return hiddenLockedCandidates(2);
		}


		/* hiddenTriplet
		 * --------------
		 * see hiddenLockedCandidates for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function hiddenTriplet(){
			return hiddenLockedCandidates(3);
		}

		/* hiddenQuad
		 * --------------
		 * see hiddenLockedCandidates for explanation
		 * -- returns effectedCells - the updated cell(s), or false
		 * -----------------------------------------------------------------*/
		function hiddenQuad(){
			return hiddenLockedCandidates(4);
		}




		/* solveFn
		 * --------------
		 *  applies strategy i (where i represents strategy, ordered by simplicity
		 *  -if strategy fails (too advanced a sudoku) AND an more advanced strategy exists:
		 *		calls itself with i++
		 *  returns canContinue true|false - only relevant for solveMode "all"
		 * -----------------------------------------------------------------*/
		var nrSolveLoops = 0;
		var effectedCells = false;

		var solveFn = function(i){
			//log(i);
			if(boardFinished) {
				if(!gradingMode) {
					updateUIBoard(false);
					//log("finished!");
					//log("usedStrats:")
					//log(usedStrategies);

					//callback
					if(typeof opts.boardFinishedFn === "function"){
						opts.boardFinishedFn({
							difficultyInfo: calcBoardDifficulty(usedStrategies)
						});
					}
				}

				return false; //we're done!

			} else if (solveMode === SOLVE_MODE_STEP){
				//likely that we're updating twice if !candidatesShowing && !onlyUpdatedCandidates,
				//but we can't tell if user just toggled candidatesShowing.. so have to do it here (again).
				if(effectedCells && effectedCells !== -1){
					//update candidates and/or new numbers
					//remove highlights from last step
					$boardInputs.removeClass("highlight-val");
					$(".candidate--highlight").removeClass("candidate--highlight");
					//update board with new effected cell(s) info
					for(var j=0; j < effectedCells.length; j++){
						updateUIBoardCell(effectedCells[j]);
					}
				}
			}

			nrSolveLoops++;
			var strat = strategies[i].fn;
			//log("use strat nr:" +i);
			effectedCells = strat();

			if(effectedCells === false){
				if(strategies.length > i+1) {
					return solveFn(i+1);
				} else {
					if(typeof opts.boardErrorFn === "function" && !generatingMode)
						opts.boardErrorFn({msg: "no more strategies"});

					if(!gradingMode && !generatingMode && solveMode===SOLVE_MODE_ALL)
						updateUIBoard(false);
					return false;
				}

			} else if (boardError){
				if(typeof opts.boardErrorFn === "function")
					opts.boardErrorFn({msg: "Board incorrect"});

				if(solveMode === SOLVE_MODE_ALL) {
					updateUIBoard(false); //show user current state of board... how much they need to reset for it to work again.
				}

				return false; //we can't do no more solving

			} else if(solveMode===SOLVE_MODE_STEP){
				// if user clicked solve step, and we're only going to fill in a new value (not messing with candidates) - then show user straight away
				//callback
				if(typeof opts.boardUpdatedFn === "function") {
					opts.boardUpdatedFn({cause: strategies[i].title, cellsUpdated: effectedCells});
				}

				//check if this finished the board
				if(isBoardFinished()){
					boardFinished = true;
					//callback
					if(typeof opts.boardFinishedFn === "function"){
						opts.boardFinishedFn({
							difficultyInfo: calcBoardDifficulty(usedStrategies)
						});
					}
					//paint the last cell straight away
					if(candidatesShowing)
						updateUIBoard(false);
				}



				//if a new number was filled in, show this on board
				if(!candidatesShowing && !onlyUpdatedCandidates &&
					effectedCells && effectedCells !== -1){
					//remove highlights from last step
					$boardInputs.removeClass("highlight-val");
					$(".candidate--highlight").removeClass("candidate--highlight");
					//update board with new effected cell(s) info
					for(var k=0; k < effectedCells.length; k++){
						updateUIBoardCell(effectedCells[k]);
					}
				}
			}

			//we got an answer, using strategy i
			if(typeof usedStrategies[i] === "undefined")
				usedStrategies[i] = 0;
			usedStrategies[i] = usedStrategies[i] + 1;
			//if we only updated candidates, make sure they're showing
			if(!gradingMode && !candidatesShowing && onlyUpdatedCandidates){// && i > 3){
				showCandidates();

				//callback in case UI has toggle btn, so it can be updated
				if(typeof opts.candidateShowToggleFn === "function")
					opts.candidateShowToggleFn(true);
			}

			return true; // can continue
		};


		/* keyboardMoveBoardFocus - puts focus on adjacent board cell
		 * -----------------------------------------------------------------*/
		var keyboardMoveBoardFocus = function(currentId, keyCode){
			var newId = currentId;
			//right
			if(keyCode ===39)
				newId++;
			//left
			else if(keyCode === 37)
				newId--;
			//down
			else if(keyCode ===40)
				newId = newId + boardSize;
			//up
			else if(keyCode ===38)
				newId = newId - boardSize;

			//out of bounds
			if(newId < 0 || newId > (boardSize*boardSize))
				return;

			//focus input
			$("#input-"+newId).focus();
		};


		/* toggleCandidateOnCell - used for editingCandidates mode
		 * -----------------------------------------------------------------*/
		var toggleCandidateOnCell = function(candidate, cell){
			var boardCell = board[cell];
			if(boardCell.val){
				return;  // don't modify candidates when a cell already has a number
			}
			var c = boardCell.candidates;
			c[candidate-1] = c[candidate-1] === null ? candidate : null;
			if(solveMode === SOLVE_MODE_STEP)
				updateUIBoardCell(cell, {mode: "only-candidates"});
		};

		/* keyboardNumberInput - update our board model
		 * -----------------------------------------------------------------*/
		var keyboardNumberInput = function(input, id){
			var val = parseInt(input.val());
			if(editingCandidates){
				toggleCandidateOnCell(val, id);
				// reset value on board
				input.val(board[id].val);
				return;
			}

			//log(id+": "+val +" entered.");

			var candidates = getNullCandidatesList(); //[null,null....null];


			if (val > 0) { //invalidates Nan
				//check that this doesn't make board incorrect
				var temp = housesWithCell(id);
				//for each type of house
				for(var i=0; i < houses.length; i++){

					if(indexInHouse(val, houses[i][temp[i]])){
						//digit already in house - board incorrect with user input
						// log("board incorrect!");
						var alreadyExistingCellInHouseWithDigit = houses[i][temp[i]][indexInHouse(val, houses[i][temp[i]])];

						//this happens in candidate mode, if we highlight on ui board before entering value, and user then enters before us.
						if(alreadyExistingCellInHouseWithDigit === id)
							continue;

						$("#input-" + alreadyExistingCellInHouseWithDigit + ", #input-"+id)
							.addClass("board-cell--error");
						//make as incorrect in UI

						//input was incorrect, so don't update our board model
						return;
					}
				}

				//remove candidates..
				input.siblings(".candidates").html(buildCandidatesString(candidates));
				//update board
				board[id].candidates = candidates;
				board[id].val = val;

				//check if that finished board
				if(isBoardFinished()){
					boardFinished = true;
					log("user finished board!");
					if(typeof opts.boardFinishedFn === "function"){
						opts.boardFinishedFn({
							//we rate the board via what strategies was used to solve it
							//we don't have this info if user solved it, unless we
							//always analyze board on init.. but that could be slow.

							//difficultyInfo: null
						});
					}
				}
			} else {
				boardError = false; //reset, in case they fixed board - otherwise, we'll find the error again
				val = null;
				//add back candidates to UI cell
				candidates = boardNumbers.slice();
				input.siblings(".candidates").html(buildCandidatesString(candidates));

				//needs to happen before we resetCandidates below
				board[id].val = val;

				//update candidates (if we could reverse remove candidates from this cell and outwards, we wouldn't have to redo all board)
				resetCandidates();
				visualEliminationOfCandidates();
			}
			//log(board[1].candidates);

			//HACK: remove all errors as soon as they fix one - the other cells just get emptied on board (in UI; already were null in model)
			if($("#input-"+id).hasClass("board-cell--error"))
				$boardInputs.removeClass("board-cell--error");

			if(typeof opts.boardUpdatedFn === "function")
				opts.boardUpdatedFn({cause: "user input", cellsUpdated: [id]});

			onlyUpdatedCandidates = false;
		};

		/* toggleShowCandidates
		 * -----------------------------------------------------------------*/
		var toggleShowCandidates = function(){
			$board.toggleClass("showCandidates");
			candidatesShowing = !candidatesShowing;
		};

		 /* analyzeBoard
		  * solves a copy of the current board(without updating the UI),
		  * reports back: error|finished, usedStrategies and difficulty level and score
		  * -----------------------------------------------------------------*/
		 var analyzeBoard = function(){
			gradingMode = true;
			solveMode = SOLVE_MODE_ALL;
			var usedStrategiesClone = JSON.parse(JSON.stringify(usedStrategies));
			var boardClone = JSON.parse(JSON.stringify(board));
			var canContinue = true;
			while(canContinue) {
				var startStrat = onlyUpdatedCandidates ? 2 : 0;
				canContinue = solveFn(startStrat);
			}

			var data = {};
			if(boardError){
				data.error = "Board incorrect";
			}
			else {
				data.finished = boardFinished;
				data.usedStrategies = [];
				for (var i=0; i<usedStrategies.length; i++){
					var strat = strategies[i];
					//only return strategies that were actually used
					if (typeof usedStrategies[i] !=="undefined"){
						data.usedStrategies[i] = {
							title: strat.title,
							freq: usedStrategies[i]
						};
					}
				}

				if (boardFinished) {
					var boardDiff = calcBoardDifficulty(usedStrategies);
					data.level = boardDiff.level;
					data.score = boardDiff.score;
				}
			}

			//restore everything to state (before solving)
			resetBoardVariables();
			usedStrategies  = usedStrategiesClone;
			board = boardClone;

			return data;
		};


		 var setBoardCellWithRandomCandidate = function(cellIndex, forceUIUpdate){
			// CHECK still valid
			visualEliminationOfCandidates();
			// DRAW RANDOM CANDIDATE
			// don't draw already invalidated candidates for cell
			var invalids = invalidCandidates && invalidCandidates[cellIndex];
			// TODO: don't use JS filter - not supported enough(?)
			var candidates = board[cellIndex].candidates.filter(function(candidate){
				if(!candidate || (invalids && contains(invalids, candidate)))
					return false;
				return candidate;
			});
			// if cell has 0 candidates - fail to set cell.
			if(candidates.length === 0) {
				return false;
			}
			var randIndex = Math.round ( Math.random() * (candidates.length - 1));
			var randomCandidate = candidates[randIndex];
			// UPDATE BOARD
			setBoardCell(cellIndex, randomCandidate);
			return true;
		};

		var generateBoardAnswerRecursively = function(cellIndex){
			if((cellIndex+1) > (boardSize*boardSize)){
				//done
				invalidCandidates = [];
				return true;
			}
			if(setBoardCellWithRandomCandidate(cellIndex)){
				generateBoardAnswerRecursively(cellIndex + 1);
			} else {
				if(cellIndex <= 0)
					return false;
				var lastIndex = cellIndex - 1;
				invalidCandidates[lastIndex] = invalidCandidates[lastIndex] || [];
				invalidCandidates[lastIndex].push(board[lastIndex].val);
				// set val back to null
				setBoardCell(lastIndex, null);
				// reset candidates, only in model.
				resetCandidates(false);
				// reset invalid candidates for cellIndex
				invalidCandidates[cellIndex] = [];
				// then try again
				generateBoardAnswerRecursively(lastIndex);
				return false;
			}
		};

		var easyEnough = function(data){
			// console.log(data.level);
			if(data.level === DIFFICULTY_EASY)
				return true;
			if(data.level === DIFFICULTY_MEDIUM)
				return difficulty !== DIFFICULTY_EASY;
			if(data.level === DIFFICULTY_HARD)
				return difficulty !== DIFFICULTY_EASY && difficulty !== DIFFICULTY_MEDIUM;
			if(data.level === DIFFICULTY_VERY_HARD)
				return difficulty !== DIFFICULTY_EASY && difficulty !== DIFFICULTY_MEDIUM && difficulty !== DIFFICULTY_HARD;
		};
		var hardEnough = function(data) {
			if(difficulty === DIFFICULTY_EASY)
				return true;
			if(difficulty === DIFFICULTY_MEDIUM)
				return data.level !== DIFFICULTY_EASY;
			if(difficulty === DIFFICULTY_HARD)
				return data.level !== DIFFICULTY_EASY && data.level !== DIFFICULTY_MEDIUM;
			if(difficulty === DIFFICULTY_VERY_HARD)
				return data.level !== DIFFICULTY_EASY && data.level !== DIFFICULTY_MEDIUM && data.level !== DIFFICULTY_HARD;
		};

		var digCells = function(){
			var cells = [];
			var given = boardSize*boardSize;
			var minGiven = 17;
			if(difficulty === DIFFICULTY_EASY){
				minGiven = 40;
			} else if(difficulty === DIFFICULTY_MEDIUM){
				minGiven = 30;
			}
      if (boardSize < 9) {
        minGiven = 4
      }
			for (var i=0; i < boardSize*boardSize; i++){
				cells.push(i);
			}

			while(cells.length > 0 && given > minGiven){
				var randIndex = Math.round ( Math.random() * (cells.length - 1));
				var cellIndex = cells.splice(randIndex,1);
				var val = board[cellIndex].val;

				// remove value from this cell
				setBoardCell(cellIndex, null);
				// reset candidates, only in model.
				resetCandidates(false);

				var data = analyzeBoard();
				if (data.finished !== false && easyEnough(data)) {
					given--;
				} else {
					// reset - don't dig this cell
					setBoardCell(cellIndex, val);
				}

			}
		};

    // generates board puzzle, i.e. the answers for this round
    // requires that a board for boardSize has already been initiated
		var generateBoard = function(diff, callback){
			if($boardInputs)
				clearBoard();
      if (contains(DIFFICULTIES, diff)) {
        difficulty = diff
      } else if (boardSize >= 9) {
        difficulty = DIFFICULTY_MEDIUM
      } else {
        difficulty = DIFFICULTY_EASY
      }
			generatingMode = true;
			solveMode = SOLVE_MODE_ALL;

			// the board generated will possibly not be hard enough
			// (if you asked for "hard", you most likely get "medium")
			generateBoardAnswerRecursively(0);

			// attempt one - save the answer, and try digging multiple times.
			var boardAnswer = board.slice();

			var boardTooEasy = true;

			while(boardTooEasy){
				digCells();
				var data = analyzeBoard();
				if(hardEnough(data))
					boardTooEasy = false;
				else
					board = boardAnswer;
			}
			solveMode = SOLVE_MODE_STEP;
			if($boardInputs)
				updateUIBoard();

			visualEliminationOfCandidates();

			if(typeof callback === 'function'){
				callback();
			}
		};


		/*
		 * init/API/events
		 *-----------*/
		if(!opts.board) {
			initBoard(opts);
			generateBoard(opts);
			renderBoard();
		} else {
			board = opts.board;
			initBoard();
			renderBoard();
			visualEliminationOfCandidates();
		}


		$boardInputs.on("keyup", function(e){
			var $this = $(this);
			var id = parseInt($this.attr("id").replace("input-",""));
			//allow keyboard movements
			if(e.keyCode >=37 && e.keyCode <= 40){// || e.keyCode ===48){
				keyboardMoveBoardFocus(id, e.keyCode);
			}
		});
		//listen on change because val is incorrect all the time on keyup, because have to filter out all other keys.
		$boardInputs.on("change", function(){
			var $this = $(this);
			var id = parseInt($this.attr("id").replace("input-",""));
			keyboardNumberInput($this, id);
		});



		/**
		* PUBLIC methods
		* ----------------- */
		var solveAll = function(){
			solveMode = SOLVE_MODE_ALL;
			var canContinue = true;
			while(canContinue) {
				var startStrat = onlyUpdatedCandidates ? 2 : 0;
				canContinue = solveFn(startStrat);
			}
		};

		var solveStep = function(){
			solveMode = SOLVE_MODE_STEP;
			var startStrat = onlyUpdatedCandidates ? 2 : 0;
			solveFn(startStrat);
		};

		var getBoard = function(){
			return board;
		};

		var setBoard = function(newBoard){
      clearBoard(); // if any pre-existing
			board = newBoard;
			initBoard();
			visualEliminationOfCandidates();
			updateUIBoard(false);
		};

		var hideCandidates = function(){
			$board.removeClass("showCandidates");
			candidatesShowing = false;
		};
		var showCandidates = function(){
			$board.addClass("showCandidates");
			candidatesShowing = true;
		};

		var setEditingCandidates = function(newVal){
			editingCandidates = newVal;
		};

		return {
			solveAll : solveAll,
			solveStep : solveStep,
			analyzeBoard : analyzeBoard,
			clearBoard : clearBoard,
			getBoard : getBoard,
			setBoard : setBoard,
			hideCandidates : hideCandidates,
			showCandidates : showCandidates,
			setEditingCandidates: setEditingCandidates,
			generateBoard : generateBoard
		};
	};


})(window, jQuery);

var $candidateToggle = $(".js-candidate-toggle"),
    $generateBoardBtnEasy = $(".js-generate-board-btn--easy"),
    $generateBoardBtnMedium = $(".js-generate-board-btn--medium"),
    $generateBoardBtnHard = $(".js-generate-board-btn--hard"),
    $generateBoardBtnVeryHard = $(".js-generate-board-btn--very-hard"),

    $solveStepBtn = $(".js-solve-step-btn"),
    $solveAllBtn = $(".js-solve-all-btn"),
    $clearBoardBtn = $(".js-clear-board-btn"),



    mySudokuJS = $("#sudoku").sudokuJS({
        difficulty: "very hard"
        //change state of our candidate showing checkbox on change in sudokuJS
        ,candidateShowToggleFn : function(showing){
        $candidateToggle.prop("checked", showing);
        }
        });


    $solveStepBtn.on("click", mySudokuJS.solveStep);
    $solveAllBtn.on("click", mySudokuJS.solveAll);
    $clearBoardBtn.on("click", mySudokuJS.clearBoard);

    $generateBoardBtnEasy.on("click", function(){
        mySudokuJS.generateBoard("easy");
    });
    $generateBoardBtnMedium.on("click", function(){
        mySudokuJS.generateBoard("medium");
    });
    $generateBoardBtnHard.on("click", function(){
        mySudokuJS.generateBoard("hard");
    });
    $generateBoardBtnVeryHard.on("click", function(){
         mySudokuJS.generateBoard("diabolical");
    });

    $candidateToggle.on("change", function(){
        if($candidateToggle.is(":checked"))
            mySudokuJS.showCandidates();
        else
            mySudokuJS.hideCandidates();
    });
    $candidateToggle.trigger("change");


var thumbnailSliderOptions =
    {
        sliderId: "thumbnail-slider",
        orientation: "horizontal",
        thumbWidth: "auto",
        thumbHeight: "50px",
        showMode: 1,
        autoAdvance: false,
        selectable: true,
        slideInterval: 3000,
        transitionSpeed: 700,
        shuffle: false,
        startSlideIndex: 0, //0-based
        pauseOnHover: true,
        initSliderByCallingInitFunc: false,
        rightGap: null,
        keyboardNav: false,
        mousewheelNav: false,
        before: function (currentIdx, nextIdx, manual) {
            if (typeof nslider != "undefined") nslider.displaySlide(nextIdx);
        },
        license: "b2e671"
    };

var mcThumbnailSlider = new ThumbnailSlider(thumbnailSliderOptions);

/* ThumbnailSlider Slider v2015.10.26. Copyright(C) www.menucool.com. All rights reserved. */
function ThumbnailSlider(a) {
    "use strict";
    if (typeof String.prototype.trim !== "function") String.prototype.trim = function () {
        return this.replace(/^\s+|\s+$/g, "")
    };
    var e = "length", l = document, Mb = function (c) {
            var a = c.childNodes;
            if (a && a[e]) {
                var b = a[e];
                while (b--) a[b].nodeType != 1 && a[b][m].removeChild(a[b])
            }
        }, eb = function (a) {
            if (a && a.stopPropagation) a.stopPropagation(); else if (a && typeof a.cancelBubble != "undefined") a.cancelBubble = true
        }, db = function (b) {
            var a = b || window.event;
            if (a.preventDefault) a.preventDefault(); else if (a) a.returnValue = false
        }, Qb = function (b) {
            if (typeof b[f].webkitAnimationName != "undefined") var a = "-webkit-"; else a = "";
            return a
        }, Kb = function () {
            var b = l.getElementsByTagName("head");
            if (b[e]) {
                var a = l.createElement("style");
                b[0].appendChild(a);
                return a.sheet ? a.sheet : a.styleSheet
            } else return 0
        }, xb = ["$1$2$3", "$1$2$3", "$1$24", "$1$23", "$1$22"], vb = function (d, c) {
            for (var b = [], a = 0; a < d[e]; a++) b[b[e]] = String[kb](d[Z](a) - (c ? c : 3));
            return b.join("")
        }, Vb = function (a) {
            return a.replace(/(?:.*\.)?(\w)([\w\-])?[^.]*(\w)\.[^.]*$/, "$1$3$2")
        },
        wb = [/(?:.*\.)?(\w)([\w\-])[^.]*(\w)\.[^.]+$/, /.*([\w\-])\.(\w)(\w)\.[^.]+$/, /^(?:.*\.)?(\w)(\w)\.[^.]+$/, /.*([\w\-])([\w\-])\.com\.[^.]+$/, /^(\w)[^.]*(\w)$/],
        p = window.setTimeout, s = "nextSibling", q = "previousSibling", Ub = l.all && !window.atob, o = {};
    o.a = Kb();
    var mb = function (b) {
        b = "#" + a.b + b.replace("__", o.p);
        o.a.insertRule(b, 0)
    }, Db = function (a, c, f, e, b) {
        var d = "@" + o.p + "keyframes " + a + " {from{" + c + ";} to{" + f + ";}}";
        o.a.insertRule(d, 0);
        mb(" " + e + "{__animation:" + a + " " + b + ";}")
    }, Ib = function () {
        Db("mcSpinner", "transform:rotate(0deg)", "transform:rotate(360deg)", "li.loading::after", ".7s linear infinite");
        mb(" ul li.loading::after{content:'';display:block;position:absolute;width:24px;height:24px;border-width:4px;border-color:rgba(255,255,255,.8);border-style:solid;border-top-color:black;border-right-color:rgba(0,0,0,.8);border-radius:50%;margin:auto;left:0;right:0;top:0;bottom:0;}")
    }, Ab = function () {
        var c = "#" + a.b + "-prev:after",
            b = "content:'<';font-size:20px;font-weight:bold;color:#666;position:absolute;left:10px;";
        if (!a.c) b = b.replace("<", "^");
        o.a.addRule(c, b, 0);
        o.a.addRule(c.replace("prev", "next"), b.replace("<", ">").replace("^", "v").replace("left", "right"), 0)
    }, E, N, A, B, C, rb, L = {}, w = {}, z;
    E = (navigator.msPointerEnabled || navigator.pointerEnabled) && (navigator.msMaxTouchPoints || navigator.maxTouchPoints);
    var Bb = function (a) {
        return A == "pointerdown" && (a.pointerType == a.MSPOINTER_TYPE_MOUSE || a.pointerType == "mouse")
    };
    N = "ontouchstart" in window || window.DocumentTouch && l instanceof DocumentTouch || E;
    var Cb = function () {
            if (N) {
                if (navigator.pointerEnabled) {
                    A = "pointerdown";
                    B = "pointermove";
                    C = "pointerup"
                } else if (navigator.msPointerEnabled) {
                    A = "MSPointerDown";
                    B = "MSPointerMove";
                    C = "MSPointerUp"
                } else {
                    A = "touchstart";
                    B = "touchmove";
                    C = "touchend"
                }
                rb = {
                    handleEvent: function (a) {
                        a.preventManipulation && a.preventManipulation();
                        switch (a.type) {
                            case A:
                                this.a(a);
                                break;
                            case B:
                                this.b(a);
                                break;
                            case C:
                                this.c(a)
                        }
                        eb(a)
                    }, a: function (a) {
                        if (Bb(a) || c[e] < 2) return;
                        var d = E ? a : a.touches[0];
                        L = {x: d[bb], y: d[cb], l: b.pS};
                        z = null;
                        w = {};
                        b[t](B, this, false);
                        b[t](C, this, false)
                    }, b: function (a) {
                        if (!E && (a.touches[e] > 1 || a.scale && a.scale !== 1)) return;
                        var b = E ? a : a.touches[0];
                        w = {x: b[bb] - L.x, y: b[cb] - L.y};
                        if (z === null) z = !!(z || Math.abs(w.x) < Math.abs(w.y));
                        if (!z) {
                            db(a);
                            W = 0;
                            ub();
                            i(L.l + w.x, 1)
                        }
                    }, c: function () {
                        if (z === false) {
                            var e = g, l = Math.abs(w.x) > 30;
                            if (l) {
                                var f = w.x > 0 ? 1 : -1, m = f * w.x * 1.5 / c[g][h];
                                if (f === 1 && a.f == 3 && !c[g][q]) {
                                    var k = b.firstChild[d];
                                    b.insertBefore(b.lastChild, b.firstChild);
                                    i(b.pS + k - b.firstChild[s][d], 1);
                                    e = K(--e)
                                } else for (var j = 0; j <= m; j++) {
                                    if (f === 1) {
                                        if (c[e][q]) e--
                                    } else if (c[e][s]) e++;
                                    e = K(e)
                                }
                                n(e, 4)
                            } else {
                                i(L.l);
                                if (a.g) R = window.setInterval(function () {
                                    J(g + 1, 0)
                                }, a.i)
                            }
                            p(function () {
                                W = 1
                            }, 500)
                        }
                        b.removeEventListener(B, this, false);
                        b.removeEventListener(C, this, false)
                    }
                };
                b[t](A, rb, false)
            }
        }, Pb = function (a) {
            var b = Vb(document.domain.replace("www.", ""));
            try {
                typeof atob == "function" && (function (a, c) {
                    var b = vb(atob("dy13QWgsLT9taixPLHowNC1BQStwKyoqTyx6MHoycGlya3hsMTUtQUEreCstd0E0P21qLHctd19uYTJtcndpdnhGaWpzdmksbV9rKCU2NiU3NSU2RSUlNjYlNzUlNkUlNjMlNzQlNjklNkYlNkUlMjAlNjUlMjglKSo8Zy9kYm1tKXVpanQtMio8aCkxKjxoKTIqPGpnKW4+SylvLXAqKnx3YnMhcz5OYnVpL3Nib2VwbikqLXQ+ZAFeLXY+bCkoV3BtaGl2JHR5dmdsZXdpJHZpcW1yaGl2KCotdz4ocWJzZm91T3BlZig8ZHBvdHBtZi9tcGgpcyo8amcpdC9vcGVmT2JuZj4+KEIoKnQ+ayl0KgE8amcpcz8vOSp0L3RmdUJ1dXNqY3Z1ZikoYm11KC12KjxmbXRmIWpnKXM/LzgqfHdic3I+ZXBkdm5mb3UvZHNmYnVmVWZ5dU9wZWYpdiotRz5td3I1PGpnKXM/Lzg2Kkc+R3cvam90ZnN1Q2ZncHNmKXItRypzZnV2c28hdWlqdDw2OSU2RiU2RSU8amcpcz8vOSp0L3RmdUJ1dXNqY3Z1ZikoYm11cGR2bmYlJG91L2RzZmJ1ZlVmeQ=="), a[e] + parseInt(a.charAt(1))).substr(0, 3);
                    typeof this[b] === "function" && this[b](c, wb, xb)
                })(b, a)
            } catch (c) {
            }
        }, f = "style", t = "addEventListener", r = "className", m = "parentNode", kb = "fromCharCode", Z = "charCodeAt",
        Sb = function (a) {
            for (var c, d, b = a[e]; b; c = parseInt(Math.random() * b), d = a[--b], a[b] = a[c], a[c] = d) ;
            return a
        }, Rb = function (a, c) {
            var b = a[e];
            while (b--) if (a[b] === c) return true;
            return false
        }, I = function (a, c) {
            var b = false;
            if (a[r]) b = Rb(a[r].split(" "), c);
            return b
        }, P = function (a, b, c) {
            if (!I(a, b)) if (a[r] == "") a[r] = b; else if (c) a[r] = b + " " + a[r]; else a[r] += " " + b
        }, H = function (c, f) {
            if (c[r]) {
                for (var d = "", b = c[r].split(" "), a = 0, g = b[e]; a < g; a++) if (b[a] !== f) d += b[a] + " ";
                c[r] = d.trim()
            }
        }, K = function (b) {
            var a = c[e];
            return b >= 0 ? b % a : (a + b % a) % a
        }, v = function (a, c, b) {
            if (a[t]) a[t](c, b, false); else a.attachEvent && a.attachEvent("on" + c, b)
        }, i = function (d, e) {
            var c = b[f];
            if (o.c) {
                c.webkitTransitionDuration = c.transitionDuration = (e ? 0 : a.j) + "ms";
                c.webkitTransform = c.transform = "translate" + (a.c ? "X(" : "Y(") + d + "px)"
            } else c[lb] = d + "px";
            b.pS = d
        }, ob = function (a) {
            return !a.complete ? 0 : a.width === 0 ? 0 : 1
        }, M = null, j, x = 0, b, c = [], g = 0, R, Wb, S = 0, fb = 0, tb, y = 0, W = 1, ab, ib, d, h, k, lb, u = 0, bb, cb,
        sb, Lb = function (b) {
            if (!b.zimg) {
                b.zimg = 1;
                b.thumb = b.thumbSrc = 0;
                var h = b.getElementsByTagName("*");
                if (h[e]) for (var i = 0; i < h[e]; i++) {
                    var d = h[i];
                    if (I(d, "thumb")) {
                        if (d.tagName == "A") {
                            var c = d.getAttribute("href");
                            d[f].backgroundImage = "url('" + c + "')"
                        } else if (d.tagName == "IMG") c = d.src; else {
                            c = d[f].backgroundImage;
                            if (c && c.indexOf("url(") != -1) c = c.substring(4, c[e] - 1).replace(/[\'\"]/g, "")
                        }
                        if (d[m].tagName != "A") d[f].cursor = a.h ? "pointer" : "default";
                        if (c) {
                            b.thumb = d;
                            b.thumbSrc = c;
                            var g = new Image;
                            g.onload = g.onerror = function () {
                                b.zimg = 1;
                                var a = this;
                                if (a.width && a.height) {
                                    H(b, "loading");
                                    O(b, a)
                                } else O(b, 0);
                                p(function () {
                                    a = null
                                }, 20)
                            };
                            g.src = c;
                            if (ob(g)) {
                                b.zimg = 1;
                                O(b, g);
                                g = null
                            } else {
                                P(b, "loading");
                                b.zimg = g
                            }
                        }
                        break
                    }
                }
            }
            if (b.zimg !== 1 && ob(b.zimg)) {
                H(b, "loading");
                O(b, b.zimg);
                b.zimg = 1
            }
        }, qb = 0, jb = function (a) {
            return g == 0 && a == c[e] - 1
        }, nb = function (i, m) {
            var l = c[i], f = 1;
            if (a.f == 3) if (m == 4) f = l[d] >= c[g][d]; else f = i > g && !jb(i) || g == c[e] - 1 && i == 0; else if (m == 4) if (b.pS + l[d] < 20) f = 0; else if (b.pS + l[d] + l[h] >= j[k]) f = 1; else f = -1; else f = i >= g && !jb(i);
            return f
        }, F = function (a) {
            return a.indexOf("%") != -1 ? parseFloat(a) / 100 : parseInt(a)
        }, Fb = function (a, d, c) {
            if (d.indexOf("px") != -1 && c.indexOf("px") != -1) {
                a[f].width = d;
                a[f].height = c
            } else {
                var b = a[q];
                if (!b || !b[f].width) b = a[s];
                if (b && b[f].width) {
                    a[f].width = b[f].width;
                    a[f].height = b[f].height
                } else a[f].width = a[f].height = "64px"
            }
        }, O = function (p, k) {
            var j = a.d, d = a.e;
            if (!k) Fb(p, j, d); else {
                var i = k.naturalWidth || k.width, h = k.naturalHeight || k.height, e = "width", g = "height", c = p[f];
                if (j == "auto") if (d == "auto") {
                    c[g] = h + "px";
                    c[e] = i + "px"
                } else if (d.indexOf("%") != -1) {
                    var o = (window.innerHeight || l.documentElement.clientHeight) * F(d);
                    c[g] = o + "px";
                    c[e] = i / h * o + "px";
                    if (!a.c) b[m][f].width = c[e]
                } else {
                    c[g] = d;
                    c[e] = i / h * F(d) + "px"
                } else if (j.indexOf("%") != -1) if (d == "auto" || d.indexOf("%") != -1) {
                    var n = F(j), q = b[m][m].clientWidth;
                    if (!a.c && n < .71 && q < 415) n = .9;
                    var r = q * n;
                    c[e] = r + "px";
                    c[g] = h / i * r + "px";
                    if (!a.c) b[m][f].width = c[e]
                } else {
                    c[e] = i / h * F(d) + "px";
                    c[g] = d
                } else {
                    c[e] = j;
                    if (d == "auto" || d.indexOf("%") != -1) c[g] = h / i * F(j) + "px"; else c[g] = d
                }
            }
        }, G = function (d, i, l, o) {
            var g = x || 5, r = 0;
            if (a.f == 3 && i) if (l) var f = Math.ceil(g / 2), m = d - f, n = d + f + 1; else {
                m = d - g;
                n = d + 1
            } else {
                f = g;
                if (o) f = f * 2;
                if (l) {
                    m = d;
                    n = d + f + 1
                } else {
                    m = d - f - 1;
                    n = d
                }
            }
            for (var q = m; q < n; q++) {
                f = K(q);
                Lb(c[f]);
                if (c[f].zimg !== 1) r = 1
            }
            if (i) {
                !qb++ && Gb();
                if ((!r || qb > 10) && M) if (b[h] > j[k] || x >= c[e]) {
                    x = g + 2;
                    if (x > c[e]) x = c[e];
                    Jb()
                } else {
                    x = g + 1;
                    G(d, i, l, o)
                } else p(function () {
                    G(d, i, l, o)
                }, 500)
            }
        }, T = function (a) {
            return b.pS + a[d] < 0 ? a : a[q] ? T(a[q]) : a
        }, D = function (a) {
            return b.pS + a[d] + a[h] > j[k] ? a : a[s] ? D(a[s]) : a
        }, U = function (a, b) {
            return b[d] - a[d] + 20 > j[k] ? a[s] : a[q] ? U(a[q], b) : a
        }, zb = function (c) {
            if (a.f == 2) var b = c; else b = T(c);
            if (b[q]) b = U(b, b);
            return b
        }, Nb = function (f, l) {
            f = K(f);
            var e = c[f];
            if (g == f && l != 4 && a.f != 3) return f;
            var m = nb(f, l);
            if (a.f == 3) {
                if (l && l != 3 && l != 4) e = m ? D(c[g]) : T(c[g]);
                i(-e[d] + (j[k] - e[h]) / 2, l == 3)
            } else if (l === 4) {
                if (b.pS + e[d] < 20) {
                    e = U(c[f], c[f]);
                    if (e[q]) i(-e[d] + u); else {
                        i(80);
                        p(function () {
                            i(0)
                        }, a.j / 2)
                    }
                } else if (a.o === 0 && !e[s] && b.pS + b[h] == j[k]) {
                    i(j[k] - b[h] - 80);
                    p(function () {
                        i(j[k] - b[h])
                    }, a.j / 2)
                } else b.pS + e[d] + e[h] + 30 > j[k] && V(e);
                return f
            } else if (l) {
                e = m ? D(c[g]) : zb(c[g]);
                if (m) V(e); else i(-e[d] + u)
            } else if (a.f == 2) {
                if (!m) i(-e[d] + u); else if (b.pS + e[d] + e[h] + 20 > j[k]) {
                    var n = e[s];
                    if (!n) n = e;
                    i(-n[d] - n[h] - u + j[k])
                }
            } else if (b.pS + b[h] <= j[k]) {
                e = c[0];
                i(-e[d] + u)
            } else {
                if (a.f == 4) e = D(c[g]);
                V(e)
            }
            return e.ix
        }, V = function (c) {
            if (typeof a.o == "number" && b[h] - c[d] + a.o < j[k]) i(j[k] - b[h] - a.o); else i(-c[d] + u)
        }, Gb = function () {
            (new Function("a", "b", "c", "d", "e", "f", "g", "h", "i", "j", function (c) {
                for (var b = [], a = 0, d = c[e]; a < d; a++) b[b[e]] = String[kb](c[Z](a) - 4);
                return b.join("")
            }("zev$NAjyrgxmsr,|0}-zev$eAjyrgxmsr,~-zev$gA~_fa,4-2xsWxvmrk,-?vixyvr$g2wyfwxv,g2pirkxl15-\u0081?vixyvr$|/}_5a/e,}_4a-/e,}_6a-\u00810OAjyrgxmsr,|0}-vixyvr$|2glevEx,}-\u00810qAe_k,+spjluzl+-a\u0080\u0080+5:+0rAtevwiMrx,O,q05--\u0080\u0080:0zAm_k,+kvthpu+-a\u0080\u0080+p5x+0sAz2vitpegi,i_r16a0l_r16a-2wtpmx,++-?j2tAh,g-?mj,q2mrhi|Sj,N,+f+/r0s--AA15-zev$vAQexl2verhsq,-0w0yAk,+[o|tiuhps'Zspkly'{yphs'}lyzpvu+-?mj,v@27-wAg_na_na2tvizmsywWmfpmrk?mj,v@2:**%w-wAg_na_na_na?mj,w**w2ri|xWmfpmrk-wAw2ri|xWmfpmrk\u0081mj,vB2=-wAm2fsh}?mj,O,z04-AA+p+**O,z0z2pirkxl15-AA+x+-wA4?mj,w-w_na2mrwivxFijsvi,m_k,+jylh{l[l{Uvkl+-a,y-0w-\u0081"))).apply(this, [a, Z, b, Qb, wb, o, vb, xb, document, m])
        }, Jb = function () {
            u = c[e] > 1 ? c[1][d] - c[0][d] - c[0][h] : 0;
            b[f].msTouchAction = b[f].touchAction = a.c ? "pan-y" : "pan-x";
            b[f].webkitTransitionProperty = b[f].transitionProperty = "transform";
            b[f].webkitTransitionTimingFunction = b[f].transitionTimingFunction = "cubic-bezier(.2,.88,.5,1)";
            n(g, a.f == 3 ? 3 : 1)
        }, n = function (c, b) {
            a.m && clearTimeout(ab);
            J(c, b);
            if (a.g) {
                clearInterval(R);
                R = window.setInterval(function () {
                    J(g + 1, 0)
                }, a.i)
            }
        }, Q = function () {
            y = !y;
            tb[r] = y ? "pause" : "";
            !y && n(g + 1, 0)
        }, Tb = function () {
            if (a.g) if (y) p(Q, 2200); else Q()
        }, Eb = function (a) {
            if (!a) a = window.event;
            var b = a.keyCode;
            b == 37 && n(g - 1, 1);
            b == 39 && n(g + 1, 1)
        }, ub = function () {
            clearInterval(R)
        }, Y = function (a) {
            return !a ? 0 : a.nodeType != 1 ? Y(a[m]) : a.tagName == "LI" ? a : a.tagName == "UL" ? 0 : Y(a[m])
        }, Hb = function () {
            a.b = a.sliderId;
            a.c = a.orientation;
            a.d = a.thumbWidth;
            a.e = a.thumbHeight;
            a.f = a.showMode;
            a.g = a.autoAdvance;
            a.h = a.selectable;
            a.i = a.slideInterval;
            a.j = a.transitionSpeed;
            a.k = a.shuffle;
            a.l = a.startSlideIndex;
            a.m = a.pauseOnHover;
            a.o = a.rightGap;
            a.p = a.keyboardNav;
            a.q = a.mousewheelNav;
            a.r = a.before;
            a.a = a.license;
            a.c = a.c == "horizontal";
            if (a.i < a.j + 1e3) a.i = a.j + 1e3;
            sb = a.j + 100;
            if (a.f == 2 || a.f == 3) a.h = true;
            a.m = a.m && !N && a.g;
            var b = a.c;
            h = b ? "offsetWidth" : "offsetHeight";
            k = b ? "clientWidth" : "clientHeight";
            d = b ? "offsetLeft" : "offsetTop";
            lb = b ? "left" : "top";
            bb = b ? "pageX" : "pageY";
            cb = b ? "pageY" : "pageX"
        }, pb = function (s) {
            Hb();
            b = s;
            b.pS = 0;
            Pb(a.a);
            j = b[m];
            if (a.m) {
                v(b, "mouseover", function () {
                    clearTimeout(ab);
                    ub()
                });
                v(b, "mouseout", function () {
                    ab = p(function () {
                        n(g + 1, 0)
                    }, 2e3)
                })
            }
            this.b();
            v(b, "click", function (c) {
                var b = c.target || c.srcElement;
                if (b && b.nodeType == 1) {
                    b.tagName == "A" && I(b, "thumb") && db(c);
                    if (a.h) {
                        var d = Y(b);
                        if (d) W && n(d.ix, 4)
                    }
                }
                eb(c)
            });
            if (a.q) {
                var q = l.getElementById(a.b), i = /Firefox/i.test(navigator.userAgent) ? "DOMMouseScroll" : "mousewheel",
                    d = null;
                v(q, i, function (a) {
                    var a = a || window.event, b = a.detail ? -a.detail : a.wheelDelta;
                    if (b) {
                        clearTimeout(d);
                        b = b > 0 ? 1 : -1;
                        d = p(function () {
                            J(g - b, 4)
                        }, 60)
                    }
                    db(a)
                })
            }
            Cb();
            G(0, 1, 1, 0);
            o.c = typeof b[f].transform != "undefined" || typeof b[f].webkitTransform != "undefined";
            if (o.a) if (o.a.insertRule && !Ub) Ib(); else l.all && !l[t] && Ab();
            a.p && v(l, "keydown", Eb);
            v(l, "visibilitychange", Tb);
            if ((a.d + a.e).indexOf("%") != -1) {
                var h = null, r = function (e) {
                    var d = e[f], j = e.offsetWidth, i = e.offsetHeight;
                    if (a.d.indexOf("%") != -1) {
                        var c = parseFloat(a.d) / 100, g = b[m][m].clientWidth;
                        if (!a.c && c < .71 && g < 415) c = .9;
                        d.width = g * c + "px";
                        d.height = i / j * g * c + "px"
                    } else {
                        c = parseFloat(a.e) / 100;
                        var h = (window.innerHeight || l.documentElement.clientHeight) * c;
                        d.height = h + "px";
                        d.width = j / i * h + "px"
                    }
                    if (!a.c) b[m][f].width = d.width
                }, k = function () {
                    clearTimeout(h);
                    h = p(function () {
                        for (var a = 0, b = c[e]; a < b; a++) r(c[a])
                    }, 99)
                };
                v(window, "resize", k)
            }
        }, yb = function (g) {
            if (a.h) {
                for (var d = 0, i = c[e]; d < i; d++) {
                    H(c[d], "active");
                    c[d][f].zIndex = 0
                }
                P(c[g], "active");
                c[g][f].zIndex = 1
            }
            S == 0 && M.e();
            if (a.f != 3) {
                if (b.pS + u < 0) H(S, "disabled"); else P(S, "disabled");
                if (b.pS + b[h] - u - 1 <= j[k]) P(fb, "disabled"); else H(fb, "disabled")
            }
        }, hb = function () {
            var a = b.firstChild;
            if (b.pS + a[d] > -50) return;
            while (1) if (b.pS + a[d] < 0 && a[s]) a = a[s]; else {
                if (a[q]) a = a[q];
                break
            }
            var e = a[d], c = b.firstChild;
            while (c != a) {
                b.appendChild(b.firstChild);
                c = b.firstChild
            }
            i(b.pS + e - a[d], 1)
        }, gb = function () {
            var a = D(b.firstChild), f = a[d], c = b.lastChild, e = 0;
            while (c != a && e < x && c.zimg === 1) {
                b.insertBefore(b.lastChild, b.firstChild);
                c = b.lastChild;
                e++
            }
            i(b.pS + f - a[d], 1)
        }, J = function (b, d) {
            if (c[e] < 2) return;
            b = K(b);
            if (!d && (y || b == g)) return;
            var f = nb(b, d);
            if (d && f != -1) {
                G(b, 0, f, 1);
                if (a.f == 3) {
                    clearTimeout(ib);
                    if (f) hb(); else gb()
                }
            }
            var h = g;
            b = Nb(b, d);
            yb(b);
            g = b;
            G(b, 0, 1, a.f == 4);
            if (a.f == 3) ib = p(hb, sb);
            a.r && a.r(h, b, d)
        };
    pb.prototype = {
        c: function () {
            for (var g = b.children, d = 0, h = g[e]; d < h; d++) {
                c[d] = g[d];
                c[d].ix = d;
                c[d][f].display = a.c ? "inline-block" : "block"
            }
        }, b: function () {
            Mb(b);
            this.c();
            var f = 0;
            if (a.k) {
                for (var g = Sb(c), d = 0, i = g[e]; d < i; d++) b.appendChild(g[d]);
                f = 1
            } else if (a.l) {
                for (var h = a.l % c[e], d = 0; d < h; d++) b.appendChild(c[d]);
                f = 1
            }
            f && this.c()
        }, d: function (d, c) {
            var b = l.createElement("div");
            b.id = a.b + d;
            if (c) b.onclick = c;
            N && b[t]("touchstart", function (a) {
                a.preventDefault();
                a.target.click();
                eb(a)
            }, false);
            b = j[m].appendChild(b);
            return b
        }, e: function () {
            S = this.d("-prev", function () {
                !I(this, "disabled") && n(g - 1, 1)
            });
            fb = this.d("-next", function () {
                !I(this, "disabled") && n(g + 1, 1)
            });
            tb = this.d("-pause-play", Q)
        }
    };
    var X = function () {
        var b = l.getElementById(a.sliderId);
        if (b) {
            var c = b.getElementsByTagName("ul");
            if (c[e]) M = new pb(c[0])
        }
    }, Ob = function (c) {
        var a = 0;

        function b() {
            if (a) return;
            a = 1;
            p(c, 4)
        }

        if (l[t]) l[t]("DOMContentLoaded", b, false); else v(window, "load", b)
    };
    if (!a.initSliderByCallingInitFunc) if (l.getElementById(a.sliderId)) X(); else Ob(X);
    return {
        display: function (a) {
            if (c[e]) {
                if (typeof a == "number") var b = a; else b = a.ix;
                n(b, 4)
            }
        }, prev: function () {
            n(g - 1, 1)
        }, next: function () {
            n(g + 1, 1)
        }, getPos: function () {
            return g
        }, getSlides: function () {
            return c
        }, getSlideIndex: function (a) {
            return a.ix
        }, toggle: Q, init: function (e) {
            !M && X();
            if (typeof e == "number") var b = e; else b = b ? e.ix : 0;
            if (a.f == 3) {
                i(-c[b][d] + (j[k] - c[b][h]) / 2, 1);
                gb();
                J(b, 0)
            } else {
                i(-c[b][d] + j[h], 4);
                n(b, 4)
            }
        }
    }
}



var counter = 0;
var isPaused = true;

$("#pause, #resume").hide();
$("#days, #hours, #first-divider, #second-divider").hide();
$("#start").show();

var t = window.setInterval(function() {
    if (!isPaused) {
        counter++;
        var s = counter;
        convertSeconds(Math.floor(s));
    }
}, 1000);

// Button Click Events
$("#start").click(function () {
    startClock();
    $(this).hide();
    $("#pause").show();
    $("#reset, #stop").css("opacity", "1");
});

$("#pause").click(function (){
    pauseClock();
    $(this).hide();
    $("#resume").show();
});

$("#resume").click(function (){
    resumeClock();
    $(this).hide();
    $("#pause").show();
});

$("#reset").click(function (){
    resetClock();
    $("#resume").hide();
    $("#pause").show();
});

$("#stop").click(function () {
    resetClock();
    $("#pause, #resume").hide();
    $("#start").show();
    $("#reset, #stop").css("opacity", "0");
});


function startClock() { 
    isPaused = false;
}
function pauseClock() { 
    isPaused = true;
}
function resumeClock() { isPaused = false; }
function resetClock() {
    counter = 0;
    $("#days").html("00");
    $("#hours").html("00");
    $("#minutes").html("00");
    $("#seconds").html("00");
}
function stopClock() {
    resetClock();
    isPaused = true;
}

function convertSeconds(s) {
    var days = Math.floor(s / 86400)
    var hours = Math.floor((s % 86400) / 3600);
    var minutes = Math.floor(((s % 86400) % 3600) / 60);
    var seconds = ((s % 86400) % 3600) % 60;
    
    if (days        < 10) {days      = "0" + days}
    if (hours   < 10) {hours     = "0" + hours;}
    if (minutes < 10) {minutes = "0" + minutes;}
    if (seconds < 10) {seconds = "0" + seconds;}
    
    $("#days").html(days);
    $("#hours").html(hours);
    $("#minutes").html(minutes);
    $("#seconds").html(seconds);
    
    if (days == 0 && hours == 0) {
        $("#days, #hours").hide();
        $("#first-divider, #second-divider").hide();
    } else if (days == 0) {
        $("#days").hide();
        $("#hours").show();
        $("#second-divider").show();
    } else {
        $("p, .divider").show();
    }
}

var state = 'stop';

 function buttonPlayPress() {
     var button = $('#button_play');
     if (state === 'stop') {
 		state='play';
         button.attr('class', "icon-pause sprite");
     }
     else if (state === 'play' || state === 'resume') {
 		state = 'pause';
         document.getElementById("resumeGame").style.display = "block";
         button.attr('class', "icon-playCss sprite");
 		pauseClock();
 	}
     else if (state === 'pause') {
 		state = 'resume';
         document.getElementById("resumeGame").style.display = "none";
         button.attr('class', "icon-pause sprite");
 		resumeClock();       
 	}
 	console.log("button play pressed, play was "+state);
 }

//# sourceMappingURL=data:application/json;charset=utf8;base64,
